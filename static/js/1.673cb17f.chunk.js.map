{"version":3,"sources":["../node_modules/webpack/buildin/harmony-module.js","../node_modules/@firebase/database/dist/index.esm.js"],"names":["module","exports","originalModule","webpackPolyfill","Object","create","children","defineProperty","enumerable","get","l","i","SDK_VERSION","setSDKVersion","version","DOMStorageWrapper","domStorage_","this","prefix_","prototype","set","key","value","removeItem","prefixedName_","setItem","stringify","storedVal","getItem","jsonEval","remove","name","toString","MemoryStorage","cache_","isInMemoryStorage","contains","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","Logger","LUIDGenerator","id","sha1","str","utf8Bytes","stringToByteArray","Sha1","update","sha1Bytes","digest","base64","encodeByteArray","buildLogMessage_","varArgs","_i","arguments","length","message","arg","Array","isArray","apply","logger","firstLog_","enableLogging","logger_","persistent","assert","logLevel","LogLevel","VERBOSE","log","bind","logWrapper","prefix","__spreadArray","__read","error","fatal","Error","warn","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","fn","hasOwnProperty","doubleToIEEE754String","v","s","f","ln","bias","Infinity","Math","abs","pow","min","floor","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","INTEGER_REGEXP_","RegExp","INTEGER_32_MIN","INTEGER_32_MAX","test","intVal","exceptionGuard","setTimeout","stack","setTimeoutNonBlocking","time","timeout","AppCheckTokenProvider","appName_","appCheckProvider","_this","appCheck","getImmediate","optional","then","getToken","forceRefresh","Promise","resolve","reject","addTokenChangeListener","listener","_a","addTokenListener","notifyForInvalidToken","FirebaseAuthTokenProvider","firebaseOptions_","authProvider_","auth_","onInit","auth","catch","code","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","errorMessage","EmulatorTokenProvider","accessToken","OWNER","PROTOCOL_VERSION","FORGE_DOMAIN_RE","WEBSOCKET","LONG_POLLING","RepoInfo","host","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","_host","_domain","indexOf","internalHost","isCacheableHost","isCustomHost","newHost","configurable","toURLString","protocol","query","repoInfoConnectionURL","repoInfo","type","params","connURL","repoInfoNeedsQueryParam","pairs","StatsCollection","counters_","incrementCounter","amount","deepCopy","collections","reporters","statsManagerGetCollection","hashString","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","callback","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","FIREBASE_LONGPOLL_START_PARAM","FIREBASE_LONGPOLL_CLOSE_COMMAND","BrowserPollConnection","connId","applicationId","appCheckToken","authToken","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","isNodeSdk","document","readyState","called_1","wrappedFn_1","body","addEventListener","attachEvent","executeWhenDOMReady","scriptTagHolder","FirebaseIFrameScriptHolder","args","command","arg1","arg2","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","random","uniqueCallbackIdentifier","location","hostname","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","href","Windows","UI","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","base64Encode","MAX_URL_DATA_SIZE","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","domain","iframeContents","doc","write","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","size","theURL","curDataString","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","add","doNewRequest","delete","keepaliveTimeout","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","options","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","userAgent","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","String","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","e_1","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","_b","__values","ALL_TRANSPORTS","_c","next","done","transport","e_1_1","return","call","initialTransport","upgradeTransport","Connection","repoInfo_","applicationId_","appCheckToken_","authToken_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","reason","ServerActions","put","pathString","onComplete","hash","merge","refreshAuthToken","token","refreshAppCheckToken","onDisconnectPut","onDisconnectMerge","onDisconnectCancel","reportStats","stats","EventEmitter","allowedEvents_","listeners_","trigger","eventType","listeners","context","on","validateEventType_","eventData","getInitialEvent","off","splice","find","et","OnlineMonitor","_super","online_","isMobileCordova","__extends","getInstance","currentlyOnline","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","newEmptyPath","pathGetFront","path","pathGetLength","pathPopFront","pathGetBack","pathSlice","begin","slice","pathParent","pieces","pathChild","childPathObj","childPieces","pathIsEmpty","newRelativePath","outerPath","innerPath","outer","inner","pathCompare","left","right","leftKeys","rightKeys","cmp","pathEquals","other","j","pathContains","ValidationPath","errorPrefix_","parts_","byteLength_","max","stringLength","validationPathCheckValid","validationPath","validationPathToErrorString","__EMPTY_NODE","MAX_NODE$2","VisibilityMonitor","hidden","visibilityChange","visible_","visible","RECONNECT_MIN_DELAY","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","appCheckTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","Map","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","forceTokenRefresh_","invalidAuthTokenCount_","invalidAppCheckTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","onVisible_","onOnline_","action","onResponse","curReqNum","r","initConnection_","deferred","Deferred","request","p","_path","q","_queryObject","outstandingGet","index","undefined","sendGet_","promise","listen","currentHashFn","tag","queryId","_queryIdentifier","has","_queryParams","isDefault","loadsAllData","listenSpec","hashFn","sendListen_","req","status","warnOnListenWarnings_","removeListen_","warnings","safeGet","indexSpec","getIndex","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isAdmin","tryAppCheck","token_1","authMethod","isValidFormat","requestData","cred","res","onAuthRevoked_","onAppCheckRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","response","putInternal","sendPut_","queued","result","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","Date","getTime","handleTimestamp_","sendConnectStats_","restoreState_","scheduleConnect_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","__awaiter","onDataMessage","onReady","onDisconnect_1","canceled_1","connection_1","closeFn","sendRequestFn","error_1","__generator","label","nextConnectionId_","trys","all","sent","interrupt","resume","isEmpty","delta","serverTimeOffset","map","normalizedPathString","statusCode","explanation","console","replace","e_2","values","_d","queries","_e","_f","e_2_1","clientName","isReactNative","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","val","isDefinedOn","assertionError","maxPost","makePost","indexValue","KEY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","pop","hasNext","peek","LLRBNode","color","RED","SortedMap","EMPTY_NODE","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","__childrenNodeConstructor","nodeFromJSON$1","MAX_NODE$1","priorityHashText","priority","validatePriorityNode","priorityNode","isLeafNode","getPriority","LeafNode","value_","priorityNode_","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","exportFormat","getValue","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","equals","_defaultIndexMap","PRIORITY_INDEX","PriorityIndex","aPriority","bPriority","indexCmp","LOG_2","Base12Num","num","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","high","namedNode","middle","root","base12","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","buildFrom12Array","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","newIndex","sawIndexedValue","iter","indexName","newIndexSet","__assign","newIndexes","addToIndexes","indexedChildren","existingSnap","newChildren","removeFromIndexes","ChildrenNode","children_","indexMap_","Default","child","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","setMaxNode","nodeFromJSON","json","node_1","childData","children_1","childrenHavePriority_1","childSet","sortedChildSet","setNodeFromJSON","PathIndex","indexPath_","extractChild","snap","aChild","bChild","valueNode","VALUE_INDEX","ValueIndex","PUSH_CHARS","nextPushId","lastPushTime","lastRandChars","now","duplicateTime","timeStampChars","charAt","successor","keyAsInt","i_1","source","sourcePlusOne","repeat","changeValue","snapshotNode","changeChildAdded","changeChildRemoved","changeChildChanged","oldSnap","IndexedFilter","index_","newChild","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","matches","filtered","self","hasStart","startName","getIndexStartName","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","indexCompare_1","foundStartPost","childKey","childSnap","changeAccumulator","indexCmp_1","oldEventCache","newChildNamedNode","windowBoundary","inRange","oldChildSnap","nextChild","getChildAfterChild","compareNext","newEventCache","QueryParams","limitSet_","startSet_","startNameSet_","startAfterSet_","endSet_","endNameSet_","endBeforeSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","hasStartAfter","hasEndBefore","hasLimit","hasAnchoredLimit","queryParamsStartAt","queryParams","newParams","queryParamsEndAt","queryParamsOrderBy","queryParamsToRestQueryStringParameters","orderBy","qs","queryParamsGetQueryObject","viewFrom","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","restRequest_","querystring","xhr","XMLHttpRequest","responseText","SnapshotHolder","rootNode_","getNode","updateSnapshot","newSnapshotNode","newSparseSnapshotTree","sparseSnapshotTreeRemember","sparseSnapshotTree","clear","sparseSnapshotTreeForget","tree","sparseSnapshotTreeForEachTree","prefixPath","func","forEach","sparseSnapshotTreeForEachChild","OperationType","StatsListener","collection_","last_","newStats","stat","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","reportedStats","haveStatsToReport","newOperationSourceServerTaggedQuery","fromUser","fromServer","tagged","emptyChildrenSingleton","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","EventGenerator","query_","eventGeneratorGenerateEventsForType","eventGenerator","events","changes","registrations","eventCache","filteredChanges","filter","change","aWrapped","bWrapped","eventGeneratorCompareChanges","materializedChange","prevName","eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","newViewCache","serverCache","viewCacheUpdateEventSnap","viewCache","eventSnap","complete","viewCacheUpdateServerSnap","serverSnap","viewCacheGetCompleteEventSnap","viewCacheGetCompleteServerSnap","ImmutableTree","fromObject","childPath","findRootMostMatchingPathAndValue","relativePath","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","CompoundWrite","writeTree_","empty","compoundWriteAddWrite","compoundWrite","rootmost","rootMostPath","newWriteTree","compoundWriteAddWrites","updates","newWrite","compoundWriteRemoveWrite","compoundWriteHasCompleteWrite","compoundWriteGetCompleteNode","compoundWriteGetCompleteChildren","compoundWriteChildCompoundWrite","shadowingNode","compoundWriteIsEmpty","compoundWriteApply","applySubtreeWrite","writeTree","priorityWrite_1","writeTreeChildWrites","newWriteTreeRef","writeTreeRemoveWrite","writeId","allWrites","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","writeTreeRecordContainsPath_","visibleWrites","writeTreeLayerTree_","writeTreeDefaultFilter_","lastWriteId","writeTreeResetTree_","writeRecord","writes","treeRoot","writePath","deepNode","writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","subMerge","writeTreeRefCalcCompleteEventCache","writeTreeRef","writeTreeRefCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","merge_1","writeTreeCalcCompleteEventChildren","writeTreeRefCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","writeTreeCalcEventCacheAfterServerOverwrite","writeTreeRefShadowingWrite","writeTreeShadowingWrite","writeTreeRefCalcIndexedSlice","completeServerData","toIterate","nodes","writeTreeCalcIndexedSlice","writeTreeRefCalcCompleteChild","existingServerCache","writeTreeCalcCompleteChild","writeTreeRefChild","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","from","NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","getCompleteChild","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","viewProcessorApplyOperation","viewProcessor","oldViewCache","operation","writesCache","completeCache","filterServerNode","accumulator","overwrite","viewProcessorApplyUserOverwrite","viewProcessorApplyServerOverwrite","changedChildren","curViewCache","viewProcessorCacheHasChild","viewProcessorApplyUserMerge","viewProcessorApplyServerMerge","ackUserWrite","serverChildren","viewProcessorRevertUserWrite","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","viewProcessorAckUserWrite","oldServerNode","viewProcessorGenerateEventCacheAfterServerEvent","viewProcessorListenComplete","isLeafOrEmpty","oldCompleteSnap","viewProcessorMaybeAddValueEvent","changePath","oldEventSnap","completeEventChildren","completeNode","oldEventNode","updatedPriority","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","viewProcessorApplyMerge","viewMergeTree","childMergeTree","isUnknownDeepMerge","referenceConstructor$1","View","initialViewCache","eventRegistrations_","indexFilter","processor_","newViewProcessor","initialServerCache","initialEventCache","eventGenerator_","viewGetCompleteServerCache","view","cache","viewIsEmpty","viewRemoveEventRegistration","eventRegistration","cancelError","cancelEvents","path_1","maybeEvent","createCancelEvent","remaining","existing","hasAnyCallback","concat","viewApplyOperation","viewGenerateEventsForChanges_","eventRegistrations","moves","eventGeneratorGenerateEventsForChanges","referenceConstructor","SyncPoint","views","syncPointApplyOperation","syncPoint","optCompleteServerCache","syncPointGetView","serverCacheComplete","eventCacheComplete","syncPointAddEventRegistration","viewAddEventRegistration","initialChanges","viewGetInitialEvents","syncPointRemoveEventRegistration","removed","hadCompleteView","syncPointHasCompleteView","entries","viewQueryId","_repo","syncPointGetQueryViews","e_3","e_3_1","syncPointGetCompleteServerCache","e_4","e_4_1","syncPointViewForQuery","syncPointGetCompleteView","syncPointViewExistsForQuery","e_5","e_5_1","syncTreeNextQueryTag_","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","syncTreeApplyUserOverwrite","syncTree","newData","writeTreeAddOverwrite","syncTreeApplyOperationToSyncPoints_","syncTreeApplyUserMerge","writeTreeAddMerge","changeTree","syncTreeAckUserWrite","record","writeTreeGetWrite","affectedTree_1","syncTreeApplyServerOverwrite","syncTreeRemoveEventRegistration","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","maybeChildSyncPoint","childMap","views_1","_key","childViews","syncTreeCollectDistinctViewsForSubTree_","newQuery","syncTreeCreateListenerForView_","startListening","syncTreeQueryForListening_","syncTreeTagForQuery_","stopListening","queryToRemove","tagToRemove","syncTreeMakeQueryKey_","removedQuery","removedQueryKey","removedQueryTag","syncTreeRemoveTags_","syncTreeAddEventRegistration","foundAncestorDefaultView","pathToSyncPoint","sp","childSyncPoint","viewAlreadyExists","queryKey","queriesToStop","queries_1","childQueries","queryToStop","syncTreeSetupListener_","syncTreeCalcCompleteEventCache","syncTreeGetServerValue","serverCacheNode","viewGetCompleteNode","syncTreeApplyOperationHelper_","syncPointTree","syncTreeApplyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","viewGetServerCache","syncTreeQueryKeyForTag_","syncTreeParseQueryKey_","queryPath","syncTreeApplyTaggedOperation_","syncTreeApplyTaggedListenComplete","syncTreeApplyListenComplete","toUpperCase","errorForServerCode","splitIndex","ExistingValueProvider","DeferredValueProvider","syncTree_","path_","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","op","unused","existingNode","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","Tree","parent","childCount","treeSubTree","pathObj","treeGetValue","treeSetValue","treeUpdateParents","treeHasChildren","treeForEachChild","treeForEachDescendant","includeSelf","childrenFirst","treeGetPath","childEmpty","treeIsEmpty","childExists","treeUpdateChild","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","isValidPriority","validateFirebaseDataArg","fnName","validateFirebaseData","errorPrefix","hasDotValue_1","hasActualChild_1","validationPathPush","last","validationPathPop","validateFirebaseMergeDataArg","errorPrefix$1","mergePaths","curPath","prevPath","validateFirebaseMergePaths","validatePriority","validateEventType","validateKey","argumentName","validatePathString","validateWritablePath","validateUrl","parsedUrl","isValidRootPathString","validateBoolean","bool","EventQueue","eventLists_","recursionDepth_","eventQueueQueueEvents","eventQueue","eventDataList","currList","getPath","eventQueueRaiseEventsAtPath","eventQueueRaiseQueuedEventsMatchingPredicate","eventPath","eventQueueRaiseEventsForChangedPath","changedPath","sentAll","eventList","eventListRaise","eventFn","getEventRunner","INTERRUPT_REASON","Repo","forceRestClient_","appCheckProvider_","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","transactionQueueTree_","persistentConnection_","repoStart","repo","appId","authOverride","search","isMerge","repoOnDataUpdate","repoOnConnectStatus","connectStatus","repoUpdateInfo","repoOnServerInfoUpdate","statsReporter_","creatorFunction","statsManagerGetOrCreateReporter","infoData_","infoSyncTree_","infoEvents","serverSyncTree_","repoServerTime","offset","repoGenerateServerValues","taggedChildren","raw","syncTreeApplyTaggedQueryMerge","taggedSnap","syncTreeApplyTaggedQueryOverwrite","syncTreeApplyServerMerge","repoRerunTransactions","repoLog","resolvedOnDisconnectTree","resolved","repoAbortTransactions","repoRunOnDisconnectEvents","repoGetNextWriteId","repoSetWithPriority","newVal","newNodeUnresolved","success","clearEvents","repoCallOnCompleteCallback","repoOnDisconnectCancel","repoOnDisconnectSet","repoRemoveEventCallbackForQuery","repoInterrupt","repoGetLatestState","excludeSets","repoSendReadyTransactions","repoPruneCompletedTransactionsBelowNode","queue","repoBuildTransactionQueue","every","transaction","setsToIgnore","txn","currentWriteId","latestState","snapToSend","latestHash","retryCount","currentOutputSnapshotRaw","dataToSend","pathToSend","callbacks","currentOutputSnapshotResolved","unwatcher","abortReason","repoSendTransactionQueue","rootMostTransactionNode","repoGetAncestorTransactionNode","abortTransaction","currentNode","currentInputSnapshot","newDataNode","oldWriteId","newNodeResolved","applyLocally","repoRerunTransactionQueue","transactionNode","transactionQueue","repoAggregateTransactionQueuesForNode","order","nodeQueue","to","treeForEachAncestor","repoAbortTransactionsOnNode","lastSent","parseRepoInfo","dataURL","parseDatabaseURL","scheme","subdomain","port","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodeURIComponent","decodePath","queryString","results","segment","kv","decodeQuery","hostWithoutPort","dotInd","DataEvent","snapshot","ref","getEventType","exportVal","CancelEvent","CallbackContext","snapshotCallback","cancelCallback","onValue","expDataSnapshot","previousChildName","onCancel","hasCancelCallback","userCallback","OnDisconnect$1","OnDisconnect","cancel","wrapCallback","setWithPriority","repoOnDisconnectSetWithPriority","childrenToMerge","repoOnDisconnectUpdate","QueryImpl","_orderByCalled","ReferenceImpl","isEqual","getModularInstance","sameRepo","samePath","sameQueryIdentifier","toJSON","encodeURIComponent","pathToUrlEncodedString","validateNoPreviousOrderByCall","validateQueryEndpoints","startNode","endNode","tooManyArgsError","wrongArgTypeError","validateLimit","parentPath","DataSnapshot$1","DataSnapshot","_node","_index","childRef","exists","hasChildren","db","_checkNotDeleted","_root","refFromURL","parsedURL","thennablePushRef","pushRef","setPriority","changedKey","changedValue","writeId_1","repoUpdate","cached","err","repoGetValue","ValueEventRegistration","callbackContext","ChildEventRegistration","eventToCheck","cancelCallbackOrListenOptions","onlyOnce","userCallback_1","onceCallback","dataSnapshot","container","repoAddEventCallbackForQuery","onChildAdded","onChildChanged","onChildMoved","onChildRemoved","expCallback","QueryConstraint","QueryEndAtConstraint","_value","_apply","endAt","QueryEndBeforeConstraint","queryParamsEndBefore","endBefore","QueryStartAtConstraint","startAt","QueryStartAfterConstraint","queryParamsStartAfter","startAfter","QueryLimitToFirstConstraint","_limit","newLimit","queryParamsLimitToFirst","limitToFirst","limit","QueryLimitToLastConstraint","queryParamsLimitToLast","limitToLast","QueryOrderByChildConstraint","parsedPath","orderByChild","QueryOrderByKeyConstraint","orderByKey","QueryOrderByPriorityConstraint","orderByPriority","QueryOrderByValueConstraint","orderByValue","QueryEqualToValueConstraint","equalTo","queryConstraints","queryImpl","queryConstraints_1","queryConstraints_1_1","constraint","syncPointSetReferenceConstructor","syncTreeSetReferenceConstructor","repos","useRestClient","repoManagerDatabaseFromApp","app","authProvider","dbUrl","databaseURL","projectId","isEmulator","dbEmulatorHost","authTokenProvider","appRepos","repoManagerCreateRepo","FirebaseDatabase","_repoInternal","_instanceStarted","_rootInternal","_delete","appName","repoManagerDeleteRepo","apiName","useDatabaseEmulator","tokenProvider","mockUserToken","createMockUserToken","repoManagerApplyEmulatorSettings","goOffline","goOnline","SERVER_TIMESTAMP","TransactionResult$1","TransactionResult","committed","runTransaction","transactionUpdate","currentState","queueNode","priorityForNode","repoStartTransaction","_delegate","validateArgCount","validateCallback","objectToMerge","newObjectToMerge","_database","getRef","Reference","Query","database","cancelCallbackOrContext","ret","getCancelAndContextArgs_","valueCallback","expSnapshot","validateContextObject","once","failureCallbackOrContext","cancelOrContext","getKey","getParent","getRoot","transactionResult","expPromise","expRef","Database","INTERNAL","useEmulator","ServerValue","TIMESTAMP","increment","freeze","__proto__","forceLongPolling","forceWebSockets","setSecurityDebugCallback","showDelta","longestName","reduce","previousValue","currentValue","paddedStat","repoStats","statsIncrementCounter","metric","reporter","repoStatsIncrementCounter","interceptServerData","repoInterceptServerData","initStandalone","customAuthImpl","Provider","ComponentContainer","setComponent","Component","instance","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","ConnectionTarget","TEST_ACCESS","hijackHash","newHash","oldPut","queryIdentifier","forceRestClient","repoManagerForceRestClient","registerComponent","instanceIdentifier","getProvider","setServiceProps","setMultipleInstances","registerVersion","registerDatabase","firebase"],"mappings":"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","file":"static/js/1.673cb17f.chunk.js","sourcesContent":["module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import firebase from '@firebase/app';\nimport { Provider, ComponentContainer, Component } from '@firebase/component';\nimport { stringify, jsonEval, contains, assert, isNodeSdk, base64, stringToByteArray, Sha1, deepCopy, base64Encode, isMobileCordova, stringLength, Deferred, safeGet, isAdmin, isValidFormat, isEmpty, isReactNative, assertionError, map, querystring, errorPrefix, getModularInstance, createMockUserToken, validateArgCount, validateCallback, validateContextObject } from '@firebase/util';\nimport { __spreadArray, __read, __values, __extends, __awaiter, __generator, __assign } from 'tslib';\nimport { Logger, LogLevel } from '@firebase/logger';\n\nvar name = \"@firebase/database\";\nvar version = \"0.10.7\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** The semver (www.semver.org) version of the SDK. */\r\nvar SDK_VERSION = '';\r\n// SDK_VERSION should be set before any database instance is created\r\nfunction setSDKVersion(version) {\r\n    SDK_VERSION = version;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param key - The key to save the value under\r\n     * @param value - The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @returns The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return jsonEval(storedVal);\r\n        }\r\n    };\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param domStorageName - Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @returns Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param str - The string to hash\r\n * @returns {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    var sha1 = new Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return base64.encodeByteArray(sha1Bytes);\r\n};\r\nvar buildLogMessage_ = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < varArgs.length; i++) {\r\n        var arg = varArgs[i];\r\n        if (Array.isArray(arg) ||\r\n            (arg &&\r\n                typeof arg === 'object' &&\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                typeof arg.length === 'number')) {\r\n            message += buildLogMessage_.apply(null, arg);\r\n        }\r\n        else if (typeof arg === 'object') {\r\n            message += stringify(arg);\r\n        }\r\n        else {\r\n            message += arg;\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n */\r\nvar logger = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param logger_ - A flag to turn on logging, or a custom logger\r\n * @param persistent - Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = LogLevel.VERBOSE;\r\n        logger = logClient.log.bind(logClient);\r\n        if (persistent) {\r\n            SessionStorage.set('logging_enabled', true);\r\n        }\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger = logger_;\r\n    }\r\n    else {\r\n        logger = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\nvar log = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger === null && SessionStorage.get('logging_enabled') === true) {\r\n            enableLogging(true);\r\n        }\r\n    }\r\n    if (logger) {\r\n        var message = buildLogMessage_.apply(null, varArgs);\r\n        logger(message);\r\n    }\r\n};\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, __spreadArray([prefix], __read(varArgs)));\r\n    };\r\n};\r\nvar error = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\r\n    logClient.error(message);\r\n};\r\nvar fatal = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\nvar warn = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data !== data || // NaN\r\n            data === Number.POSITIVE_INFINITY ||\r\n            data === Number.NEGATIVE_INFINITY));\r\n};\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete') {\r\n                    wrappedFn_1();\r\n                }\r\n            });\r\n            // fallback to onload.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @returns {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + stringify(obj));\r\n    }\r\n};\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return stringify(obj);\r\n    }\r\n    var keys = [];\r\n    // eslint-disable-next-line guard-for-in\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0) {\r\n            key += ',';\r\n        }\r\n        key += stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param str - The string\r\n * @param segsize - The maximum number of chars in the string.\r\n * @returns The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj - The object or array to iterate over\r\n * @param fn - The function to apply\r\n */\r\nfunction each(obj, fn) {\r\n    for (var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param v - A double\r\n *\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1;\r\n    var s, e, f, ln, i;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    var bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    var str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1) {\r\n            hexByte = '0' + hexByte;\r\n        }\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n */\r\nfunction errorForServerCode(code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code === 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code === 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query._path.toString() + ': ' + reason);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n}\r\n/**\r\n * Used to test for integer-looking strings\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\r\n/**\r\n * For use in keys, the minimum possible 32-bit integer.\r\n */\r\nvar INTEGER_32_MIN = -2147483648;\r\n/**\r\n * For use in kyes, the maximum possible 32-bit integer.\r\n */\r\nvar INTEGER_32_MAX = 2147483647;\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param fn - The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @returns {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param fn - Function to run.\r\n * @param time - Milliseconds to wait before running.\r\n * @returns The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around AppCheck's token fetching capabilities.\r\n */\r\nvar AppCheckTokenProvider = /** @class */ (function () {\r\n    function AppCheckTokenProvider(appName_, appCheckProvider) {\r\n        var _this = this;\r\n        this.appName_ = appName_;\r\n        this.appCheckProvider = appCheckProvider;\r\n        this.appCheck = appCheckProvider === null || appCheckProvider === void 0 ? void 0 : appCheckProvider.getImmediate({ optional: true });\r\n        if (!this.appCheck) {\r\n            appCheckProvider === null || appCheckProvider === void 0 ? void 0 : appCheckProvider.get().then(function (appCheck) { return (_this.appCheck = appCheck); });\r\n        }\r\n    }\r\n    AppCheckTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        var _this = this;\r\n        if (!this.appCheck) {\r\n            return new Promise(function (resolve, reject) {\r\n                // Support delayed initialization of FirebaseAppCheck. This allows our\r\n                // customers to initialize the RTDB SDK before initializing Firebase\r\n                // AppCheck and ensures that all requests are authenticated if a token\r\n                // becomes available before the timoeout below expires.\r\n                setTimeout(function () {\r\n                    if (_this.appCheck) {\r\n                        _this.getToken(forceRefresh).then(resolve, reject);\r\n                    }\r\n                    else {\r\n                        resolve(null);\r\n                    }\r\n                }, 0);\r\n            });\r\n        }\r\n        return this.appCheck.getToken(forceRefresh);\r\n    };\r\n    AppCheckTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        var _a;\r\n        (_a = this.appCheckProvider) === null || _a === void 0 ? void 0 : _a.get().then(function (appCheck) { return appCheck.addTokenListener(listener); });\r\n    };\r\n    AppCheckTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        warn(\"Provided AppCheck credentials for the app named \\\"\" + this.appName_ + \"\\\" \" +\r\n            'are invalid. This usually indicates your app was not initialized correctly.');\r\n    };\r\n    return AppCheckTokenProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar FirebaseAuthTokenProvider = /** @class */ (function () {\r\n    function FirebaseAuthTokenProvider(appName_, firebaseOptions_, authProvider_) {\r\n        var _this = this;\r\n        this.appName_ = appName_;\r\n        this.firebaseOptions_ = firebaseOptions_;\r\n        this.authProvider_ = authProvider_;\r\n        this.auth_ = null;\r\n        this.auth_ = authProvider_.getImmediate({ optional: true });\r\n        if (!this.auth_) {\r\n            authProvider_.onInit(function (auth) { return (_this.auth_ = auth); });\r\n        }\r\n    }\r\n    FirebaseAuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        var _this = this;\r\n        if (!this.auth_) {\r\n            return new Promise(function (resolve, reject) {\r\n                // Support delayed initialization of FirebaseAuth. This allows our\r\n                // customers to initialize the RTDB SDK before initializing Firebase\r\n                // Auth and ensures that all requests are authenticated if a token\r\n                // becomes available before the timoeout below expires.\r\n                setTimeout(function () {\r\n                    if (_this.auth_) {\r\n                        _this.getToken(forceRefresh).then(resolve, reject);\r\n                    }\r\n                    else {\r\n                        resolve(null);\r\n                    }\r\n                }, 0);\r\n            });\r\n        }\r\n        return this.auth_.getToken(forceRefresh).catch(function (error) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error && error.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        if (this.auth_) {\r\n            this.auth_.addAuthTokenListener(listener);\r\n        }\r\n        else {\r\n            this.authProvider_\r\n                .get()\r\n                .then(function (auth) { return auth.addAuthTokenListener(listener); });\r\n        }\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.authProvider_\r\n            .get()\r\n            .then(function (auth) { return auth.removeAuthTokenListener(listener); });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.appName_ +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.firebaseOptions_) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.firebaseOptions_) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return FirebaseAuthTokenProvider;\r\n}());\r\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\r\nvar EmulatorTokenProvider = /** @class */ (function () {\r\n    function EmulatorTokenProvider(accessToken) {\r\n        this.accessToken = accessToken;\r\n    }\r\n    EmulatorTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return Promise.resolve({\r\n            accessToken: this.accessToken\r\n        });\r\n    };\r\n    EmulatorTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // Invoke the listener immediately to match the behavior in Firebase Auth\r\n        // (see packages/auth/src/auth.js#L1807)\r\n        listener(this.accessToken);\r\n    };\r\n    EmulatorTokenProvider.prototype.removeTokenChangeListener = function (listener) { };\r\n    EmulatorTokenProvider.prototype.notifyForInvalidToken = function () { };\r\n    /** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\r\n    EmulatorTokenProvider.OWNER = 'owner';\r\n    return EmulatorTokenProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\r\n// firebase.corp.google.com\r\nvar FORGE_DOMAIN_RE = /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar APPLICATION_ID_PARAM = 'p';\r\nvar APP_CHECK_TOKEN_PARAM = 'ac';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param host - Hostname portion of the url for the repo\r\n     * @param secure - Whether or not this repo is accessed over ssl\r\n     * @param namespace - The namespace represented by the repo\r\n     * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param nodeAdmin - Whether this instance uses Admin SDK credentials\r\n     * @param persistenceKey - Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, nodeAdmin, persistenceKey, includeNamespaceInQueryParams) {\r\n        if (nodeAdmin === void 0) { nodeAdmin = false; }\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        if (includeNamespaceInQueryParams === void 0) { includeNamespaceInQueryParams = false; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.nodeAdmin = nodeAdmin;\r\n        this.persistenceKey = persistenceKey;\r\n        this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\r\n        this._host = host.toLowerCase();\r\n        this._domain = this._host.substr(this._host.indexOf('.') + 1);\r\n        this.internalHost =\r\n            PersistentStorage.get('host:' + host) || this._host;\r\n    }\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this._domain !== 'firebaseio.com' &&\r\n            this._domain !== 'firebaseio-demo.com');\r\n    };\r\n    Object.defineProperty(RepoInfo.prototype, \"host\", {\r\n        get: function () {\r\n            return this._host;\r\n        },\r\n        set: function (newHost) {\r\n            if (newHost !== this.internalHost) {\r\n                this.internalHost = newHost;\r\n                if (this.isCacheableHost()) {\r\n                    PersistentStorage.set('host:' + this._host, this.internalHost);\r\n                }\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    RepoInfo.prototype.toURLString = function () {\r\n        var protocol = this.secure ? 'https://' : 'http://';\r\n        var query = this.includeNamespaceInQueryParams\r\n            ? \"?ns=\" + this.namespace\r\n            : '';\r\n        return \"\" + protocol + this.host + \"/\" + query;\r\n    };\r\n    return RepoInfo;\r\n}());\r\nfunction repoInfoNeedsQueryParam(repoInfo) {\r\n    return (repoInfo.host !== repoInfo.internalHost ||\r\n        repoInfo.isCustomHost() ||\r\n        repoInfo.includeNamespaceInQueryParams);\r\n}\r\n/**\r\n * Returns the websocket URL for this repo\r\n * @param repoInfo - RepoInfo object\r\n * @param type - of connection\r\n * @param params - list\r\n * @returns The URL for this repo\r\n */\r\nfunction repoInfoConnectionURL(repoInfo, type, params) {\r\n    assert(typeof type === 'string', 'typeof type must == string');\r\n    assert(typeof params === 'object', 'typeof params must == object');\r\n    var connURL;\r\n    if (type === WEBSOCKET) {\r\n        connURL =\r\n            (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\r\n    }\r\n    else if (type === LONG_POLLING) {\r\n        connURL =\r\n            (repoInfo.secure ? 'https://' : 'http://') +\r\n                repoInfo.internalHost +\r\n                '/.lp?';\r\n    }\r\n    else {\r\n        throw new Error('Unknown connection type: ' + type);\r\n    }\r\n    if (repoInfoNeedsQueryParam(repoInfo)) {\r\n        params['ns'] = repoInfo.namespace;\r\n    }\r\n    var pairs = [];\r\n    each(params, function (key, value) {\r\n        pairs.push(key + '=' + value);\r\n    });\r\n    return connURL + pairs.join('&');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!contains(this.counters_, name)) {\r\n            this.counters_[name] = 0;\r\n        }\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar collections = {};\r\nvar reporters = {};\r\nfunction statsManagerGetCollection(repoInfo) {\r\n    var hashString = repoInfo.toString();\r\n    if (!collections[hashString]) {\r\n        collections[hashString] = new StatsCollection();\r\n    }\r\n    return collections[hashString];\r\n}\r\nfunction statsManagerGetOrCreateReporter(repoInfo, creatorFunction) {\r\n    var hashString = repoInfo.toString();\r\n    if (!reporters[hashString]) {\r\n        reporters[hashString] = creatorFunction();\r\n    }\r\n    return reporters[hashString];\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId An identifier for this connection, used for logging\r\n     * @param repoInfo The info for the endpoint to send data to.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param appCheckToken The AppCheck token for this client.\r\n     * @param authToken The AuthToken to use for this connection.\r\n     * @param transportSessionId Optional transportSessionid if we are\r\n     * reconnecting for an existing transport session\r\n     * @param lastSessionId Optional lastSessionId if the PersistentConnection has\r\n     * already created a connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, applicationId, appCheckToken, authToken, transportSessionId, lastSessionId) {\r\n        var _this = this;\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.applicationId = applicationId;\r\n        this.appCheckToken = appCheckToken;\r\n        this.authToken = authToken;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = statsManagerGetCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            // Always add the token if we have one.\r\n            if (_this.appCheckToken) {\r\n                params[APP_CHECK_TOKEN_PARAM] = _this.appCheckToken;\r\n            }\r\n            return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_) {\r\n                return;\r\n            }\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = __read(args, 5), command = _a[0], arg1 = _a[1], arg2 = _a[2]; _a[3]; _a[4];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder) {\r\n                    return; // we closed the connection.\r\n                }\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command === FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = __read(args, 2), pN = _a[0], data = _a[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            }\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (_this.applicationId) {\r\n                urlParams[APPLICATION_ID_PARAM] = _this.applicationId;\r\n            }\r\n            if (_this.appCheckToken) {\r\n                urlParams[APP_CHECK_TOKEN_PARAM] = _this.appCheckToken;\r\n            }\r\n            if (typeof location !== 'undefined' &&\r\n                location.hostname &&\r\n                FORGE_DOMAIN_RE.test(location.hostname)) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        if (isNodeSdk()) {\r\n            return false;\r\n        }\r\n        else if (BrowserPollConnection.forceAllow_) {\r\n            return true;\r\n        }\r\n        else {\r\n            // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n            // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n            return (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp());\r\n        }\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param data - The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (isNodeSdk()) {\r\n            return;\r\n        }\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        this.outstandingRequests = new Set();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (iframe.document) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param id - The ID of this connection\r\n     * @param pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length +\r\n                    SEG_HEADER_SIZE +\r\n                    curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param url - The URL of the script tag.\r\n     * @param serial - The serial number of the request.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.delete(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param url - The URL for the script tag source.\r\n     * @param loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (isNodeSdk()) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls) {\r\n                        return;\r\n                    }\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId identifier for this transport\r\n     * @param repoInfo The info for the websocket endpoint.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param appCheckToken The App Check Token for this client.\r\n     * @param authToken The Auth Token for this client.\r\n     * @param transportSessionId Optional transportSessionId if this is connecting\r\n     * to an existing transport session\r\n     * @param lastSessionId Optional lastSessionId if there was a previous\r\n     * connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, applicationId, appCheckToken, authToken, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.applicationId = applicationId;\r\n        this.appCheckToken = appCheckToken;\r\n        this.authToken = authToken;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = statsManagerGetCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId, appCheckToken);\r\n        this.nodeAdmin = repoInfo.nodeAdmin;\r\n    }\r\n    /**\r\n     * @param repoInfo - The info for the websocket endpoint.\r\n     * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId - Optional lastSessionId if there was a previous connection\r\n     * @returns connection url\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId, appCheckToken) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.hostname &&\r\n            FORGE_DOMAIN_RE.test(location.hostname)) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        if (appCheckToken) {\r\n            urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\r\n        }\r\n        return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (isNodeSdk()) {\r\n                var device = this.nodeAdmin ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device,\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                // If using Node with admin creds, AppCheck-related checks are unnecessary.\r\n                // Note that we send the credentials here even if they aren't admin credentials, which is\r\n                // not a problem.\r\n                // Note that this header is just used to bypass appcheck, and the token should still be sent\r\n                // through the websocket connection once it is established.\r\n                if (this.authToken) {\r\n                    options.headers['Authorization'] = this.authToken;\r\n                }\r\n                if (this.appCheckToken) {\r\n                    options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\r\n                }\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') === 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                var options = {\r\n                    headers: {\r\n                        'X-Firebase-GMPID': this.applicationId || '',\r\n                        'X-Firebase-AppCheck': this.appCheckToken || ''\r\n                    }\r\n                };\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                _this.log_(error);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length === this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param frameCount - The number of frames we are expecting from the server\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @returns Any remaining data to be process, or null if there is none\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess - The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null) {\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        }\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param data - The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param str - String to send.\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param repoInfo - Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var e_1, _a;\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable) {\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            }\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports = (this.transports_ = []);\r\n            try {\r\n                for (var _b = __values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var transport = _c.value;\r\n                    if (transport && transport['isAvailable']()) {\r\n                        transports.push(transport);\r\n                    }\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @returns The constructor for the initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @returns The constructor for the next transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param id - an id for this connection\r\n     * @param repoInfo_ - the info for the endpoint to connect to\r\n     * @param applicationId_ - the Firebase App ID for this project\r\n     * @param appCheckToken_ - The App Check Token for this device.\r\n     * @param authToken_ - The auth token for this session.\r\n     * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, applicationId_, appCheckToken_, authToken_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.applicationId_ = applicationId_;\r\n        this.appCheckToken_ = appCheckToken_;\r\n        this.authToken_ = authToken_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.appCheckToken_, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeoutMS = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeoutMS > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            }, Math.floor(healthyTimeoutMS));\r\n        }\r\n    };\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ !== 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * @param dataMsg - An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param handshake - The handshake data returned from the server\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.host = host;\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ === 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.host = host;\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param token - The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    /**\r\n     * Refreshes the app check token for the current connection.\r\n     * @param token The app check token\r\n     */\r\n    ServerActions.prototype.refreshAppCheckToken = function (token) { };\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var varArgs = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            varArgs[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = __spreadArray([], __read(this.listeners_[eventType]));\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, varArgs);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    __extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Maximum key depth. */\r\nvar MAX_PATH_DEPTH = 32;\r\n/** Maximum number of (UTF8) bytes in a Firebase path. */\r\nvar MAX_PATH_LENGTH_BYTES = 768;\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param pathOrString - Path string to parse, or another path, or the raw\r\n     * tokens array\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + this.pieces_[i];\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    return Path;\r\n}());\r\nfunction newEmptyPath() {\r\n    return new Path('');\r\n}\r\nfunction pathGetFront(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    return path.pieces_[path.pieceNum_];\r\n}\r\n/**\r\n * @returns The number of segments in this path\r\n */\r\nfunction pathGetLength(path) {\r\n    return path.pieces_.length - path.pieceNum_;\r\n}\r\nfunction pathPopFront(path) {\r\n    var pieceNum = path.pieceNum_;\r\n    if (pieceNum < path.pieces_.length) {\r\n        pieceNum++;\r\n    }\r\n    return new Path(path.pieces_, pieceNum);\r\n}\r\nfunction pathGetBack(path) {\r\n    if (path.pieceNum_ < path.pieces_.length) {\r\n        return path.pieces_[path.pieces_.length - 1];\r\n    }\r\n    return null;\r\n}\r\nfunction pathToUrlEncodedString(path) {\r\n    var pathString = '';\r\n    for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        if (path.pieces_[i] !== '') {\r\n            pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\r\n        }\r\n    }\r\n    return pathString || '/';\r\n}\r\n/**\r\n * Shallow copy of the parts of the path.\r\n *\r\n */\r\nfunction pathSlice(path, begin) {\r\n    if (begin === void 0) { begin = 0; }\r\n    return path.pieces_.slice(path.pieceNum_ + begin);\r\n}\r\nfunction pathParent(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    var pieces = [];\r\n    for (var i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\nfunction pathChild(path, childPathObj) {\r\n    var pieces = [];\r\n    for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    if (childPathObj instanceof Path) {\r\n        for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n            pieces.push(childPathObj.pieces_[i]);\r\n        }\r\n    }\r\n    else {\r\n        var childPieces = childPathObj.split('/');\r\n        for (var i = 0; i < childPieces.length; i++) {\r\n            if (childPieces[i].length > 0) {\r\n                pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\n/**\r\n * @returns True if there are no segments in this path\r\n */\r\nfunction pathIsEmpty(path) {\r\n    return path.pieceNum_ >= path.pieces_.length;\r\n}\r\n/**\r\n * @returns The path from outerPath to innerPath\r\n */\r\nfunction newRelativePath(outerPath, innerPath) {\r\n    var outer = pathGetFront(outerPath), inner = pathGetFront(innerPath);\r\n    if (outer === null) {\r\n        return innerPath;\r\n    }\r\n    else if (outer === inner) {\r\n        return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\r\n    }\r\n    else {\r\n        throw new Error('INTERNAL ERROR: innerPath (' +\r\n            innerPath +\r\n            ') is not within ' +\r\n            'outerPath (' +\r\n            outerPath +\r\n            ')');\r\n    }\r\n}\r\n/**\r\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\r\n */\r\nfunction pathCompare(left, right) {\r\n    var leftKeys = pathSlice(left, 0);\r\n    var rightKeys = pathSlice(right, 0);\r\n    for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n        var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n        if (cmp !== 0) {\r\n            return cmp;\r\n        }\r\n    }\r\n    if (leftKeys.length === rightKeys.length) {\r\n        return 0;\r\n    }\r\n    return leftKeys.length < rightKeys.length ? -1 : 1;\r\n}\r\n/**\r\n * @returns true if paths are the same.\r\n */\r\nfunction pathEquals(path, other) {\r\n    if (pathGetLength(path) !== pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    for (var i = path.pieceNum_, j = other.pieceNum_; i <= path.pieces_.length; i++, j++) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * @returns True if this path is a parent (or the same as) other\r\n */\r\nfunction pathContains(path, other) {\r\n    var i = path.pieceNum_;\r\n    var j = other.pieceNum_;\r\n    if (pathGetLength(path) > pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    while (i < path.pieces_.length) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n        ++i;\r\n        ++j;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param path - Initial Path.\r\n     * @param errorPrefix_ - Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        this.parts_ = pathSlice(path, 0);\r\n        /** Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += stringLength(this.parts_[i]);\r\n        }\r\n        validationPathCheckValid(this);\r\n    }\r\n    return ValidationPath;\r\n}());\r\nfunction validationPathPush(validationPath, child) {\r\n    // Count the needed '/'\r\n    if (validationPath.parts_.length > 0) {\r\n        validationPath.byteLength_ += 1;\r\n    }\r\n    validationPath.parts_.push(child);\r\n    validationPath.byteLength_ += stringLength(child);\r\n    validationPathCheckValid(validationPath);\r\n}\r\nfunction validationPathPop(validationPath) {\r\n    var last = validationPath.parts_.pop();\r\n    validationPath.byteLength_ -= stringLength(last);\r\n    // Un-count the previous '/'\r\n    if (validationPath.parts_.length > 0) {\r\n        validationPath.byteLength_ -= 1;\r\n    }\r\n}\r\nfunction validationPathCheckValid(validationPath) {\r\n    if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\r\n        throw new Error(validationPath.errorPrefix_ +\r\n            'has a key path longer than ' +\r\n            MAX_PATH_LENGTH_BYTES +\r\n            ' bytes (' +\r\n            validationPath.byteLength_ +\r\n            ').');\r\n    }\r\n    if (validationPath.parts_.length > MAX_PATH_DEPTH) {\r\n        throw new Error(validationPath.errorPrefix_ +\r\n            'path specified exceeds the maximum depth that can be written (' +\r\n            MAX_PATH_DEPTH +\r\n            ') or object contains a cycle ' +\r\n            validationPathToErrorString(validationPath));\r\n    }\r\n}\r\n/**\r\n * String for use in error messages - uses '.' notation for path.\r\n */\r\nfunction validationPathToErrorString(validationPath) {\r\n    if (validationPath.parts_.length === 0) {\r\n        return '';\r\n    }\r\n    return \"in property '\" + validationPath.parts_.join('.') + \"'\";\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    __extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar GET_CONNECT_TIMEOUT = 3 * 1000;\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    __extends(PersistentConnection, _super);\r\n    /**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param applicationId_ - The Firebase App ID for this project\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */\r\n    function PersistentConnection(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, appCheckTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.applicationId_ = applicationId_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.appCheckTokenProvider_ = appCheckTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        _this.interruptReasons_ = {};\r\n        _this.listens = new Map();\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingGets_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.outstandingGetCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        _this.establishConnectionTimer_ = null;\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        _this.realtime_ = null;\r\n        _this.authToken_ = null;\r\n        _this.appCheckToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.invalidAppCheckTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(stringify(msg));\r\n        assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    PersistentConnection.prototype.get = function (query) {\r\n        var _this = this;\r\n        this.initConnection_();\r\n        var deferred = new Deferred();\r\n        var request = {\r\n            p: query._path.toString(),\r\n            q: query._queryObject\r\n        };\r\n        var outstandingGet = {\r\n            action: 'g',\r\n            request: request,\r\n            onComplete: function (message) {\r\n                var payload = message['d'];\r\n                if (message['s'] === 'ok') {\r\n                    _this.onDataUpdate_(request['p'], payload, \r\n                    /*isMerge*/ false, \r\n                    /*tag*/ null);\r\n                    deferred.resolve(payload);\r\n                }\r\n                else {\r\n                    deferred.reject(payload);\r\n                }\r\n            }\r\n        };\r\n        this.outstandingGets_.push(outstandingGet);\r\n        this.outstandingGetCount_++;\r\n        var index = this.outstandingGets_.length - 1;\r\n        if (!this.connected_) {\r\n            setTimeout(function () {\r\n                var get = _this.outstandingGets_[index];\r\n                if (get === undefined || outstandingGet !== get) {\r\n                    return;\r\n                }\r\n                delete _this.outstandingGets_[index];\r\n                _this.outstandingGetCount_--;\r\n                if (_this.outstandingGetCount_ === 0) {\r\n                    _this.outstandingGets_ = [];\r\n                }\r\n                _this.log_('get ' + index + ' timed out on connection');\r\n                deferred.reject(new Error('Client is offline.'));\r\n            }, GET_CONNECT_TIMEOUT);\r\n        }\r\n        if (this.connected_) {\r\n            this.sendGet_(index);\r\n        }\r\n        return deferred.promise;\r\n    };\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        this.initConnection_();\r\n        var queryId = query._queryIdentifier;\r\n        var pathString = query._path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        if (!this.listens.has(pathString)) {\r\n            this.listens.set(pathString, new Map());\r\n        }\r\n        assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'listen() called for non-default but complete query');\r\n        assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens.get(pathString).set(queryId, listenSpec);\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendGet_ = function (index) {\r\n        var _this = this;\r\n        var get = this.outstandingGets_[index];\r\n        this.sendRequest('g', get.request, function (message) {\r\n            delete _this.outstandingGets_[index];\r\n            _this.outstandingGetCount_--;\r\n            if (_this.outstandingGetCount_ === 0) {\r\n                _this.outstandingGets_ = [];\r\n            }\r\n            if (get.onComplete) {\r\n                get.onComplete(message);\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query._path.toString();\r\n        var queryId = query._queryIdentifier;\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query._queryObject;\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens.get(pathString) &&\r\n                _this.listens.get(pathString).get(queryId);\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && contains(payload, 'w')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var warnings = safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\r\n                var indexPath = query._path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    PersistentConnection.prototype.refreshAppCheckToken = function (token) {\r\n        this.appCheckToken_ = token;\r\n        this.log_('App check token refreshed');\r\n        if (this.appCheckToken_) {\r\n            this.tryAppCheck();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us.\r\n            //If we're not connected, simply delete the credential so we dont become\r\n            // authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unappeck', {}, function () { });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given token. If the authentication\r\n     * attempt fails, it's triggered like the token was revoked (the connection is\r\n     * closed).\r\n     */\r\n    PersistentConnection.prototype.tryAppCheck = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.appCheckToken_) {\r\n            this.sendRequest('appcheck', { 'token': this.appCheckToken_ }, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (status === 'ok') {\r\n                    _this.invalidAppCheckTokenCount_ = 0;\r\n                }\r\n                else {\r\n                    _this.onAppCheckRevoked_(status, data);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query._path.toString();\r\n        var queryId = query._queryIdentifier;\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        this.initConnection_();\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined) {\r\n            request[ /*hash*/'h'] = hash;\r\n        }\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete) {\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        }\r\n        else if (action === 'm') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        }\r\n        else if (action === 'c') {\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        }\r\n        else if (action === 'ac') {\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'apc') {\r\n            this.onAppCheckRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'sd') {\r\n            this.onSecurityDebugPacket_(body);\r\n        }\r\n        else {\r\n            error('Unrecognized action received from server: ' +\r\n                stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(timeout));\r\n    };\r\n    PersistentConnection.prototype.initConnection_ = function () {\r\n        if (!this.realtime_ && this.firstConnection_) {\r\n            this.scheduleConnect_(0);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                }\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var onDataMessage, onReady, onDisconnect_1, connId, lastSessionId, canceled_1, connection_1, closeFn, sendRequestFn, forceRefresh, _a, authToken, appCheckToken, error_1;\r\n            var _this = this;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!this.shouldReconnect_()) return [3 /*break*/, 4];\r\n                        this.log_('Making a connection attempt');\r\n                        this.lastConnectionAttemptTime_ = new Date().getTime();\r\n                        this.lastConnectionEstablishedTime_ = null;\r\n                        onDataMessage = this.onDataMessage_.bind(this);\r\n                        onReady = this.onReady_.bind(this);\r\n                        onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n                        connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n                        lastSessionId = this.lastSessionId;\r\n                        canceled_1 = false;\r\n                        connection_1 = null;\r\n                        closeFn = function () {\r\n                            if (connection_1) {\r\n                                connection_1.close();\r\n                            }\r\n                            else {\r\n                                canceled_1 = true;\r\n                                onDisconnect_1();\r\n                            }\r\n                        };\r\n                        sendRequestFn = function (msg) {\r\n                            assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                            connection_1.sendRequest(msg);\r\n                        };\r\n                        this.realtime_ = {\r\n                            close: closeFn,\r\n                            sendRequest: sendRequestFn\r\n                        };\r\n                        forceRefresh = this.forceTokenRefresh_;\r\n                        this.forceTokenRefresh_ = false;\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        _b.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, Promise.all([\r\n                                this.authTokenProvider_.getToken(forceRefresh),\r\n                                this.appCheckTokenProvider_.getToken(forceRefresh)\r\n                            ])];\r\n                    case 2:\r\n                        _a = __read.apply(void 0, [_b.sent(), 2]), authToken = _a[0], appCheckToken = _a[1];\r\n                        if (!canceled_1) {\r\n                            log('getToken() completed. Creating connection.');\r\n                            this.authToken_ = authToken && authToken.accessToken;\r\n                            this.appCheckToken_ = appCheckToken && appCheckToken.token;\r\n                            connection_1 = new Connection(connId, this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, onDataMessage, onReady, onDisconnect_1, \r\n                            /* onKill= */ function (reason) {\r\n                                warn(reason + ' (' + _this.repoInfo_.toString() + ')');\r\n                                _this.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                            }, lastSessionId);\r\n                        }\r\n                        else {\r\n                            log('getToken() completed but was canceled');\r\n                        }\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        error_1 = _b.sent();\r\n                        this.log_('Failed to get token: ' + error_1);\r\n                        if (!canceled_1) {\r\n                            if (this.repoInfo_.nodeAdmin) {\r\n                                // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                                // But getToken() may also just have temporarily failed, so we still want to\r\n                                // continue retrying.\r\n                                warn(error_1);\r\n                            }\r\n                            closeFn();\r\n                        }\r\n                        return [3 /*break*/, 4];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete) {\r\n                    put.onComplete('disconnect');\r\n                }\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0) {\r\n            this.outstandingPuts_ = [];\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete) {\r\n            listen.onComplete('permission_denied');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens.has(normalizedPathString)) {\r\n            var map = this.listens.get(normalizedPathString);\r\n            listen = map.get(queryId);\r\n            map.delete(queryId);\r\n            if (map.size === 0) {\r\n                this.listens.delete(normalizedPathString);\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onAppCheckRevoked_ = function (statusCode, explanation) {\r\n        log('App check token revoked: ' + statusCode + '/' + explanation);\r\n        this.appCheckToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        // Note: We don't close the connection as the developer may not have\r\n        // enforcement enabled. The backend closes connections with enforcements.\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAppCheckTokenCount_++;\r\n            if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\r\n                this.appCheckTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var e_1, _a, e_2, _b;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        this.tryAppCheck();\r\n        try {\r\n            // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n            // make sure to send listens before puts.\r\n            for (var _c = __values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var queries = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, __values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var listenSpec = _f.value;\r\n                        this.sendListen_(listenSpec);\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i]) {\r\n                this.sendPut_(i);\r\n            }\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n        for (var i = 0; i < this.outstandingGets_.length; i++) {\r\n            if (this.outstandingGets_[i]) {\r\n                this.sendGet_(i);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (isNodeSdk()) {\r\n            if (this.repoInfo_.nodeAdmin) {\r\n                clientName = 'admin_node';\r\n            }\r\n            else {\r\n                clientName = 'node';\r\n            }\r\n        }\r\n        stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @returns A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     *\r\n     * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @returns a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    __extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    KeyIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @param node - Node to iterate.\r\n     * @param isReverse_ - Whether or not to iterate in reverse\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_) {\r\n                cmp *= -1;\r\n            }\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_) {\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            result = { key: node.key, value: node.value };\r\n        }\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @param key - Key associated with this node.\r\n     * @param value - Value associated with this node.\r\n     * @param color - Whether this node is red.\r\n     * @param left - Left child.\r\n     * @param right - Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param key - New key for the node, or null.\r\n     * @param value - New value for the node, or null.\r\n     * @param color - New color for the node, or null.\r\n     * @param left - New left child for the node, or null.\r\n     * @param right - New right child for the node, or null.\r\n     * @returns The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @returns The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @returns True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            !!action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @returns The minimum node in the tree.\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @returns The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @returns The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param key - Key to insert.\r\n     * @param value - Value to insert.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var n = this;\r\n        var cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @returns New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_()) {\r\n            n = n.moveRedLeft_();\r\n        }\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param key - The key of the item to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_()) {\r\n                n = n.rotateRight_();\r\n            }\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @returns Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @returns New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_()) {\r\n            n = n.rotateLeft_();\r\n        }\r\n        if (n.left.isRed_() && n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n        }\r\n        if (n.left.isRed_() && n.right.isRed_()) {\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @returns New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @returns New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @returns New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @returns New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @returns Newt ree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @returns True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    LLRBNode.prototype.check_ = function () {\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        var blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @returns The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @returns The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @returns True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @returns Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @param comparator_ - Key comparator.\r\n     * @param root_ - Optional root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @returns New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @returns New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param key - The key to look up.\r\n     * @returns The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param key - The key to find the predecessor of\r\n     * @returns The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty()) {\r\n                        node = node.right;\r\n                    }\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @returns True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @returns The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @returns The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @returns The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @returns The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE$2;\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$2 = val;\r\n}\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number') {\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    }\r\n    else {\r\n        return 'string:' + priority;\r\n    }\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        assert(priorityNode === MAX_NODE$2 || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    assert(priorityNode === MAX_NODE$2 || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @param value_ - The value to store in this leaf node. The object type is\r\n     * possible in the event of a deferred value\r\n     * @param priorityNode_ - The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this;\r\n        }\r\n        else if (pathGetFront(path) === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            assert(front !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(pathPopFront(path), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty()) {\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        }\r\n        else {\r\n            return this.getValue();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            }\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @returns The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    LeafNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON$1;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON$1 = val;\r\n}\r\nfunction setMaxNode(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    __extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    PriorityIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\nvar Base12Num = /** @class */ (function () {\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @param childList - Unsorted list of children\r\n * @param cmp - The comparison method to be used\r\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\r\n * type is not NamedNode\r\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length === 0) {\r\n            return null;\r\n        }\r\n        else if (length === 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         */\r\n        get: function () {\r\n            assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap) {\r\n            throw new Error('No index defined for ' + indexKey);\r\n        }\r\n        if (sortedMap instanceof SortedMap) {\r\n            return sortedMap;\r\n        }\r\n        else {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n    };\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = __assign({}, this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = __assign({}, this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = safeGet(_this.indexSet_, indexName);\r\n            assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name !== namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     * @param children_ - List of children of this node..\r\n     * @param priorityNode_ - The priority of this node (as a snapshot node).\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = pathGetFront(path);\r\n        if (front === null) {\r\n            return this;\r\n        }\r\n        return this.getImmediateChild(front).getChild(pathPopFront(path));\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            var newPriority = newChildren.isEmpty()\r\n                ? EMPTY_NODE\r\n                : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            assert(pathGetFront(path) !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(pathPopFront(path), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty()) {\r\n            return null;\r\n        }\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            // eslint-disable-next-line guard-for-in\r\n            for (var key in obj) {\r\n                array[key] = obj[key];\r\n            }\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty()) {\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            }\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '') {\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n                }\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    __extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n */\r\nvar MAX_NODE = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode$1(MAX_NODE);\r\nsetMaxNode(MAX_NODE);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param json - JSON to create a node for.\r\n * @param priority - Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n */\r\nfunction nodeFromJSON(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj = json;\r\n        each(hinzeJsonObj, function (key, child) {\r\n            if (key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON(child);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length === 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        each(json, function (key, childData) {\r\n            if (contains(json, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty()) {\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    __extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        assert(!pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    PathIndex.prototype.toString = function () {\r\n        return pathSlice(this.indexPath_, 0).join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    __extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    ValueIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    ValueIndex.prototype.maxPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MAX;\r\n    };\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Modeled after base64 web-safe chars, but ordered by ASCII.\r\nvar PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\nvar MIN_PUSH_CHAR = '-';\r\nvar MAX_PUSH_CHAR = 'z';\r\nvar MAX_KEY_LEN = 786;\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\r\nvar successor = function (key) {\r\n    if (key === '' + INTEGER_32_MAX) {\r\n        // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\r\n        return MIN_PUSH_CHAR;\r\n    }\r\n    var keyAsInt = tryParseInt(key);\r\n    if (keyAsInt != null) {\r\n        return '' + (keyAsInt + 1);\r\n    }\r\n    var next = new Array(key.length);\r\n    for (var i_1 = 0; i_1 < next.length; i_1++) {\r\n        next[i_1] = key.charAt(i_1);\r\n    }\r\n    if (next.length < MAX_KEY_LEN) {\r\n        next.push(MIN_PUSH_CHAR);\r\n        return next.join('');\r\n    }\r\n    var i = next.length - 1;\r\n    while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\r\n        i--;\r\n    }\r\n    // `successor` was called on the largest possible key, so return the\r\n    // MAX_NAME, which sorts larger than all keys.\r\n    if (i === -1) {\r\n        return MAX_NAME;\r\n    }\r\n    var source = next[i];\r\n    var sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\r\n    next[i] = sourcePlusOne;\r\n    return next.slice(0, i + 1).join('');\r\n};\r\n// `key` is assumed to be non-empty.\r\nvar predecessor = function (key) {\r\n    if (key === '' + INTEGER_32_MIN) {\r\n        return MIN_NAME;\r\n    }\r\n    var keyAsInt = tryParseInt(key);\r\n    if (keyAsInt != null) {\r\n        return '' + (keyAsInt - 1);\r\n    }\r\n    var next = new Array(key.length);\r\n    for (var i = 0; i < next.length; i++) {\r\n        next[i] = key.charAt(i);\r\n    }\r\n    // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\r\n    // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\r\n    // than that, `predecessor(predecessor(key))`, is\r\n    //\r\n    // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\r\n    //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\r\n    //\r\n    // analogous to increment/decrement for base-10 integers.\r\n    //\r\n    // This works because lexigographic comparison works character-by-character,\r\n    // using length as a tie-breaker if one key is a prefix of the other.\r\n    if (next[next.length - 1] === MIN_PUSH_CHAR) {\r\n        if (next.length === 1) {\r\n            // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\r\n            return '' + INTEGER_32_MAX;\r\n        }\r\n        delete next[next.length - 1];\r\n        return next.join('');\r\n    }\r\n    // Replace the last character with it's immediate predecessor, and\r\n    // fill the suffix of the key with MAX_PUSH_CHAR. This is the\r\n    // lexicographically largest possible key smaller than `key`.\r\n    next[next.length - 1] = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(next[next.length - 1]) - 1);\r\n    return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction changeValue(snapshotNode) {\r\n    return { type: \"value\" /* VALUE */, snapshotNode: snapshotNode };\r\n}\r\nfunction changeChildAdded(childName, snapshotNode) {\r\n    return { type: \"child_added\" /* CHILD_ADDED */, snapshotNode: snapshotNode, childName: childName };\r\n}\r\nfunction changeChildRemoved(childName, snapshotNode) {\r\n    return { type: \"child_removed\" /* CHILD_REMOVED */, snapshotNode: snapshotNode, childName: childName };\r\n}\r\nfunction changeChildChanged(childName, snapshotNode, oldSnap) {\r\n    return {\r\n        type: \"child_changed\" /* CHILD_CHANGED */,\r\n        snapshotNode: snapshotNode,\r\n        childName: childName,\r\n        oldSnap: oldSnap\r\n    };\r\n}\r\nfunction changeChildMoved(childName, snapshotNode) {\r\n    return { type: \"child_moved\" /* CHILD_MOVED */, snapshotNode: snapshotNode, childName: childName };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() === newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(changeChildRemoved(key, oldChild));\r\n                }\r\n                else {\r\n                    assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(changeChildChanged(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(changeChildRemoved(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(changeChildChanged(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(changeChildAdded(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        assert(oldEventCache.numChildren() === this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildChanged(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(changeChildAdded(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(changeChildAdded(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.startAfterSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.endBeforeSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    QueryParams.prototype.hasStartAfter = function () {\r\n        return this.startAfterSet_;\r\n    };\r\n    QueryParams.prototype.hasEndBefore = function () {\r\n        return this.endBeforeSet_;\r\n    };\r\n    /**\r\n     * @returns True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return this.viewFrom_ === \"l\" /* VIEW_FROM_LEFT */;\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @returns True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\r\n    };\r\n    QueryParams.prototype.copy = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    return QueryParams;\r\n}());\r\nfunction queryParamsGetNodeFilter(queryParams) {\r\n    if (queryParams.loadsAllData()) {\r\n        return new IndexedFilter(queryParams.getIndex());\r\n    }\r\n    else if (queryParams.hasLimit()) {\r\n        return new LimitedFilter(queryParams);\r\n    }\r\n    else {\r\n        return new RangedFilter(queryParams);\r\n    }\r\n}\r\nfunction queryParamsLimitToFirst(queryParams, newLimit) {\r\n    var newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"l\" /* VIEW_FROM_LEFT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsLimitToLast(queryParams, newLimit) {\r\n    var newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"r\" /* VIEW_FROM_RIGHT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAt(queryParams, indexValue, key) {\r\n    var newParams = queryParams.copy();\r\n    newParams.startSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexStartValue_ = indexValue;\r\n    if (key != null) {\r\n        newParams.startNameSet_ = true;\r\n        newParams.indexStartName_ = key;\r\n    }\r\n    else {\r\n        newParams.startNameSet_ = false;\r\n        newParams.indexStartName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAfter(queryParams, indexValue, key) {\r\n    var params;\r\n    if (queryParams.index_ === KEY_INDEX) {\r\n        if (typeof indexValue === 'string') {\r\n            indexValue = successor(indexValue);\r\n        }\r\n        params = queryParamsStartAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        var childKey = void 0;\r\n        if (key == null) {\r\n            childKey = MAX_NAME;\r\n        }\r\n        else {\r\n            childKey = successor(key);\r\n        }\r\n        params = queryParamsStartAt(queryParams, indexValue, childKey);\r\n    }\r\n    params.startAfterSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsEndAt(queryParams, indexValue, key) {\r\n    var newParams = queryParams.copy();\r\n    newParams.endSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexEndValue_ = indexValue;\r\n    if (key !== undefined) {\r\n        newParams.endNameSet_ = true;\r\n        newParams.indexEndName_ = key;\r\n    }\r\n    else {\r\n        newParams.endNameSet_ = false;\r\n        newParams.indexEndName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsEndBefore(queryParams, indexValue, key) {\r\n    var childKey;\r\n    var params;\r\n    if (queryParams.index_ === KEY_INDEX) {\r\n        if (typeof indexValue === 'string') {\r\n            indexValue = predecessor(indexValue);\r\n        }\r\n        params = queryParamsEndAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        if (key == null) {\r\n            childKey = MIN_NAME;\r\n        }\r\n        else {\r\n            childKey = predecessor(key);\r\n        }\r\n        params = queryParamsEndAt(queryParams, indexValue, childKey);\r\n    }\r\n    params.endBeforeSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsOrderBy(queryParams, index) {\r\n    var newParams = queryParams.copy();\r\n    newParams.index_ = index;\r\n    return newParams;\r\n}\r\n/**\r\n * Returns a set of REST query string parameters representing this query.\r\n *\r\n * @returns query string parameters\r\n */\r\nfunction queryParamsToRestQueryStringParameters(queryParams) {\r\n    var qs = {};\r\n    if (queryParams.isDefault()) {\r\n        return qs;\r\n    }\r\n    var orderBy;\r\n    if (queryParams.index_ === PRIORITY_INDEX) {\r\n        orderBy = \"$priority\" /* PRIORITY_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === VALUE_INDEX) {\r\n        orderBy = \"$value\" /* VALUE_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === KEY_INDEX) {\r\n        orderBy = \"$key\" /* KEY_INDEX */;\r\n    }\r\n    else {\r\n        assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n        orderBy = queryParams.index_.toString();\r\n    }\r\n    qs[\"orderBy\" /* ORDER_BY */] = stringify(orderBy);\r\n    if (queryParams.startSet_) {\r\n        qs[\"startAt\" /* START_AT */] = stringify(queryParams.indexStartValue_);\r\n        if (queryParams.startNameSet_) {\r\n            qs[\"startAt\" /* START_AT */] +=\r\n                ',' + stringify(queryParams.indexStartName_);\r\n        }\r\n    }\r\n    if (queryParams.endSet_) {\r\n        qs[\"endAt\" /* END_AT */] = stringify(queryParams.indexEndValue_);\r\n        if (queryParams.endNameSet_) {\r\n            qs[\"endAt\" /* END_AT */] +=\r\n                ',' + stringify(queryParams.indexEndName_);\r\n        }\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        if (queryParams.isViewFromLeft()) {\r\n            qs[\"limitToFirst\" /* LIMIT_TO_FIRST */] = queryParams.limit_;\r\n        }\r\n        else {\r\n            qs[\"limitToLast\" /* LIMIT_TO_LAST */] = queryParams.limit_;\r\n        }\r\n    }\r\n    return qs;\r\n}\r\nfunction queryParamsGetQueryObject(queryParams) {\r\n    var obj = {};\r\n    if (queryParams.startSet_) {\r\n        obj[\"sp\" /* INDEX_START_VALUE */] =\r\n            queryParams.indexStartValue_;\r\n        if (queryParams.startNameSet_) {\r\n            obj[\"sn\" /* INDEX_START_NAME */] =\r\n                queryParams.indexStartName_;\r\n        }\r\n    }\r\n    if (queryParams.endSet_) {\r\n        obj[\"ep\" /* INDEX_END_VALUE */] = queryParams.indexEndValue_;\r\n        if (queryParams.endNameSet_) {\r\n            obj[\"en\" /* INDEX_END_NAME */] = queryParams.indexEndName_;\r\n        }\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        obj[\"l\" /* LIMIT */] = queryParams.limit_;\r\n        var viewFrom = queryParams.viewFrom_;\r\n        if (viewFrom === '') {\r\n            if (queryParams.isViewFromLeft()) {\r\n                viewFrom = \"l\" /* VIEW_FROM_LEFT */;\r\n            }\r\n            else {\r\n                viewFrom = \"r\" /* VIEW_FROM_RIGHT */;\r\n            }\r\n        }\r\n        obj[\"vf\" /* VIEW_FROM */] = viewFrom;\r\n    }\r\n    // For now, priority index is the default, so we only specify if it's some other index\r\n    if (queryParams.index_ !== PRIORITY_INDEX) {\r\n        obj[\"i\" /* INDEX */] = queryParams.index_.toString();\r\n    }\r\n    return obj;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    __extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_, appCheckTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.appCheckTokenProvider_ = appCheckTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            assert(query._queryParams.isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query._path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query._path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error === 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    ReadonlyRestClient.prototype.get = function (query) {\r\n        var _this = this;\r\n        var queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\r\n        var pathString = query._path.toString();\r\n        var deferred = new Deferred();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, \r\n                /*isMerge=*/ false, \r\n                /*tag=*/ null);\r\n                deferred.resolve(data);\r\n            }\r\n            else {\r\n                deferred.reject(new Error(data));\r\n            }\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        return Promise.all([\r\n            this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\r\n            this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\r\n        ]).then(function (_a) {\r\n            var _b = __read(_a, 2), authToken = _b[0], appCheckToken = _b[1];\r\n            if (authToken && authToken.accessToken) {\r\n                queryStringParameters['auth'] = authToken.accessToken;\r\n            }\r\n            if (appCheckToken && appCheckToken.token) {\r\n                queryStringParameters['ac'] = appCheckToken.token;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                'ns=' +\r\n                _this.repoInfo_.namespace +\r\n                querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newSparseSnapshotTree() {\r\n    return {\r\n        value: null,\r\n        children: new Map()\r\n    };\r\n}\r\n/**\r\n * Stores the given node at the specified path. If there is already a node\r\n * at a shallower path, it merges the new data into that snapshot node.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @param data - The new data, or null.\r\n */\r\nfunction sparseSnapshotTreeRemember(sparseSnapshotTree, path, data) {\r\n    if (pathIsEmpty(path)) {\r\n        sparseSnapshotTree.value = data;\r\n        sparseSnapshotTree.children.clear();\r\n    }\r\n    else if (sparseSnapshotTree.value !== null) {\r\n        sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\r\n    }\r\n    else {\r\n        var childKey = pathGetFront(path);\r\n        if (!sparseSnapshotTree.children.has(childKey)) {\r\n            sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\r\n        }\r\n        var child = sparseSnapshotTree.children.get(childKey);\r\n        path = pathPopFront(path);\r\n        sparseSnapshotTreeRemember(child, path, data);\r\n    }\r\n}\r\n/**\r\n * Purge the data at path from the cache.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @returns True if this node should now be removed.\r\n */\r\nfunction sparseSnapshotTreeForget(sparseSnapshotTree, path) {\r\n    if (pathIsEmpty(path)) {\r\n        sparseSnapshotTree.value = null;\r\n        sparseSnapshotTree.children.clear();\r\n        return true;\r\n    }\r\n    else {\r\n        if (sparseSnapshotTree.value !== null) {\r\n            if (sparseSnapshotTree.value.isLeafNode()) {\r\n                // We're trying to forget a node that doesn't exist\r\n                return false;\r\n            }\r\n            else {\r\n                var value = sparseSnapshotTree.value;\r\n                sparseSnapshotTree.value = null;\r\n                value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                    sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\r\n                });\r\n                return sparseSnapshotTreeForget(sparseSnapshotTree, path);\r\n            }\r\n        }\r\n        else if (sparseSnapshotTree.children.size > 0) {\r\n            var childKey = pathGetFront(path);\r\n            path = pathPopFront(path);\r\n            if (sparseSnapshotTree.children.has(childKey)) {\r\n                var safeToRemove = sparseSnapshotTreeForget(sparseSnapshotTree.children.get(childKey), path);\r\n                if (safeToRemove) {\r\n                    sparseSnapshotTree.children.delete(childKey);\r\n                }\r\n            }\r\n            return sparseSnapshotTree.children.size === 0;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Recursively iterates through all of the stored tree and calls the\r\n * callback on each one.\r\n *\r\n * @param prefixPath - Path to look up node for.\r\n * @param func - The function to invoke for each tree.\r\n */\r\nfunction sparseSnapshotTreeForEachTree(sparseSnapshotTree, prefixPath, func) {\r\n    if (sparseSnapshotTree.value !== null) {\r\n        func(prefixPath, sparseSnapshotTree.value);\r\n    }\r\n    else {\r\n        sparseSnapshotTreeForEachChild(sparseSnapshotTree, function (key, tree) {\r\n            var path = new Path(prefixPath.toString() + '/' + key);\r\n            sparseSnapshotTreeForEachTree(tree, path, func);\r\n        });\r\n    }\r\n}\r\n/**\r\n * Iterates through each immediate child and triggers the callback.\r\n * Only seems to be used in tests.\r\n *\r\n * @param func - The function to invoke for each child.\r\n */\r\nfunction sparseSnapshotTreeForEachChild(sparseSnapshotTree, func) {\r\n    sparseSnapshotTree.children.forEach(function (tree, key) {\r\n        func(key, tree);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ - The collection to \"listen\" to.\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = __assign({}, newStats);\r\n        if (this.last_) {\r\n            each(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\nvar StatsReporter = /** @class */ (function () {\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        each(stats, function (stat, value) {\r\n            if (value > 0 && contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\r\nfunction statsReporterIncludeStat(reporter, stat) {\r\n    reporter.statsToReport_[stat] = true;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\nfunction newOperationSourceUser() {\r\n    return {\r\n        fromUser: true,\r\n        fromServer: false,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServer() {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServerTaggedQuery(queryId) {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId: queryId,\r\n        tagged: true\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\r\n     */\r\n    function AckUserWrite(\r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ affectedTree, \r\n    /** @inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = newOperationSourceUser();\r\n    }\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!pathIsEmpty(this.path)) {\r\n            assert(pathGetFront(this.path) === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(pathPopFront(this.path), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(newEmptyPath(), childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new ListenComplete(this.source, newEmptyPath());\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, pathPopFront(this.path));\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new Overwrite(this.source, newEmptyPath(), this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, pathPopFront(this.path), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /** @inheritDoc */ source, \r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, newEmptyPath(), childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, newEmptyPath(), childTree);\r\n            }\r\n        }\r\n        else {\r\n            assert(pathGetFront(this.path) === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, pathPopFront(this.path), this.children);\r\n        }\r\n    };\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = pathGetFront(path);\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        this.index_ = this.query_._queryParams.getIndex();\r\n    }\r\n    return EventGenerator;\r\n}());\r\n/**\r\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n *\r\n * Notes:\r\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n *    our index.\r\n *  - prevName will be calculated based on the index ordering.\r\n */\r\nfunction eventGeneratorGenerateEventsForChanges(eventGenerator, changes, eventCache, eventRegistrations) {\r\n    var events = [];\r\n    var moves = [];\r\n    changes.forEach(function (change) {\r\n        if (change.type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n            eventGenerator.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n            moves.push(changeChildMoved(change.childName, change.snapshotNode));\r\n        }\r\n    });\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_removed\" /* CHILD_REMOVED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_added\" /* CHILD_ADDED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_moved\" /* CHILD_MOVED */, moves, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_changed\" /* CHILD_CHANGED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"value\" /* VALUE */, changes, eventRegistrations, eventCache);\r\n    return events;\r\n}\r\n/**\r\n * Given changes of a single change type, generate the corresponding events.\r\n */\r\nfunction eventGeneratorGenerateEventsForType(eventGenerator, events, eventType, changes, registrations, eventCache) {\r\n    var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n    filteredChanges.sort(function (a, b) {\r\n        return eventGeneratorCompareChanges(eventGenerator, a, b);\r\n    });\r\n    filteredChanges.forEach(function (change) {\r\n        var materializedChange = eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache);\r\n        registrations.forEach(function (registration) {\r\n            if (registration.respondsTo(change.type)) {\r\n                events.push(registration.createEvent(materializedChange, eventGenerator.query_));\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache) {\r\n    if (change.type === 'value' || change.type === 'child_removed') {\r\n        return change;\r\n    }\r\n    else {\r\n        change.prevName = eventCache.getPredecessorChildName(change.childName, change.snapshotNode, eventGenerator.index_);\r\n        return change;\r\n    }\r\n}\r\nfunction eventGeneratorCompareChanges(eventGenerator, a, b) {\r\n    if (a.childName == null || b.childName == null) {\r\n        throw assertionError('Should only compare child_ events.');\r\n    }\r\n    var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n    var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n    return eventGenerator.index_.compare(aWrapped, bWrapped);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newViewCache(eventCache, serverCache) {\r\n    return { eventCache: eventCache, serverCache: serverCache };\r\n}\r\nfunction viewCacheUpdateEventSnap(viewCache, eventSnap, complete, filtered) {\r\n    return newViewCache(new CacheNode(eventSnap, complete, filtered), viewCache.serverCache);\r\n}\r\nfunction viewCacheUpdateServerSnap(viewCache, serverSnap, complete, filtered) {\r\n    return newViewCache(viewCache.eventCache, new CacheNode(serverSnap, complete, filtered));\r\n}\r\nfunction viewCacheGetCompleteEventSnap(viewCache) {\r\n    return viewCache.eventCache.isFullyInitialized()\r\n        ? viewCache.eventCache.getNode()\r\n        : null;\r\n}\r\nfunction viewCacheGetCompleteServerSnap(viewCache) {\r\n    return viewCache.serverCache.isFullyInitialized()\r\n        ? viewCache.serverCache.getNode()\r\n        : null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = new ImmutableTree(null);\r\n        each(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\r\n     * objects on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param relativePath - The remainder of the path\r\n     * @param predicate - The predicate to satisfy to return a node\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: newEmptyPath(), value: this.value };\r\n        }\r\n        else {\r\n            if (pathIsEmpty(relativePath)) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathGetFront(relativePath);\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(pathPopFront(relativePath), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = pathChild(new Path(front), childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @returns The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param relativePath - Path to set value at.\r\n     * @param toSet - Value to set.\r\n     * @returns Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front) || new ImmutableTree(null);\r\n            var newChild = child.set(pathPopFront(relativePath), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param relativePath - Path to value to remove.\r\n     * @returns Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            if (this.children.isEmpty()) {\r\n                return new ImmutableTree(null);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(pathPopFront(relativePath));\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return new ImmutableTree(null);\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param relativePath - Path to get value for.\r\n     * @returns Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param relativePath - Path to replace subtree for.\r\n     * @param newTree - New tree.\r\n     * @returns Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front) || new ImmutableTree(null);\r\n            var newChild = child.setTree(pathPopFront(relativePath), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(newEmptyPath(), fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, newEmptyPath(), f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathIsEmpty(pathToFollow)) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathGetFront(pathToFollow);\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathPopFront(pathToFollow), pathChild(pathSoFar, front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, newEmptyPath(), f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathIsEmpty(pathToFollow)) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathGetFront(pathToFollow);\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathPopFront(pathToFollow), pathChild(currentRelativePath, front), f);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param f - A function to be called with the path from the root of the tree to\r\n     * a node, and the value at that node. Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(newEmptyPath(), f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(pathChild(currentRelativePath, childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    CompoundWrite.empty = function () {\r\n        return new CompoundWrite(new ImmutableTree(null));\r\n    };\r\n    return CompoundWrite;\r\n}());\r\nfunction compoundWriteAddWrite(compoundWrite, path, node) {\r\n    if (pathIsEmpty(path)) {\r\n        return new CompoundWrite(new ImmutableTree(node));\r\n    }\r\n    else {\r\n        var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            var rootMostPath = rootmost.path;\r\n            var value = rootmost.value;\r\n            var relativePath = newRelativePath(rootMostPath, path);\r\n            value = value.updateChild(relativePath, node);\r\n            return new CompoundWrite(compoundWrite.writeTree_.set(rootMostPath, value));\r\n        }\r\n        else {\r\n            var subtree = new ImmutableTree(node);\r\n            var newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    }\r\n}\r\nfunction compoundWriteAddWrites(compoundWrite, path, updates) {\r\n    var newWrite = compoundWrite;\r\n    each(updates, function (childKey, node) {\r\n        newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\r\n    });\r\n    return newWrite;\r\n}\r\n/**\r\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n * location, which must be removed by calling this method with that path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to remove.\r\n * @param path - The path at which a write and all deeper writes should be removed\r\n * @returns The new CompoundWrite with the removed path\r\n */\r\nfunction compoundWriteRemoveWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return CompoundWrite.empty();\r\n    }\r\n    else {\r\n        var newWriteTree = compoundWrite.writeTree_.setTree(path, new ImmutableTree(null));\r\n        return new CompoundWrite(newWriteTree);\r\n    }\r\n}\r\n/**\r\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n * considered \"complete\".\r\n *\r\n * @param compoundWrite - The CompoundWrite to check.\r\n * @param path - The path to check for\r\n * @returns Whether there is a complete write at that path\r\n */\r\nfunction compoundWriteHasCompleteWrite(compoundWrite, path) {\r\n    return compoundWriteGetCompleteNode(compoundWrite, path) != null;\r\n}\r\n/**\r\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n * writes from deeper paths, but will return child nodes from a more shallow path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get the node from.\r\n * @param path - The path to get a complete write\r\n * @returns The node if complete at that path, or null otherwise.\r\n */\r\nfunction compoundWriteGetCompleteNode(compoundWrite, path) {\r\n    var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n    if (rootmost != null) {\r\n        return compoundWrite.writeTree_\r\n            .get(rootmost.path)\r\n            .getChild(newRelativePath(rootmost.path, path));\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Returns all children that are guaranteed to be a complete overwrite.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get children from.\r\n * @returns A list of all complete children.\r\n */\r\nfunction compoundWriteGetCompleteChildren(compoundWrite) {\r\n    var children = [];\r\n    var node = compoundWrite.writeTree_.value;\r\n    if (node != null) {\r\n        // If it's a leaf node, it has no children; so nothing to do.\r\n        if (!node.isLeafNode()) {\r\n            node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                children.push(new NamedNode(childName, childNode));\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        compoundWrite.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value != null) {\r\n                children.push(new NamedNode(childName, childTree.value));\r\n            }\r\n        });\r\n    }\r\n    return children;\r\n}\r\nfunction compoundWriteChildCompoundWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return compoundWrite;\r\n    }\r\n    else {\r\n        var shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\r\n        if (shadowingNode != null) {\r\n            return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n        }\r\n        else {\r\n            return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n * @returns Whether this CompoundWrite is empty\r\n */\r\nfunction compoundWriteIsEmpty(compoundWrite) {\r\n    return compoundWrite.writeTree_.isEmpty();\r\n}\r\n/**\r\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n * node\r\n * @param node - The node to apply this CompoundWrite to\r\n * @returns The node with all writes applied\r\n */\r\nfunction compoundWriteApply(compoundWrite, node) {\r\n    return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\r\n}\r\nfunction applySubtreeWrite(relativePath, writeTree, node) {\r\n    if (writeTree.value != null) {\r\n        // Since there a write is always a leaf, we're done here\r\n        return node.updateChild(relativePath, writeTree.value);\r\n    }\r\n    else {\r\n        var priorityWrite_1 = null;\r\n        writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (childKey === '.priority') {\r\n                // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                // to apply priorities to empty nodes that are later filled\r\n                assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                priorityWrite_1 = childTree.value;\r\n            }\r\n            else {\r\n                node = applySubtreeWrite(pathChild(relativePath, childKey), childTree, node);\r\n            }\r\n        });\r\n        // If there was a priority write, we only apply it if the node is not empty\r\n        if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n            node = node.updateChild(pathChild(relativePath, '.priority'), priorityWrite_1);\r\n        }\r\n        return node;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n *\r\n */\r\nfunction writeTreeChildWrites(writeTree, path) {\r\n    return newWriteTreeRef(path, writeTree);\r\n}\r\n/**\r\n * Record a new overwrite from user code.\r\n *\r\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\r\n */\r\nfunction writeTreeAddOverwrite(writeTree, path, snap, writeId, visible) {\r\n    assert(writeId > writeTree.lastWriteId, 'Stacking an older write on top of newer ones');\r\n    if (visible === undefined) {\r\n        visible = true;\r\n    }\r\n    writeTree.allWrites.push({\r\n        path: path,\r\n        snap: snap,\r\n        writeId: writeId,\r\n        visible: visible\r\n    });\r\n    if (visible) {\r\n        writeTree.visibleWrites = compoundWriteAddWrite(writeTree.visibleWrites, path, snap);\r\n    }\r\n    writeTree.lastWriteId = writeId;\r\n}\r\n/**\r\n * Record a new merge from user code.\r\n */\r\nfunction writeTreeAddMerge(writeTree, path, changedChildren, writeId) {\r\n    assert(writeId > writeTree.lastWriteId, 'Stacking an older merge on top of newer ones');\r\n    writeTree.allWrites.push({\r\n        path: path,\r\n        children: changedChildren,\r\n        writeId: writeId,\r\n        visible: true\r\n    });\r\n    writeTree.visibleWrites = compoundWriteAddWrites(writeTree.visibleWrites, path, changedChildren);\r\n    writeTree.lastWriteId = writeId;\r\n}\r\nfunction writeTreeGetWrite(writeTree, writeId) {\r\n    for (var i = 0; i < writeTree.allWrites.length; i++) {\r\n        var record = writeTree.allWrites[i];\r\n        if (record.writeId === writeId) {\r\n            return record;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n *\r\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n * events as a result).\r\n */\r\nfunction writeTreeRemoveWrite(writeTree, writeId) {\r\n    // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n    // out of order.\r\n    //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n    //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n    var idx = writeTree.allWrites.findIndex(function (s) {\r\n        return s.writeId === writeId;\r\n    });\r\n    assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n    var writeToRemove = writeTree.allWrites[idx];\r\n    writeTree.allWrites.splice(idx, 1);\r\n    var removedWriteWasVisible = writeToRemove.visible;\r\n    var removedWriteOverlapsWithOtherWrites = false;\r\n    var i = writeTree.allWrites.length - 1;\r\n    while (removedWriteWasVisible && i >= 0) {\r\n        var currentWrite = writeTree.allWrites[i];\r\n        if (currentWrite.visible) {\r\n            if (i >= idx &&\r\n                writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                // The removed write was completely shadowed by a subsequent write.\r\n                removedWriteWasVisible = false;\r\n            }\r\n            else if (pathContains(writeToRemove.path, currentWrite.path)) {\r\n                // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                removedWriteOverlapsWithOtherWrites = true;\r\n            }\r\n        }\r\n        i--;\r\n    }\r\n    if (!removedWriteWasVisible) {\r\n        return false;\r\n    }\r\n    else if (removedWriteOverlapsWithOtherWrites) {\r\n        // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n        writeTreeResetTree_(writeTree);\r\n        return true;\r\n    }\r\n    else {\r\n        // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n        if (writeToRemove.snap) {\r\n            writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, writeToRemove.path);\r\n        }\r\n        else {\r\n            var children = writeToRemove.children;\r\n            each(children, function (childName) {\r\n                writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, pathChild(writeToRemove.path, childName));\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n}\r\nfunction writeTreeRecordContainsPath_(writeRecord, path) {\r\n    if (writeRecord.snap) {\r\n        return pathContains(writeRecord.path, path);\r\n    }\r\n    else {\r\n        for (var childName in writeRecord.children) {\r\n            if (writeRecord.children.hasOwnProperty(childName) &&\r\n                pathContains(pathChild(writeRecord.path, childName), path)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n */\r\nfunction writeTreeResetTree_(writeTree) {\r\n    writeTree.visibleWrites = writeTreeLayerTree_(writeTree.allWrites, writeTreeDefaultFilter_, newEmptyPath());\r\n    if (writeTree.allWrites.length > 0) {\r\n        writeTree.lastWriteId =\r\n            writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\r\n    }\r\n    else {\r\n        writeTree.lastWriteId = -1;\r\n    }\r\n}\r\n/**\r\n * The default filter used when constructing the tree. Keep everything that's visible.\r\n */\r\nfunction writeTreeDefaultFilter_(write) {\r\n    return write.visible;\r\n}\r\n/**\r\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n * event data at that path.\r\n */\r\nfunction writeTreeLayerTree_(writes, filter, treeRoot) {\r\n    var compoundWrite = CompoundWrite.empty();\r\n    for (var i = 0; i < writes.length; ++i) {\r\n        var write = writes[i];\r\n        // Theory, a later set will either:\r\n        // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n        // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n        if (filter(write)) {\r\n            var writePath = write.path;\r\n            var relativePath = void 0;\r\n            if (write.snap) {\r\n                if (pathContains(treeRoot, writePath)) {\r\n                    relativePath = newRelativePath(treeRoot, writePath);\r\n                    compoundWrite = compoundWriteAddWrite(compoundWrite, relativePath, write.snap);\r\n                }\r\n                else if (pathContains(writePath, treeRoot)) {\r\n                    relativePath = newRelativePath(writePath, treeRoot);\r\n                    compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), write.snap.getChild(relativePath));\r\n                }\r\n                else ;\r\n            }\r\n            else if (write.children) {\r\n                if (pathContains(treeRoot, writePath)) {\r\n                    relativePath = newRelativePath(treeRoot, writePath);\r\n                    compoundWrite = compoundWriteAddWrites(compoundWrite, relativePath, write.children);\r\n                }\r\n                else if (pathContains(writePath, treeRoot)) {\r\n                    relativePath = newRelativePath(writePath, treeRoot);\r\n                    if (pathIsEmpty(relativePath)) {\r\n                        compoundWrite = compoundWriteAddWrites(compoundWrite, newEmptyPath(), write.children);\r\n                    }\r\n                    else {\r\n                        var child = safeGet(write.children, pathGetFront(relativePath));\r\n                        if (child) {\r\n                            // There exists a child in this node that matches the root path\r\n                            var deepNode = child.getChild(pathPopFront(relativePath));\r\n                            compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), deepNode);\r\n                        }\r\n                    }\r\n                }\r\n                else ;\r\n            }\r\n            else {\r\n                throw assertionError('WriteRecord should have .snap or .children');\r\n            }\r\n        }\r\n    }\r\n    return compoundWrite;\r\n}\r\n/**\r\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n * writes), attempt to calculate a complete snapshot for the given path\r\n *\r\n * @param writeIdsToExclude - An optional set to be excluded\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\r\nfunction writeTreeCalcCompleteEventCache(writeTree, treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n    if (!writeIdsToExclude && !includeHiddenWrites) {\r\n        var shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            var subMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n            if (compoundWriteIsEmpty(subMerge)) {\r\n                return completeServerCache;\r\n            }\r\n            else if (completeServerCache == null &&\r\n                !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())) {\r\n                // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                return null;\r\n            }\r\n            else {\r\n                var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                return compoundWriteApply(subMerge, layeredCache);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\r\n            return completeServerCache;\r\n        }\r\n        else {\r\n            // If the server cache is null, and we don't have a complete cache, we need to return null\r\n            if (!includeHiddenWrites &&\r\n                completeServerCache == null &&\r\n                !compoundWriteHasCompleteWrite(merge, newEmptyPath())) {\r\n                return null;\r\n            }\r\n            else {\r\n                var filter = function (write) {\r\n                    return ((write.visible || includeHiddenWrites) &&\r\n                        (!writeIdsToExclude ||\r\n                            !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                        (pathContains(write.path, treePath) ||\r\n                            pathContains(treePath, write.path)));\r\n                };\r\n                var mergeAtPath = writeTreeLayerTree_(writeTree.allWrites, filter, treePath);\r\n                var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                return compoundWriteApply(mergeAtPath, layeredCache);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n * Used when creating new views, to pre-fill their complete event children snapshot.\r\n */\r\nfunction writeTreeCalcCompleteEventChildren(writeTree, treePath, completeServerChildren) {\r\n    var completeChildren = ChildrenNode.EMPTY_NODE;\r\n    var topLevelSet = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\r\n    if (topLevelSet) {\r\n        if (!topLevelSet.isLeafNode()) {\r\n            // we're shadowing everything. Return the children.\r\n            topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n            });\r\n        }\r\n        return completeChildren;\r\n    }\r\n    else if (completeServerChildren) {\r\n        // Layer any children we have on top of this\r\n        // We know we don't have a top-level set, so just enumerate existing children\r\n        var merge_1 = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var node = compoundWriteApply(compoundWriteChildCompoundWrite(merge_1, new Path(childName)), childNode);\r\n            completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n        });\r\n        // Add any complete children we have from the set\r\n        compoundWriteGetCompleteChildren(merge_1).forEach(function (namedNode) {\r\n            completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n        });\r\n        return completeChildren;\r\n    }\r\n    else {\r\n        // We don't have anything to layer on top of. Layer on any children we have\r\n        // Note that we can return an empty snap if we have a defined delete\r\n        var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        compoundWriteGetCompleteChildren(merge).forEach(function (namedNode) {\r\n            completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n        });\r\n        return completeChildren;\r\n    }\r\n}\r\n/**\r\n * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n * applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist\r\n */\r\nfunction writeTreeCalcEventCacheAfterServerOverwrite(writeTree, treePath, childPath, existingEventSnap, existingServerSnap) {\r\n    assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n    var path = pathChild(treePath, childPath);\r\n    if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\r\n        // At this point we can probably guarantee that we're in case 2, meaning no events\r\n        // May need to check visibility while doing the findRootMostValueAndPath call\r\n        return null;\r\n    }\r\n    else {\r\n        // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n        var childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\r\n        if (compoundWriteIsEmpty(childMerge)) {\r\n            // We're not shadowing at all. Case 1\r\n            return existingServerSnap.getChild(childPath);\r\n        }\r\n        else {\r\n            // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n            // However this is tricky to find out, since user updates don't necessary change the server\r\n            // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n            // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n            // only check if the updates change the serverNode.\r\n            // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n            return compoundWriteApply(childMerge, existingServerSnap.getChild(childPath));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\r\nfunction writeTreeCalcCompleteChild(writeTree, treePath, childKey, existingServerSnap) {\r\n    var path = pathChild(treePath, childKey);\r\n    var shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\r\n    if (shadowingNode != null) {\r\n        return shadowingNode;\r\n    }\r\n    else {\r\n        if (existingServerSnap.isCompleteForChild(childKey)) {\r\n            var childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\r\n            return compoundWriteApply(childMerge, existingServerSnap.getNode().getImmediateChild(childKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n */\r\nfunction writeTreeShadowingWrite(writeTree, path) {\r\n    return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\r\n}\r\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window.\r\n */\r\nfunction writeTreeCalcIndexedSlice(writeTree, treePath, completeServerData, startPost, count, reverse, index) {\r\n    var toIterate;\r\n    var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n    var shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\r\n    if (shadowingNode != null) {\r\n        toIterate = shadowingNode;\r\n    }\r\n    else if (completeServerData != null) {\r\n        toIterate = compoundWriteApply(merge, completeServerData);\r\n    }\r\n    else {\r\n        // no children to iterate on\r\n        return [];\r\n    }\r\n    toIterate = toIterate.withIndex(index);\r\n    if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n        var nodes = [];\r\n        var cmp = index.getCompare();\r\n        var iter = reverse\r\n            ? toIterate.getReverseIteratorFrom(startPost, index)\r\n            : toIterate.getIteratorFrom(startPost, index);\r\n        var next = iter.getNext();\r\n        while (next && nodes.length < count) {\r\n            if (cmp(next, startPost) !== 0) {\r\n                nodes.push(next);\r\n            }\r\n            next = iter.getNext();\r\n        }\r\n        return nodes;\r\n    }\r\n    else {\r\n        return [];\r\n    }\r\n}\r\nfunction newWriteTree() {\r\n    return {\r\n        visibleWrites: CompoundWrite.empty(),\r\n        allWrites: [],\r\n        lastWriteId: -1\r\n    };\r\n}\r\n/**\r\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n * can lead to a more expensive calculation.\r\n *\r\n * @param writeIdsToExclude - Optional writes to exclude.\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\r\nfunction writeTreeRefCalcCompleteEventCache(writeTreeRef, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n    return writeTreeCalcCompleteEventCache(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n}\r\n/**\r\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n * mix of the given server data and write data.\r\n *\r\n */\r\nfunction writeTreeRefCalcCompleteEventChildren(writeTreeRef, completeServerChildren) {\r\n    return writeTreeCalcCompleteEventChildren(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerChildren);\r\n}\r\n/**\r\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n * if anything, needs to be applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events should be raised\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n *\r\n *\r\n */\r\nfunction writeTreeRefCalcEventCacheAfterServerOverwrite(writeTreeRef, path, existingEventSnap, existingServerSnap) {\r\n    return writeTreeCalcEventCacheAfterServerOverwrite(writeTreeRef.writeTree, writeTreeRef.treePath, path, existingEventSnap, existingServerSnap);\r\n}\r\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n *\r\n */\r\nfunction writeTreeRefShadowingWrite(writeTreeRef, path) {\r\n    return writeTreeShadowingWrite(writeTreeRef.writeTree, pathChild(writeTreeRef.treePath, path));\r\n}\r\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window\r\n */\r\nfunction writeTreeRefCalcIndexedSlice(writeTreeRef, completeServerData, startPost, count, reverse, index) {\r\n    return writeTreeCalcIndexedSlice(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerData, startPost, count, reverse, index);\r\n}\r\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\r\nfunction writeTreeRefCalcCompleteChild(writeTreeRef, childKey, existingServerCache) {\r\n    return writeTreeCalcCompleteChild(writeTreeRef.writeTree, writeTreeRef.treePath, childKey, existingServerCache);\r\n}\r\n/**\r\n * Return a WriteTreeRef for a child.\r\n */\r\nfunction writeTreeRefChild(writeTreeRef, childName) {\r\n    return newWriteTreeRef(pathChild(writeTreeRef.treePath, childName), writeTreeRef.writeTree);\r\n}\r\nfunction newWriteTreeRef(path, writeTree) {\r\n    return {\r\n        treePath: path,\r\n        writeTree: writeTree\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap = new Map();\r\n    }\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey = change.childName;\r\n        assert(type === \"child_added\" /* CHILD_ADDED */ ||\r\n            type === \"child_changed\" /* CHILD_CHANGED */ ||\r\n            type === \"child_removed\" /* CHILD_REMOVED */, 'Only child changes supported for tracking');\r\n        assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = this.changeMap.get(childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type === \"child_added\" /* CHILD_ADDED */ &&\r\n                oldType === \"child_removed\" /* CHILD_REMOVED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.snapshotNode));\r\n            }\r\n            else if (type === \"child_removed\" /* CHILD_REMOVED */ &&\r\n                oldType === \"child_added\" /* CHILD_ADDED */) {\r\n                this.changeMap.delete(childKey);\r\n            }\r\n            else if (type === \"child_removed\" /* CHILD_REMOVED */ &&\r\n                oldType === \"child_changed\" /* CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildRemoved(childKey, oldChange.oldSnap));\r\n            }\r\n            else if (type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n                oldType === \"child_added\" /* CHILD_ADDED */) {\r\n                this.changeMap.set(childKey, changeChildAdded(childKey, change.snapshotNode));\r\n            }\r\n            else if (type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n                oldType === \"child_changed\" /* CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap));\r\n            }\r\n            else {\r\n                throw assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap.set(childKey, change);\r\n        }\r\n    };\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return Array.from(this.changeMap.values());\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.eventCache;\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.serverCache;\r\n            return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\r\n        }\r\n    };\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : viewCacheGetCompleteServerSnap(this.viewCache_);\r\n        var nodes = writeTreeRefCalcIndexedSlice(this.writes_, completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newViewProcessor(filter) {\r\n    return { filter: filter };\r\n}\r\nfunction viewProcessorAssertIndexed(viewProcessor, viewCache) {\r\n    assert(viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Event snap not indexed');\r\n    assert(viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Server snap not indexed');\r\n}\r\nfunction viewProcessorApplyOperation(viewProcessor, oldViewCache, operation, writesCache, completeCache) {\r\n    var accumulator = new ChildChangeAccumulator();\r\n    var newViewCache, filterServerNode;\r\n    if (operation.type === OperationType.OVERWRITE) {\r\n        var overwrite = operation;\r\n        if (overwrite.source.fromUser) {\r\n            newViewCache = viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            assert(overwrite.source.fromServer, 'Unknown source.');\r\n            // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n            // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n            // again\r\n            filterServerNode =\r\n                overwrite.source.tagged ||\r\n                    (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\r\n            newViewCache = viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.MERGE) {\r\n        var merge = operation;\r\n        if (merge.source.fromUser) {\r\n            newViewCache = viewProcessorApplyUserMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            assert(merge.source.fromServer, 'Unknown source.');\r\n            // We filter the node if it's a tagged update or the node has been previously filtered\r\n            filterServerNode =\r\n                merge.source.tagged || oldViewCache.serverCache.isFiltered();\r\n            newViewCache = viewProcessorApplyServerMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n        var ackUserWrite = operation;\r\n        if (!ackUserWrite.revert) {\r\n            newViewCache = viewProcessorAckUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            newViewCache = viewProcessorRevertUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n        newViewCache = viewProcessorListenComplete(viewProcessor, oldViewCache, operation.path, writesCache, accumulator);\r\n    }\r\n    else {\r\n        throw assertionError('Unknown operation type: ' + operation.type);\r\n    }\r\n    var changes = accumulator.getChanges();\r\n    viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\r\n    return { viewCache: newViewCache, changes: changes };\r\n}\r\nfunction viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, accumulator) {\r\n    var eventSnap = newViewCache.eventCache;\r\n    if (eventSnap.isFullyInitialized()) {\r\n        var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n        var oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\r\n        if (accumulator.length > 0 ||\r\n            !oldViewCache.eventCache.isFullyInitialized() ||\r\n            (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\r\n            !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\r\n            accumulator.push(changeValue(viewCacheGetCompleteEventSnap(newViewCache)));\r\n        }\r\n    }\r\n}\r\nfunction viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, viewCache, changePath, writesCache, source, accumulator) {\r\n    var oldEventSnap = viewCache.eventCache;\r\n    if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\r\n        // we have a shadowing write, ignore changes\r\n        return viewCache;\r\n    }\r\n    else {\r\n        var newEventCache = void 0, serverNode = void 0;\r\n        if (pathIsEmpty(changePath)) {\r\n            // TODO: figure out how this plays with \"sliding ack windows\"\r\n            assert(viewCache.serverCache.isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n            if (viewCache.serverCache.isFiltered()) {\r\n                // We need to special case this, because we need to only apply writes to complete children, or\r\n                // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                // writes cannot be guaranteed to be complete\r\n                var serverCache = viewCacheGetCompleteServerSnap(viewCache);\r\n                var completeChildren = serverCache instanceof ChildrenNode\r\n                    ? serverCache\r\n                    : ChildrenNode.EMPTY_NODE;\r\n                var completeEventChildren = writeTreeRefCalcCompleteEventChildren(writesCache, completeChildren);\r\n                newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeEventChildren, accumulator);\r\n            }\r\n            else {\r\n                var completeNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n                newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeNode, accumulator);\r\n            }\r\n        }\r\n        else {\r\n            var childKey = pathGetFront(changePath);\r\n            if (childKey === '.priority') {\r\n                assert(pathGetLength(changePath) === 1, \"Can't have a priority with additional path components\");\r\n                var oldEventNode = oldEventSnap.getNode();\r\n                serverNode = viewCache.serverCache.getNode();\r\n                // we might have overwrites for this priority\r\n                var updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventNode, serverNode);\r\n                if (updatedPriority != null) {\r\n                    newEventCache = viewProcessor.filter.updatePriority(oldEventNode, updatedPriority);\r\n                }\r\n                else {\r\n                    // priority didn't change, keep old node\r\n                    newEventCache = oldEventSnap.getNode();\r\n                }\r\n            }\r\n            else {\r\n                var childChangePath = pathPopFront(changePath);\r\n                // update child\r\n                var newEventChild = void 0;\r\n                if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                    serverNode = viewCache.serverCache.getNode();\r\n                    var eventChildUpdate = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventSnap.getNode(), serverNode);\r\n                    if (eventChildUpdate != null) {\r\n                        newEventChild = oldEventSnap\r\n                            .getNode()\r\n                            .getImmediateChild(childKey)\r\n                            .updateChild(childChangePath, eventChildUpdate);\r\n                    }\r\n                    else {\r\n                        // Nothing changed, just keep the old child\r\n                        newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                    }\r\n                }\r\n                else {\r\n                    newEventChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\r\n                }\r\n                if (newEventChild != null) {\r\n                    newEventCache = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                }\r\n                else {\r\n                    // no complete child available or no change\r\n                    newEventCache = oldEventSnap.getNode();\r\n                }\r\n            }\r\n        }\r\n        return viewCacheUpdateEventSnap(viewCache, newEventCache, oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath), viewProcessor.filter.filtersNodes());\r\n    }\r\n}\r\nfunction viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n    var oldServerSnap = oldViewCache.serverCache;\r\n    var newServerCache;\r\n    var serverFilter = filterServerNode\r\n        ? viewProcessor.filter\r\n        : viewProcessor.filter.getIndexedFilter();\r\n    if (pathIsEmpty(changePath)) {\r\n        newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n    }\r\n    else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n        // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n        var newServerNode = oldServerSnap\r\n            .getNode()\r\n            .updateChild(changePath, changedSnap);\r\n        newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n    }\r\n    else {\r\n        var childKey = pathGetFront(changePath);\r\n        if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n            pathGetLength(changePath) > 1) {\r\n            // We don't update incomplete nodes with updates intended for other listeners\r\n            return oldViewCache;\r\n        }\r\n        var childChangePath = pathPopFront(changePath);\r\n        var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n        var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n        if (childKey === '.priority') {\r\n            newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n        }\r\n        else {\r\n            newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n        }\r\n    }\r\n    var newViewCache = viewCacheUpdateServerSnap(oldViewCache, newServerCache, oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath), serverFilter.filtersNodes());\r\n    var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n    return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, changePath, writesCache, source, accumulator);\r\n}\r\nfunction viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n    var oldEventSnap = oldViewCache.eventCache;\r\n    var newViewCache, newEventCache;\r\n    var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n    if (pathIsEmpty(changePath)) {\r\n        newEventCache = viewProcessor.filter.updateFullNode(oldViewCache.eventCache.getNode(), changedSnap, accumulator);\r\n        newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, true, viewProcessor.filter.filtersNodes());\r\n    }\r\n    else {\r\n        var childKey = pathGetFront(changePath);\r\n        if (childKey === '.priority') {\r\n            newEventCache = viewProcessor.filter.updatePriority(oldViewCache.eventCache.getNode(), changedSnap);\r\n            newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n        }\r\n        else {\r\n            var childChangePath = pathPopFront(changePath);\r\n            var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n            var newChild = void 0;\r\n            if (pathIsEmpty(childChangePath)) {\r\n                // Child overwrite, we can replace the child\r\n                newChild = changedSnap;\r\n            }\r\n            else {\r\n                var childNode = source.getCompleteChild(childKey);\r\n                if (childNode != null) {\r\n                    if (pathGetBack(childChangePath) === '.priority' &&\r\n                        childNode.getChild(pathParent(childChangePath)).isEmpty()) {\r\n                        // This is a priority update on an empty node. If this node exists on the server, the\r\n                        // server will send down the priority in the update, so ignore for now\r\n                        newChild = childNode;\r\n                    }\r\n                    else {\r\n                        newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                    }\r\n                }\r\n                else {\r\n                    // There is no complete child node available\r\n                    newChild = ChildrenNode.EMPTY_NODE;\r\n                }\r\n            }\r\n            if (!oldChild.equals(newChild)) {\r\n                var newEventSnap = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventSnap, oldEventSnap.isFullyInitialized(), viewProcessor.filter.filtersNodes());\r\n            }\r\n            else {\r\n                newViewCache = oldViewCache;\r\n            }\r\n        }\r\n    }\r\n    return newViewCache;\r\n}\r\nfunction viewProcessorCacheHasChild(viewCache, childKey) {\r\n    return viewCache.eventCache.isCompleteForChild(childKey);\r\n}\r\nfunction viewProcessorApplyUserMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n    // window leaving room for new items.  It's important we process these changes first, so we\r\n    // iterate the changes twice, first processing any that affect items currently in view.\r\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n    // not the other.\r\n    var curViewCache = viewCache;\r\n    changedChildren.foreach(function (relativePath, childNode) {\r\n        var writePath = pathChild(path, relativePath);\r\n        if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\r\n            curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n        }\r\n    });\r\n    changedChildren.foreach(function (relativePath, childNode) {\r\n        var writePath = pathChild(path, relativePath);\r\n        if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\r\n            curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n        }\r\n    });\r\n    return curViewCache;\r\n}\r\nfunction viewProcessorApplyMerge(viewProcessor, node, merge) {\r\n    merge.foreach(function (relativePath, childNode) {\r\n        node = node.updateChild(relativePath, childNode);\r\n    });\r\n    return node;\r\n}\r\nfunction viewProcessorApplyServerMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n    // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n    // wait for the complete data update coming soon.\r\n    if (viewCache.serverCache.getNode().isEmpty() &&\r\n        !viewCache.serverCache.isFullyInitialized()) {\r\n        return viewCache;\r\n    }\r\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n    // window leaving room for new items.  It's important we process these changes first, so we\r\n    // iterate the changes twice, first processing any that affect items currently in view.\r\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n    // not the other.\r\n    var curViewCache = viewCache;\r\n    var viewMergeTree;\r\n    if (pathIsEmpty(path)) {\r\n        viewMergeTree = changedChildren;\r\n    }\r\n    else {\r\n        viewMergeTree = new ImmutableTree(null).setTree(path, changedChildren);\r\n    }\r\n    var serverNode = viewCache.serverCache.getNode();\r\n    viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n        if (serverNode.hasChild(childKey)) {\r\n            var serverChild = viewCache.serverCache\r\n                .getNode()\r\n                .getImmediateChild(childKey);\r\n            var newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childTree);\r\n            curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n        }\r\n    });\r\n    viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n        var isUnknownDeepMerge = !viewCache.serverCache.isCompleteForChild(childKey) &&\r\n            childMergeTree.value === undefined;\r\n        if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n            var serverChild = viewCache.serverCache\r\n                .getNode()\r\n                .getImmediateChild(childKey);\r\n            var newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childMergeTree);\r\n            curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n        }\r\n    });\r\n    return curViewCache;\r\n}\r\nfunction viewProcessorAckUserWrite(viewProcessor, viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n    if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\r\n        return viewCache;\r\n    }\r\n    // Only filter server node if it is currently filtered\r\n    var filterServerNode = viewCache.serverCache.isFiltered();\r\n    // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n    // now that it won't be shadowed.\r\n    var serverCache = viewCache.serverCache;\r\n    if (affectedTree.value != null) {\r\n        // This is an overwrite.\r\n        if ((pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\r\n            serverCache.isCompleteForPath(ackPath)) {\r\n            return viewProcessorApplyServerOverwrite(viewProcessor, viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n        else if (pathIsEmpty(ackPath)) {\r\n            // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n            // should just re-apply whatever we have in our cache as a merge.\r\n            var changedChildren_1 = new ImmutableTree(null);\r\n            serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n            });\r\n            return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n        else {\r\n            return viewCache;\r\n        }\r\n    }\r\n    else {\r\n        // This is a merge.\r\n        var changedChildren_2 = new ImmutableTree(null);\r\n        affectedTree.foreach(function (mergePath, value) {\r\n            var serverCachePath = pathChild(ackPath, mergePath);\r\n            if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n            }\r\n        });\r\n        return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n    }\r\n}\r\nfunction viewProcessorListenComplete(viewProcessor, viewCache, path, writesCache, accumulator) {\r\n    var oldServerNode = viewCache.serverCache;\r\n    var newViewCache = viewCacheUpdateServerSnap(viewCache, oldServerNode.getNode(), oldServerNode.isFullyInitialized() || pathIsEmpty(path), oldServerNode.isFiltered());\r\n    return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n}\r\nfunction viewProcessorRevertUserWrite(viewProcessor, viewCache, path, writesCache, completeServerCache, accumulator) {\r\n    var complete;\r\n    if (writeTreeRefShadowingWrite(writesCache, path) != null) {\r\n        return viewCache;\r\n    }\r\n    else {\r\n        var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n        var oldEventCache = viewCache.eventCache.getNode();\r\n        var newEventCache = void 0;\r\n        if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\r\n            var newNode = void 0;\r\n            if (viewCache.serverCache.isFullyInitialized()) {\r\n                newNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n            }\r\n            else {\r\n                var serverChildren = viewCache.serverCache.getNode();\r\n                assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                newNode = writeTreeRefCalcCompleteEventChildren(writesCache, serverChildren);\r\n            }\r\n            newNode = newNode;\r\n            newEventCache = viewProcessor.filter.updateFullNode(oldEventCache, newNode, accumulator);\r\n        }\r\n        else {\r\n            var childKey = pathGetFront(path);\r\n            var newChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\r\n            if (newChild == null &&\r\n                viewCache.serverCache.isCompleteForChild(childKey)) {\r\n                newChild = oldEventCache.getImmediateChild(childKey);\r\n            }\r\n            if (newChild != null) {\r\n                newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, newChild, pathPopFront(path), source, accumulator);\r\n            }\r\n            else if (viewCache.eventCache.getNode().hasChild(childKey)) {\r\n                // No complete child available, delete the existing one, if any\r\n                newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, pathPopFront(path), source, accumulator);\r\n            }\r\n            else {\r\n                newEventCache = oldEventCache;\r\n            }\r\n            if (newEventCache.isEmpty() &&\r\n                viewCache.serverCache.isFullyInitialized()) {\r\n                // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                complete = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n                if (complete.isLeafNode()) {\r\n                    newEventCache = viewProcessor.filter.updateFullNode(newEventCache, complete, accumulator);\r\n                }\r\n            }\r\n        }\r\n        complete =\r\n            viewCache.serverCache.isFullyInitialized() ||\r\n                writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\r\n        return viewCacheUpdateEventSnap(viewCache, newEventCache, complete, viewProcessor.filter.filtersNodes());\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n */\r\nvar View = /** @class */ (function () {\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_._queryParams;\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = queryParamsGetNodeFilter(params);\r\n        this.processor_ = newViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.serverCache;\r\n        var initialEventCache = initialViewCache.eventCache;\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        this.viewCache_ = newViewCache(newEventCache, newServerCache);\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    Object.defineProperty(View.prototype, \"query\", {\r\n        get: function () {\r\n            return this.query_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return View;\r\n}());\r\nfunction viewGetServerCache(view) {\r\n    return view.viewCache_.serverCache.getNode();\r\n}\r\nfunction viewGetCompleteNode(view) {\r\n    return viewCacheGetCompleteEventSnap(view.viewCache_);\r\n}\r\nfunction viewGetCompleteServerCache(view, path) {\r\n    var cache = viewCacheGetCompleteServerSnap(view.viewCache_);\r\n    if (cache) {\r\n        // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n        // we need to see if it contains the child we're interested in.\r\n        if (view.query._queryParams.loadsAllData() ||\r\n            (!pathIsEmpty(path) &&\r\n                !cache.getImmediateChild(pathGetFront(path)).isEmpty())) {\r\n            return cache.getChild(path);\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction viewIsEmpty(view) {\r\n    return view.eventRegistrations_.length === 0;\r\n}\r\nfunction viewAddEventRegistration(view, eventRegistration) {\r\n    view.eventRegistrations_.push(eventRegistration);\r\n}\r\n/**\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\r\nfunction viewRemoveEventRegistration(view, eventRegistration, cancelError) {\r\n    var cancelEvents = [];\r\n    if (cancelError) {\r\n        assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n        var path_1 = view.query._path;\r\n        view.eventRegistrations_.forEach(function (registration) {\r\n            var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n            if (maybeEvent) {\r\n                cancelEvents.push(maybeEvent);\r\n            }\r\n        });\r\n    }\r\n    if (eventRegistration) {\r\n        var remaining = [];\r\n        for (var i = 0; i < view.eventRegistrations_.length; ++i) {\r\n            var existing = view.eventRegistrations_[i];\r\n            if (!existing.matches(eventRegistration)) {\r\n                remaining.push(existing);\r\n            }\r\n            else if (eventRegistration.hasAnyCallback()) {\r\n                // We're removing just this one\r\n                remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\r\n                break;\r\n            }\r\n        }\r\n        view.eventRegistrations_ = remaining;\r\n    }\r\n    else {\r\n        view.eventRegistrations_ = [];\r\n    }\r\n    return cancelEvents;\r\n}\r\n/**\r\n * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n */\r\nfunction viewApplyOperation(view, operation, writesCache, completeServerCache) {\r\n    if (operation.type === OperationType.MERGE &&\r\n        operation.source.queryId !== null) {\r\n        assert(viewCacheGetCompleteServerSnap(view.viewCache_), 'We should always have a full cache before handling merges');\r\n        assert(viewCacheGetCompleteEventSnap(view.viewCache_), 'Missing event cache, even though we have a server cache');\r\n    }\r\n    var oldViewCache = view.viewCache_;\r\n    var result = viewProcessorApplyOperation(view.processor_, oldViewCache, operation, writesCache, completeServerCache);\r\n    viewProcessorAssertIndexed(view.processor_, result.viewCache);\r\n    assert(result.viewCache.serverCache.isFullyInitialized() ||\r\n        !oldViewCache.serverCache.isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n    view.viewCache_ = result.viewCache;\r\n    return viewGenerateEventsForChanges_(view, result.changes, result.viewCache.eventCache.getNode(), null);\r\n}\r\nfunction viewGetInitialEvents(view, registration) {\r\n    var eventSnap = view.viewCache_.eventCache;\r\n    var initialChanges = [];\r\n    if (!eventSnap.getNode().isLeafNode()) {\r\n        var eventNode = eventSnap.getNode();\r\n        eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            initialChanges.push(changeChildAdded(key, childNode));\r\n        });\r\n    }\r\n    if (eventSnap.isFullyInitialized()) {\r\n        initialChanges.push(changeValue(eventSnap.getNode()));\r\n    }\r\n    return viewGenerateEventsForChanges_(view, initialChanges, eventSnap.getNode(), registration);\r\n}\r\nfunction viewGenerateEventsForChanges_(view, changes, eventCache, eventRegistration) {\r\n    var registrations = eventRegistration\r\n        ? [eventRegistration]\r\n        : view.eventRegistrations_;\r\n    return eventGeneratorGenerateEventsForChanges(view.eventGenerator_, changes, eventCache, registrations);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         */\r\n        this.views = new Map();\r\n    }\r\n    return SyncPoint;\r\n}());\r\nfunction syncPointSetReferenceConstructor(val) {\r\n    assert(!referenceConstructor$1, '__referenceConstructor has already been defined');\r\n    referenceConstructor$1 = val;\r\n}\r\nfunction syncPointGetReferenceConstructor() {\r\n    assert(referenceConstructor$1, 'Reference.ts has not been loaded');\r\n    return referenceConstructor$1;\r\n}\r\nfunction syncPointIsEmpty(syncPoint) {\r\n    return syncPoint.views.size === 0;\r\n}\r\nfunction syncPointApplyOperation(syncPoint, operation, writesCache, optCompleteServerCache) {\r\n    var e_1, _a;\r\n    var queryId = operation.source.queryId;\r\n    if (queryId !== null) {\r\n        var view = syncPoint.views.get(queryId);\r\n        assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n        return viewApplyOperation(view, operation, writesCache, optCompleteServerCache);\r\n    }\r\n    else {\r\n        var events = [];\r\n        try {\r\n            for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                events = events.concat(viewApplyOperation(view, operation, writesCache, optCompleteServerCache));\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        return events;\r\n    }\r\n}\r\n/**\r\n * Get a view for the specified query.\r\n *\r\n * @param query - The query to return a view for\r\n * @param writesCache\r\n * @param serverCache\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\r\nfunction syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete) {\r\n    var queryId = query._queryIdentifier;\r\n    var view = syncPoint.views.get(queryId);\r\n    if (!view) {\r\n        // TODO: make writesCache take flag for complete server node\r\n        var eventCache = writeTreeRefCalcCompleteEventCache(writesCache, serverCacheComplete ? serverCache : null);\r\n        var eventCacheComplete = false;\r\n        if (eventCache) {\r\n            eventCacheComplete = true;\r\n        }\r\n        else if (serverCache instanceof ChildrenNode) {\r\n            eventCache = writeTreeRefCalcCompleteEventChildren(writesCache, serverCache);\r\n            eventCacheComplete = false;\r\n        }\r\n        else {\r\n            eventCache = ChildrenNode.EMPTY_NODE;\r\n            eventCacheComplete = false;\r\n        }\r\n        var viewCache = newViewCache(new CacheNode(eventCache, eventCacheComplete, false), new CacheNode(serverCache, serverCacheComplete, false));\r\n        return new View(query, viewCache);\r\n    }\r\n    return view;\r\n}\r\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @param query\r\n * @param eventRegistration\r\n * @param writesCache\r\n * @param serverCache - Complete server cache, if we have it.\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\r\nfunction syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n    var view = syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete);\r\n    if (!syncPoint.views.has(query._queryIdentifier)) {\r\n        syncPoint.views.set(query._queryIdentifier, view);\r\n    }\r\n    // This is guaranteed to exist now, we just created anything that was missing\r\n    viewAddEventRegistration(view, eventRegistration);\r\n    return viewGetInitialEvents(view, eventRegistration);\r\n}\r\n/**\r\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n *\r\n * If query is the default query, we'll check all views for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n *\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns removed queries and any cancel events\r\n */\r\nfunction syncPointRemoveEventRegistration(syncPoint, query, eventRegistration, cancelError) {\r\n    var e_2, _a;\r\n    var queryId = query._queryIdentifier;\r\n    var removed = [];\r\n    var cancelEvents = [];\r\n    var hadCompleteView = syncPointHasCompleteView(syncPoint);\r\n    if (queryId === 'default') {\r\n        try {\r\n            // When you do ref.off(...), we search all views for the registration to remove.\r\n            for (var _b = __values(syncPoint.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var _d = __read(_c.value, 2), viewQueryId = _d[0], view = _d[1];\r\n                cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\r\n                if (viewIsEmpty(view)) {\r\n                    syncPoint.views.delete(viewQueryId);\r\n                    // We'll deal with complete views later.\r\n                    if (!view.query._queryParams.loadsAllData()) {\r\n                        removed.push(view.query);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n    }\r\n    else {\r\n        // remove the callback from the specific view.\r\n        var view = syncPoint.views.get(queryId);\r\n        if (view) {\r\n            cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\r\n            if (viewIsEmpty(view)) {\r\n                syncPoint.views.delete(queryId);\r\n                // We'll deal with complete views later.\r\n                if (!view.query._queryParams.loadsAllData()) {\r\n                    removed.push(view.query);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\r\n        // We removed our last complete view.\r\n        removed.push(new (syncPointGetReferenceConstructor())(query._repo, query._path));\r\n    }\r\n    return { removed: removed, events: cancelEvents };\r\n}\r\nfunction syncPointGetQueryViews(syncPoint) {\r\n    var e_3, _a;\r\n    var result = [];\r\n    try {\r\n        for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var view = _c.value;\r\n            if (!view.query._queryParams.loadsAllData()) {\r\n                result.push(view);\r\n            }\r\n        }\r\n    }\r\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_3) throw e_3.error; }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * @param path - The path to the desired complete snapshot\r\n * @returns A complete cache, if it exists\r\n */\r\nfunction syncPointGetCompleteServerCache(syncPoint, path) {\r\n    var e_4, _a;\r\n    var serverCache = null;\r\n    try {\r\n        for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var view = _c.value;\r\n            serverCache = serverCache || viewGetCompleteServerCache(view, path);\r\n        }\r\n    }\r\n    catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_4) throw e_4.error; }\r\n    }\r\n    return serverCache;\r\n}\r\nfunction syncPointViewForQuery(syncPoint, query) {\r\n    var params = query._queryParams;\r\n    if (params.loadsAllData()) {\r\n        return syncPointGetCompleteView(syncPoint);\r\n    }\r\n    else {\r\n        var queryId = query._queryIdentifier;\r\n        return syncPoint.views.get(queryId);\r\n    }\r\n}\r\nfunction syncPointViewExistsForQuery(syncPoint, query) {\r\n    return syncPointViewForQuery(syncPoint, query) != null;\r\n}\r\nfunction syncPointHasCompleteView(syncPoint) {\r\n    return syncPointGetCompleteView(syncPoint) != null;\r\n}\r\nfunction syncPointGetCompleteView(syncPoint) {\r\n    var e_5, _a;\r\n    try {\r\n        for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var view = _c.value;\r\n            if (view.query._queryParams.loadsAllData()) {\r\n                return view;\r\n            }\r\n        }\r\n    }\r\n    catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_5) throw e_5.error; }\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar referenceConstructor;\r\nfunction syncTreeSetReferenceConstructor(val) {\r\n    assert(!referenceConstructor, '__referenceConstructor has already been defined');\r\n    referenceConstructor = val;\r\n}\r\nfunction syncTreeGetReferenceConstructor() {\r\n    assert(referenceConstructor, 'Reference.ts has not been loaded');\r\n    return referenceConstructor;\r\n}\r\n/**\r\n * Static tracker for next query tag.\r\n */\r\nvar syncTreeNextQueryTag_ = 1;\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param listenProvider_ - Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         */\r\n        this.syncPointTree_ = new ImmutableTree(null);\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         */\r\n        this.pendingWriteTree_ = newWriteTree();\r\n        this.tagToQueryMap = new Map();\r\n        this.queryToTagMap = new Map();\r\n    }\r\n    return SyncTree;\r\n}());\r\n/**\r\n * Apply the data changes for a user-generated set() or transaction() call.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyUserOverwrite(syncTree, path, newData, writeId, visible) {\r\n    // Record pending write.\r\n    writeTreeAddOverwrite(syncTree.pendingWriteTree_, path, newData, writeId, visible);\r\n    if (!visible) {\r\n        return [];\r\n    }\r\n    else {\r\n        return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceUser(), path, newData));\r\n    }\r\n}\r\n/**\r\n * Apply the data from a user-generated update() call\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyUserMerge(syncTree, path, changedChildren, writeId) {\r\n    // Record pending merge.\r\n    writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\r\n    var changeTree = ImmutableTree.fromObject(changedChildren);\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceUser(), path, changeTree));\r\n}\r\n/**\r\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n *\r\n * @param revert - True if the given write failed and needs to be reverted\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeAckUserWrite(syncTree, writeId, revert) {\r\n    if (revert === void 0) { revert = false; }\r\n    var write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\r\n    var needToReevaluate = writeTreeRemoveWrite(syncTree.pendingWriteTree_, writeId);\r\n    if (!needToReevaluate) {\r\n        return [];\r\n    }\r\n    else {\r\n        var affectedTree_1 = new ImmutableTree(null);\r\n        if (write.snap != null) {\r\n            // overwrite\r\n            affectedTree_1 = affectedTree_1.set(newEmptyPath(), true);\r\n        }\r\n        else {\r\n            each(write.children, function (pathString) {\r\n                affectedTree_1 = affectedTree_1.set(new Path(pathString), true);\r\n            });\r\n        }\r\n        return syncTreeApplyOperationToSyncPoints_(syncTree, new AckUserWrite(write.path, affectedTree_1, revert));\r\n    }\r\n}\r\n/**\r\n * Apply new server data for the specified path..\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyServerOverwrite(syncTree, path, newData) {\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceServer(), path, newData));\r\n}\r\n/**\r\n * Apply new server data to be merged in at the specified path.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyServerMerge(syncTree, path, changedChildren) {\r\n    var changeTree = ImmutableTree.fromObject(changedChildren);\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceServer(), path, changeTree));\r\n}\r\n/**\r\n * Apply a listen complete for a query\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyListenComplete(syncTree, path) {\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new ListenComplete(newOperationSourceServer(), path));\r\n}\r\n/**\r\n * Apply a listen complete for a tagged query\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedListenComplete(syncTree, path, tag) {\r\n    var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey) {\r\n        var r = syncTreeParseQueryKey_(queryKey);\r\n        var queryPath = r.path, queryId = r.queryId;\r\n        var relativePath = newRelativePath(queryPath, path);\r\n        var op = new ListenComplete(newOperationSourceServerTaggedQuery(queryId), relativePath);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // We've already removed the query. No big deal, ignore the update\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Remove event callback(s).\r\n *\r\n * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n *\r\n * @param eventRegistration - If null, all callbacks are removed.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\r\nfunction syncTreeRemoveEventRegistration(syncTree, query, eventRegistration, cancelError) {\r\n    // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n    var path = query._path;\r\n    var maybeSyncPoint = syncTree.syncPointTree_.get(path);\r\n    var cancelEvents = [];\r\n    // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n    // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n    // not loadsAllData().\r\n    if (maybeSyncPoint &&\r\n        (query._queryIdentifier === 'default' ||\r\n            syncPointViewExistsForQuery(maybeSyncPoint, query))) {\r\n        var removedAndEvents = syncPointRemoveEventRegistration(maybeSyncPoint, query, eventRegistration, cancelError);\r\n        if (syncPointIsEmpty(maybeSyncPoint)) {\r\n            syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\r\n        }\r\n        var removed = removedAndEvents.removed;\r\n        cancelEvents = removedAndEvents.events;\r\n        // We may have just removed one of many listeners and can short-circuit this whole process\r\n        // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n        // properly set up.\r\n        //\r\n        // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n        // queryId === 'default'\r\n        var removingDefault = -1 !==\r\n            removed.findIndex(function (query) {\r\n                return query._queryParams.loadsAllData();\r\n            });\r\n        var covered = syncTree.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n            return syncPointHasCompleteView(parentSyncPoint);\r\n        });\r\n        if (removingDefault && !covered) {\r\n            var subtree = syncTree.syncPointTree_.subtree(path);\r\n            // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n            // removal\r\n            if (!subtree.isEmpty()) {\r\n                // We need to fold over our subtree and collect the listeners to send\r\n                var newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\r\n                // Ok, we've collected all the listens we need. Set them up.\r\n                for (var i = 0; i < newViews.length; ++i) {\r\n                    var view = newViews[i], newQuery = view.query;\r\n                    var listener = syncTreeCreateListenerForView_(syncTree, view);\r\n                    syncTree.listenProvider_.startListening(syncTreeQueryForListening_(newQuery), syncTreeTagForQuery_(syncTree, newQuery), listener.hashFn, listener.onComplete);\r\n                }\r\n            }\r\n        }\r\n        // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n        // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n        // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n        if (!covered && removed.length > 0 && !cancelError) {\r\n            // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n            // default. Otherwise, we need to iterate through and cancel each individual query\r\n            if (removingDefault) {\r\n                // We don't tag default listeners\r\n                var defaultTag = null;\r\n                syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(query), defaultTag);\r\n            }\r\n            else {\r\n                removed.forEach(function (queryToRemove) {\r\n                    var tagToRemove = syncTree.queryToTagMap.get(syncTreeMakeQueryKey_(queryToRemove));\r\n                    syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToRemove), tagToRemove);\r\n                });\r\n            }\r\n        }\r\n        // Now, clear all of the tags we're tracking for the removed listens\r\n        syncTreeRemoveTags_(syncTree, removed);\r\n    }\r\n    return cancelEvents;\r\n}\r\n/**\r\n * Apply new server data for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedQueryOverwrite(syncTree, path, snap, tag) {\r\n    var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey != null) {\r\n        var r = syncTreeParseQueryKey_(queryKey);\r\n        var queryPath = r.path, queryId = r.queryId;\r\n        var relativePath = newRelativePath(queryPath, path);\r\n        var op = new Overwrite(newOperationSourceServerTaggedQuery(queryId), relativePath, snap);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // Query must have been removed already\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Apply server data to be merged in for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedQueryMerge(syncTree, path, changedChildren, tag) {\r\n    var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey) {\r\n        var r = syncTreeParseQueryKey_(queryKey);\r\n        var queryPath = r.path, queryId = r.queryId;\r\n        var relativePath = newRelativePath(queryPath, path);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        var op = new Merge(newOperationSourceServerTaggedQuery(queryId), relativePath, changeTree);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // We've already removed the query. No big deal, ignore the update\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeAddEventRegistration(syncTree, query, eventRegistration) {\r\n    var path = query._path;\r\n    var serverCache = null;\r\n    var foundAncestorDefaultView = false;\r\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n    syncTree.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n        var relativePath = newRelativePath(pathToSyncPoint, path);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(sp, relativePath);\r\n        foundAncestorDefaultView =\r\n            foundAncestorDefaultView || syncPointHasCompleteView(sp);\r\n    });\r\n    var syncPoint = syncTree.syncPointTree_.get(path);\r\n    if (!syncPoint) {\r\n        syncPoint = new SyncPoint();\r\n        syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\r\n    }\r\n    else {\r\n        foundAncestorDefaultView =\r\n            foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    var serverCacheComplete;\r\n    if (serverCache != null) {\r\n        serverCacheComplete = true;\r\n    }\r\n    else {\r\n        serverCacheComplete = false;\r\n        serverCache = ChildrenNode.EMPTY_NODE;\r\n        var subtree = syncTree.syncPointTree_.subtree(path);\r\n        subtree.foreachChild(function (childName, childSyncPoint) {\r\n            var completeCache = syncPointGetCompleteServerCache(childSyncPoint, newEmptyPath());\r\n            if (completeCache) {\r\n                serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n            }\r\n        });\r\n    }\r\n    var viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\r\n    if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\r\n        // We need to track a tag for this query\r\n        var queryKey = syncTreeMakeQueryKey_(query);\r\n        assert(!syncTree.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\r\n        var tag = syncTreeGetNextQueryTag_();\r\n        syncTree.queryToTagMap.set(queryKey, tag);\r\n        syncTree.tagToQueryMap.set(tag, queryKey);\r\n    }\r\n    var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\r\n    var events = syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n    if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n        var view = syncPointViewForQuery(syncPoint, query);\r\n        events = events.concat(syncTreeSetupListener_(syncTree, query, view));\r\n    }\r\n    return events;\r\n}\r\n/**\r\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n *\r\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n *\r\n * @param path - The path to the data we want\r\n * @param writeIdsToExclude - A specific set to be excluded\r\n */\r\nfunction syncTreeCalcCompleteEventCache(syncTree, path, writeIdsToExclude) {\r\n    var includeHiddenSets = true;\r\n    var writeTree = syncTree.pendingWriteTree_;\r\n    var serverCache = syncTree.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n        var relativePath = newRelativePath(pathSoFar, path);\r\n        var serverCache = syncPointGetCompleteServerCache(syncPoint, relativePath);\r\n        if (serverCache) {\r\n            return serverCache;\r\n        }\r\n    });\r\n    return writeTreeCalcCompleteEventCache(writeTree, path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n}\r\nfunction syncTreeGetServerValue(syncTree, query) {\r\n    var path = query._path;\r\n    var serverCache = null;\r\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n    syncTree.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n        var relativePath = newRelativePath(pathToSyncPoint, path);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(sp, relativePath);\r\n    });\r\n    var syncPoint = syncTree.syncPointTree_.get(path);\r\n    if (!syncPoint) {\r\n        syncPoint = new SyncPoint();\r\n        syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\r\n    }\r\n    else {\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    var serverCacheComplete = serverCache != null;\r\n    var serverCacheNode = serverCacheComplete\r\n        ? new CacheNode(serverCache, true, false)\r\n        : null;\r\n    var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, query._path);\r\n    var view = syncPointGetView(syncPoint, query, writesCache, serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE, serverCacheComplete);\r\n    return viewGetCompleteNode(view);\r\n}\r\n/**\r\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n *\r\n * NOTES:\r\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n *\r\n * - We call applyOperation() on each SyncPoint passing three things:\r\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n *   3. A snapshot Node with cached server data, if we have it.\r\n *\r\n * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n */\r\nfunction syncTreeApplyOperationToSyncPoints_(syncTree, operation) {\r\n    return syncTreeApplyOperationHelper_(operation, syncTree.syncPointTree_, \r\n    /*serverCache=*/ null, writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath()));\r\n}\r\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\r\nfunction syncTreeApplyOperationHelper_(operation, syncPointTree, serverCache, writesCache) {\r\n    if (pathIsEmpty(operation.path)) {\r\n        return syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n    }\r\n    else {\r\n        var syncPoint = syncPointTree.get(newEmptyPath());\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n        }\r\n        var events = [];\r\n        var childName = pathGetFront(operation.path);\r\n        var childOperation = operation.operationForChild(childName);\r\n        var childTree = syncPointTree.children.get(childName);\r\n        if (childTree && childOperation) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writeTreeRefChild(writesCache, childName);\r\n            events = events.concat(syncTreeApplyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n        }\r\n        if (syncPoint) {\r\n            events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    }\r\n}\r\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\r\nfunction syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache) {\r\n    var syncPoint = syncPointTree.get(newEmptyPath());\r\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n    if (serverCache == null && syncPoint != null) {\r\n        serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    var events = [];\r\n    syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n        var childServerCache = serverCache\r\n            ? serverCache.getImmediateChild(childName)\r\n            : null;\r\n        var childWritesCache = writeTreeRefChild(writesCache, childName);\r\n        var childOperation = operation.operationForChild(childName);\r\n        if (childOperation) {\r\n            events = events.concat(syncTreeApplyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n        }\r\n    });\r\n    if (syncPoint) {\r\n        events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\r\n    }\r\n    return events;\r\n}\r\nfunction syncTreeCreateListenerForView_(syncTree, view) {\r\n    var query = view.query;\r\n    var tag = syncTreeTagForQuery_(syncTree, query);\r\n    return {\r\n        hashFn: function () {\r\n            var cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\r\n            return cache.hash();\r\n        },\r\n        onComplete: function (status) {\r\n            if (status === 'ok') {\r\n                if (tag) {\r\n                    return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\r\n                }\r\n                else {\r\n                    return syncTreeApplyListenComplete(syncTree, query._path);\r\n                }\r\n            }\r\n            else {\r\n                // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                var error = errorForServerCode(status, query);\r\n                return syncTreeRemoveEventRegistration(syncTree, query, \r\n                /*eventRegistration*/ null, error);\r\n            }\r\n        }\r\n    };\r\n}\r\n/**\r\n * Return the tag associated with the given query.\r\n */\r\nfunction syncTreeTagForQuery_(syncTree, query) {\r\n    var queryKey = syncTreeMakeQueryKey_(query);\r\n    return syncTree.queryToTagMap.get(queryKey);\r\n}\r\n/**\r\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n */\r\nfunction syncTreeMakeQueryKey_(query) {\r\n    return query._path.toString() + '$' + query._queryIdentifier;\r\n}\r\n/**\r\n * Return the query associated with the given tag, if we have one\r\n */\r\nfunction syncTreeQueryKeyForTag_(syncTree, tag) {\r\n    return syncTree.tagToQueryMap.get(tag);\r\n}\r\n/**\r\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n */\r\nfunction syncTreeParseQueryKey_(queryKey) {\r\n    var splitIndex = queryKey.indexOf('$');\r\n    assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n    return {\r\n        queryId: queryKey.substr(splitIndex + 1),\r\n        path: new Path(queryKey.substr(0, splitIndex))\r\n    };\r\n}\r\n/**\r\n * A helper method to apply tagged operations\r\n */\r\nfunction syncTreeApplyTaggedOperation_(syncTree, queryPath, operation) {\r\n    var syncPoint = syncTree.syncPointTree_.get(queryPath);\r\n    assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n    var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, queryPath);\r\n    return syncPointApplyOperation(syncPoint, operation, writesCache, null);\r\n}\r\n/**\r\n * This collapses multiple unfiltered views into a single view, since we only need a single\r\n * listener for them.\r\n */\r\nfunction syncTreeCollectDistinctViewsForSubTree_(subtree) {\r\n    return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n        if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\r\n            var completeView = syncPointGetCompleteView(maybeChildSyncPoint);\r\n            return [completeView];\r\n        }\r\n        else {\r\n            // No complete view here, flatten any deeper listens into an array\r\n            var views_1 = [];\r\n            if (maybeChildSyncPoint) {\r\n                views_1 = syncPointGetQueryViews(maybeChildSyncPoint);\r\n            }\r\n            each(childMap, function (_key, childViews) {\r\n                views_1 = views_1.concat(childViews);\r\n            });\r\n            return views_1;\r\n        }\r\n    });\r\n}\r\n/**\r\n * Normalizes a query to a query we send the server for listening\r\n *\r\n * @returns The normalized query\r\n */\r\nfunction syncTreeQueryForListening_(query) {\r\n    if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\r\n        // We treat queries that load all data as default queries\r\n        // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n        // from Query\r\n        return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\r\n    }\r\n    else {\r\n        return query;\r\n    }\r\n}\r\nfunction syncTreeRemoveTags_(syncTree, queries) {\r\n    for (var j = 0; j < queries.length; ++j) {\r\n        var removedQuery = queries[j];\r\n        if (!removedQuery._queryParams.loadsAllData()) {\r\n            // We should have a tag for this\r\n            var removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\r\n            var removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\r\n            syncTree.queryToTagMap.delete(removedQueryKey);\r\n            syncTree.tagToQueryMap.delete(removedQueryTag);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Static accessor for query tags.\r\n */\r\nfunction syncTreeGetNextQueryTag_() {\r\n    return syncTreeNextQueryTag_++;\r\n}\r\n/**\r\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n *\r\n * @returns This method can return events to support synchronous data sources\r\n */\r\nfunction syncTreeSetupListener_(syncTree, query, view) {\r\n    var path = query._path;\r\n    var tag = syncTreeTagForQuery_(syncTree, query);\r\n    var listener = syncTreeCreateListenerForView_(syncTree, view);\r\n    var events = syncTree.listenProvider_.startListening(syncTreeQueryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n    var subtree = syncTree.syncPointTree_.subtree(path);\r\n    // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n    // may need to shadow other listens as well.\r\n    if (tag) {\r\n        assert(!syncPointHasCompleteView(subtree.value), \"If we're adding a query, it shouldn't be shadowed\");\r\n    }\r\n    else {\r\n        // Shadow everything at or below this location, this is a default listener.\r\n        var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (!pathIsEmpty(relativePath) &&\r\n                maybeChildSyncPoint &&\r\n                syncPointHasCompleteView(maybeChildSyncPoint)) {\r\n                return [syncPointGetCompleteView(maybeChildSyncPoint).query];\r\n            }\r\n            else {\r\n                // No default listener here, flatten any deeper queries into an array\r\n                var queries_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    queries_1 = queries_1.concat(syncPointGetQueryViews(maybeChildSyncPoint).map(function (view) { return view.query; }));\r\n                }\r\n                each(childMap, function (_key, childQueries) {\r\n                    queries_1 = queries_1.concat(childQueries);\r\n                });\r\n                return queries_1;\r\n            }\r\n        });\r\n        for (var i = 0; i < queriesToStop.length; ++i) {\r\n            var queryToStop = queriesToStop[i];\r\n            syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToStop), syncTreeTagForQuery_(syncTree, queryToStop));\r\n        }\r\n    }\r\n    return events;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ExistingValueProvider = /** @class */ (function () {\r\n    function ExistingValueProvider(node_) {\r\n        this.node_ = node_;\r\n    }\r\n    ExistingValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var child = this.node_.getImmediateChild(childName);\r\n        return new ExistingValueProvider(child);\r\n    };\r\n    ExistingValueProvider.prototype.node = function () {\r\n        return this.node_;\r\n    };\r\n    return ExistingValueProvider;\r\n}());\r\nvar DeferredValueProvider = /** @class */ (function () {\r\n    function DeferredValueProvider(syncTree, path) {\r\n        this.syncTree_ = syncTree;\r\n        this.path_ = path;\r\n    }\r\n    DeferredValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var childPath = pathChild(this.path_, childName);\r\n        return new DeferredValueProvider(this.syncTree_, childPath);\r\n    };\r\n    DeferredValueProvider.prototype.node = function () {\r\n        return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\r\n    };\r\n    return DeferredValueProvider;\r\n}());\r\n/**\r\n * Generate placeholders for deferred values.\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n */\r\nvar resolveDeferredLeafValue = function (value, existingVal, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n    if (typeof value['.sv'] === 'string') {\r\n        return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\r\n    }\r\n    else if (typeof value['.sv'] === 'object') {\r\n        return resolveComplexDeferredValue(value['.sv'], existingVal);\r\n    }\r\n    else {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\r\n    }\r\n};\r\nvar resolveScalarDeferredValue = function (op, existing, serverValues) {\r\n    switch (op) {\r\n        case 'timestamp':\r\n            return serverValues['timestamp'];\r\n        default:\r\n            assert(false, 'Unexpected server value: ' + op);\r\n    }\r\n};\r\nvar resolveComplexDeferredValue = function (op, existing, unused) {\r\n    if (!op.hasOwnProperty('increment')) {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\r\n    }\r\n    var delta = op['increment'];\r\n    if (typeof delta !== 'number') {\r\n        assert(false, 'Unexpected increment value: ' + delta);\r\n    }\r\n    var existingNode = existing.node();\r\n    assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls');\r\n    // Incrementing a non-number sets the value to the incremented amount\r\n    if (!existingNode.isLeafNode()) {\r\n        return delta;\r\n    }\r\n    var leaf = existingNode;\r\n    var existingVal = leaf.getValue();\r\n    if (typeof existingVal !== 'number') {\r\n        return delta;\r\n    }\r\n    // No need to do over/underflow arithmetic here because JS only handles floats under the covers\r\n    return existingVal + delta;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param path - path to which write is relative\r\n * @param node - new data written at path\r\n * @param syncTree - current data\r\n */\r\nvar resolveDeferredValueTree = function (path, node, syncTree, serverValues) {\r\n    return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, existing, serverValues) {\r\n    return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\r\n};\r\nfunction resolveDeferredValue(node, existingVal, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @param name - Optional name of the node.\r\n     * @param parent - Optional parent node.\r\n     * @param node - Optional node to wrap.\r\n     */\r\n    function Tree(name, parent, node) {\r\n        if (name === void 0) { name = ''; }\r\n        if (parent === void 0) { parent = null; }\r\n        if (node === void 0) { node = { children: {}, childCount: 0 }; }\r\n        this.name = name;\r\n        this.parent = parent;\r\n        this.node = node;\r\n    }\r\n    return Tree;\r\n}());\r\n/**\r\n * Returns a sub-Tree for the given path.\r\n *\r\n * @param pathObj - Path to look up.\r\n * @returns Tree for path.\r\n */\r\nfunction treeSubTree(tree, pathObj) {\r\n    // TODO: Require pathObj to be Path?\r\n    var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n    var child = tree, next = pathGetFront(path);\r\n    while (next !== null) {\r\n        var childNode = safeGet(child.node.children, next) || {\r\n            children: {},\r\n            childCount: 0\r\n        };\r\n        child = new Tree(next, child, childNode);\r\n        path = pathPopFront(path);\r\n        next = pathGetFront(path);\r\n    }\r\n    return child;\r\n}\r\n/**\r\n * Returns the data associated with this tree node.\r\n *\r\n * @returns The data or null if no data exists.\r\n */\r\nfunction treeGetValue(tree) {\r\n    return tree.node.value;\r\n}\r\n/**\r\n * Sets data to this tree node.\r\n *\r\n * @param value - Value to set.\r\n */\r\nfunction treeSetValue(tree, value) {\r\n    tree.node.value = value;\r\n    treeUpdateParents(tree);\r\n}\r\n/**\r\n * @returns Whether the tree has any children.\r\n */\r\nfunction treeHasChildren(tree) {\r\n    return tree.node.childCount > 0;\r\n}\r\n/**\r\n * @returns Whethe rthe tree is empty (no value or children).\r\n */\r\nfunction treeIsEmpty(tree) {\r\n    return treeGetValue(tree) === undefined && !treeHasChildren(tree);\r\n}\r\n/**\r\n * Calls action for each child of this tree node.\r\n *\r\n * @param action - Action to be called for each child.\r\n */\r\nfunction treeForEachChild(tree, action) {\r\n    each(tree.node.children, function (child, childTree) {\r\n        action(new Tree(child, tree, childTree));\r\n    });\r\n}\r\n/**\r\n * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n *\r\n * @param action - Action to be called for each child.\r\n * @param includeSelf - Whether to call action on this node as well. Defaults to\r\n *   false.\r\n * @param childrenFirst - Whether to call action on children before calling it on\r\n *   parent.\r\n */\r\nfunction treeForEachDescendant(tree, action, includeSelf, childrenFirst) {\r\n    if (includeSelf && !childrenFirst) {\r\n        action(tree);\r\n    }\r\n    treeForEachChild(tree, function (child) {\r\n        treeForEachDescendant(child, action, true, childrenFirst);\r\n    });\r\n    if (includeSelf && childrenFirst) {\r\n        action(tree);\r\n    }\r\n}\r\n/**\r\n * Calls action on each ancestor node.\r\n *\r\n * @param action - Action to be called on each parent; return\r\n *   true to abort.\r\n * @param includeSelf - Whether to call action on this node as well.\r\n * @returns true if the action callback returned true.\r\n */\r\nfunction treeForEachAncestor(tree, action, includeSelf) {\r\n    var node = includeSelf ? tree : tree.parent;\r\n    while (node !== null) {\r\n        if (action(node)) {\r\n            return true;\r\n        }\r\n        node = node.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @returns The path of this tree node, as a Path.\r\n */\r\nfunction treeGetPath(tree) {\r\n    return new Path(tree.parent === null\r\n        ? tree.name\r\n        : treeGetPath(tree.parent) + '/' + tree.name);\r\n}\r\n/**\r\n * Adds or removes this child from its parent based on whether it's empty or not.\r\n */\r\nfunction treeUpdateParents(tree) {\r\n    if (tree.parent !== null) {\r\n        treeUpdateChild(tree.parent, tree.name, tree);\r\n    }\r\n}\r\n/**\r\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n *\r\n * @param childName - The name of the child to update.\r\n * @param child - The child to update.\r\n */\r\nfunction treeUpdateChild(tree, childName, child) {\r\n    var childEmpty = treeIsEmpty(child);\r\n    var childExists = contains(tree.node.children, childName);\r\n    if (childEmpty && childExists) {\r\n        delete tree.node.children[childName];\r\n        tree.node.childCount--;\r\n        treeUpdateParents(tree);\r\n    }\r\n    else if (!childEmpty && !childExists) {\r\n        tree.node.children[childName] = child.node;\r\n        tree.node.childCount++;\r\n        treeUpdateParents(tree);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority &&\r\n            typeof priority === 'object' &&\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n */\r\nvar validateFirebaseDataArg = function (fnName, value, path, optional) {\r\n    if (optional && value === undefined) {\r\n        return;\r\n    }\r\n    validateFirebaseData(errorPrefix(fnName, 'value'), value, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + validationPathToErrorString(path));\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            validationPathToErrorString(path) +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix +\r\n            'contains ' +\r\n            data.toString() +\r\n            ' ' +\r\n            validationPathToErrorString(path));\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            validationPathToErrorString(path) +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false;\r\n        var hasActualChild_1 = false;\r\n        each(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        validationPathToErrorString(path) +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            validationPathPush(path, key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            validationPathPop(path);\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                validationPathToErrorString(path) +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = pathSlice(curPath);\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) ;\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(pathCompare);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && pathContains(prevPath, curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    var errorPrefix$1 = errorPrefix(fnName, 'values');\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix$1 + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    each(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix$1, value, pathChild(path, curPath));\r\n        if (pathGetBack(curPath) === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix$1 +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix$1, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, priority, optional) {\r\n    if (optional && priority === undefined) {\r\n        return;\r\n    }\r\n    if (isInvalidJSONNumber(priority)) {\r\n        throw new Error(errorPrefix(fnName, 'priority') +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    }\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority)) {\r\n        throw new Error(errorPrefix(fnName, 'priority') +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n    }\r\n};\r\nvar validateEventType = function (fnName, eventType, optional) {\r\n    if (optional && eventType === undefined) {\r\n        return;\r\n    }\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(errorPrefix(fnName, 'eventType') +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentName, key, optional) {\r\n    if (optional && key === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidKey(key)) {\r\n        throw new Error(errorPrefix(fnName, argumentName) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n    }\r\n};\r\nvar validatePathString = function (fnName, argumentName, pathString, optional) {\r\n    if (optional && pathString === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidPathString(pathString)) {\r\n        throw new Error(errorPrefix(fnName, argumentName) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n    }\r\n};\r\nvar validateRootPathString = function (fnName, argumentName, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentName, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (pathGetFront(path) === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(errorPrefix(fnName, 'url') +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentName, bool, optional) {\r\n    if (optional && bool === undefined) {\r\n        return;\r\n    }\r\n    if (typeof bool !== 'boolean') {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a boolean.');\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param eventDataList - The new events to queue.\r\n */\r\nfunction eventQueueQueueEvents(eventQueue, eventDataList) {\r\n    // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n    var currList = null;\r\n    for (var i = 0; i < eventDataList.length; i++) {\r\n        var data = eventDataList[i];\r\n        var path = data.getPath();\r\n        if (currList !== null && !pathEquals(path, currList.path)) {\r\n            eventQueue.eventLists_.push(currList);\r\n            currList = null;\r\n        }\r\n        if (currList === null) {\r\n            currList = { events: [], path: path };\r\n        }\r\n        currList.events.push(data);\r\n    }\r\n    if (currList) {\r\n        eventQueue.eventLists_.push(currList);\r\n    }\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n * for the specified path.\r\n *\r\n * It is assumed that the new events are all for the specified path.\r\n *\r\n * @param path - The path to raise events for.\r\n * @param eventDataList - The new events to raise.\r\n */\r\nfunction eventQueueRaiseEventsAtPath(eventQueue, path, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\r\n        return pathEquals(eventPath, path);\r\n    });\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n * locations related to the specified change path (i.e. all ancestors and descendants).\r\n *\r\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n *\r\n * @param changedPath - The path to raise events for.\r\n * @param eventDataList - The events to raise\r\n */\r\nfunction eventQueueRaiseEventsForChangedPath(eventQueue, changedPath, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\r\n        return pathContains(eventPath, changedPath) ||\r\n            pathContains(changedPath, eventPath);\r\n    });\r\n}\r\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, predicate) {\r\n    eventQueue.recursionDepth_++;\r\n    var sentAll = true;\r\n    for (var i = 0; i < eventQueue.eventLists_.length; i++) {\r\n        var eventList = eventQueue.eventLists_[i];\r\n        if (eventList) {\r\n            var eventPath = eventList.path;\r\n            if (predicate(eventPath)) {\r\n                eventListRaise(eventQueue.eventLists_[i]);\r\n                eventQueue.eventLists_[i] = null;\r\n            }\r\n            else {\r\n                sentAll = false;\r\n            }\r\n        }\r\n    }\r\n    if (sentAll) {\r\n        eventQueue.eventLists_ = [];\r\n    }\r\n    eventQueue.recursionDepth_--;\r\n}\r\n/**\r\n * Iterates through the list and raises each event\r\n */\r\nfunction eventListRaise(eventList) {\r\n    for (var i = 0; i < eventList.events.length; i++) {\r\n        var eventData = eventList.events[i];\r\n        if (eventData !== null) {\r\n            eventList.events[i] = null;\r\n            var eventFn = eventData.getEventRunner();\r\n            if (logger) {\r\n                log('event: ' + eventData.toString());\r\n            }\r\n            exceptionGuard(eventFn);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it. Among other\r\n * things this ensure that if there's ever a bug causing a mismatch between\r\n * client / server hashes for some data, we won't retry indefinitely.\r\n */\r\nvar MAX_TRANSACTION_RETRIES = 25;\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    function Repo(repoInfo_, forceRestClient_, authTokenProvider_, appCheckProvider_) {\r\n        this.repoInfo_ = repoInfo_;\r\n        this.forceRestClient_ = forceRestClient_;\r\n        this.authTokenProvider_ = authTokenProvider_;\r\n        this.appCheckProvider_ = appCheckProvider_;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        /** A list of data pieces and paths to be set when this client disconnects. */\r\n        this.onDisconnect_ = newSparseSnapshotTree();\r\n        /** Stores queues of outstanding transactions for Firebase locations. */\r\n        this.transactionQueueTree_ = new Tree();\r\n        // TODO: This should be @private but it's used by test_access.js and internal.js\r\n        this.persistentConnection_ = null;\r\n        // This key is intentionally not updated if RepoInfo is later changed or replaced\r\n        this.key = this.repoInfo_.toURLString();\r\n    }\r\n    /**\r\n     * @returns The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    return Repo;\r\n}());\r\nfunction repoStart(repo, appId, authOverride) {\r\n    repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\r\n    if (repo.forceRestClient_ || beingCrawled()) {\r\n        repo.server_ = new ReadonlyRestClient(repo.repoInfo_, function (pathString, data, isMerge, tag) {\r\n            repoOnDataUpdate(repo, pathString, data, isMerge, tag);\r\n        }, repo.authTokenProvider_, repo.appCheckProvider_);\r\n        // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n        setTimeout(function () { return repoOnConnectStatus(repo, /* connectStatus= */ true); }, 0);\r\n    }\r\n    else {\r\n        // Validate authOverride\r\n        if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n            if (typeof authOverride !== 'object') {\r\n                throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n            }\r\n            try {\r\n                stringify(authOverride);\r\n            }\r\n            catch (e) {\r\n                throw new Error('Invalid authOverride provided: ' + e);\r\n            }\r\n        }\r\n        repo.persistentConnection_ = new PersistentConnection(repo.repoInfo_, appId, function (pathString, data, isMerge, tag) {\r\n            repoOnDataUpdate(repo, pathString, data, isMerge, tag);\r\n        }, function (connectStatus) {\r\n            repoOnConnectStatus(repo, connectStatus);\r\n        }, function (updates) {\r\n            repoOnServerInfoUpdate(repo, updates);\r\n        }, repo.authTokenProvider_, repo.appCheckProvider_, authOverride);\r\n        repo.server_ = repo.persistentConnection_;\r\n    }\r\n    repo.authTokenProvider_.addTokenChangeListener(function (token) {\r\n        repo.server_.refreshAuthToken(token);\r\n    });\r\n    repo.appCheckProvider_.addTokenChangeListener(function (result) {\r\n        repo.server_.refreshAppCheckToken(result.token);\r\n    });\r\n    // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n    // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n    repo.statsReporter_ = statsManagerGetOrCreateReporter(repo.repoInfo_, function () { return new StatsReporter(repo.stats_, repo.server_); });\r\n    // Used for .info.\r\n    repo.infoData_ = new SnapshotHolder();\r\n    repo.infoSyncTree_ = new SyncTree({\r\n        startListening: function (query, tag, currentHashFn, onComplete) {\r\n            var infoEvents = [];\r\n            var node = repo.infoData_.getNode(query._path);\r\n            // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n            // on initial data...\r\n            if (!node.isEmpty()) {\r\n                infoEvents = syncTreeApplyServerOverwrite(repo.infoSyncTree_, query._path, node);\r\n                setTimeout(function () {\r\n                    onComplete('ok');\r\n                }, 0);\r\n            }\r\n            return infoEvents;\r\n        },\r\n        stopListening: function () { }\r\n    });\r\n    repoUpdateInfo(repo, 'connected', false);\r\n    repo.serverSyncTree_ = new SyncTree({\r\n        startListening: function (query, tag, currentHashFn, onComplete) {\r\n            repo.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                var events = onComplete(status, data);\r\n                eventQueueRaiseEventsForChangedPath(repo.eventQueue_, query._path, events);\r\n            });\r\n            // No synchronous events for network-backed sync trees\r\n            return [];\r\n        },\r\n        stopListening: function (query, tag) {\r\n            repo.server_.unlisten(query, tag);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @returns The time in milliseconds, taking the server offset into account if we have one.\r\n */\r\nfunction repoServerTime(repo) {\r\n    var offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n    var offset = offsetNode.val() || 0;\r\n    return new Date().getTime() + offset;\r\n}\r\n/**\r\n * Generate ServerValues using some variables from the repo object.\r\n */\r\nfunction repoGenerateServerValues(repo) {\r\n    return generateWithValues({\r\n        timestamp: repoServerTime(repo)\r\n    });\r\n}\r\n/**\r\n * Called by realtime when we get new messages from the server.\r\n */\r\nfunction repoOnDataUpdate(repo, pathString, data, isMerge, tag) {\r\n    // For testing.\r\n    repo.dataUpdateCount++;\r\n    var path = new Path(pathString);\r\n    data = repo.interceptServerDataCallback_\r\n        ? repo.interceptServerDataCallback_(pathString, data)\r\n        : data;\r\n    var events = [];\r\n    if (tag) {\r\n        if (isMerge) {\r\n            var taggedChildren = map(data, function (raw) { return nodeFromJSON(raw); });\r\n            events = syncTreeApplyTaggedQueryMerge(repo.serverSyncTree_, path, taggedChildren, tag);\r\n        }\r\n        else {\r\n            var taggedSnap = nodeFromJSON(data);\r\n            events = syncTreeApplyTaggedQueryOverwrite(repo.serverSyncTree_, path, taggedSnap, tag);\r\n        }\r\n    }\r\n    else if (isMerge) {\r\n        var changedChildren = map(data, function (raw) { return nodeFromJSON(raw); });\r\n        events = syncTreeApplyServerMerge(repo.serverSyncTree_, path, changedChildren);\r\n    }\r\n    else {\r\n        var snap = nodeFromJSON(data);\r\n        events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\r\n    }\r\n    var affectedPath = path;\r\n    if (events.length > 0) {\r\n        // Since we have a listener outstanding for each transaction, receiving any events\r\n        // is a proxy for some change having occurred.\r\n        affectedPath = repoRerunTransactions(repo, path);\r\n    }\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\r\n}\r\n// TODO: This should be @private but it's used by test_access.js and internal.js\r\nfunction repoInterceptServerData(repo, callback) {\r\n    repo.interceptServerDataCallback_ = callback;\r\n}\r\nfunction repoOnConnectStatus(repo, connectStatus) {\r\n    repoUpdateInfo(repo, 'connected', connectStatus);\r\n    if (connectStatus === false) {\r\n        repoRunOnDisconnectEvents(repo);\r\n    }\r\n}\r\nfunction repoOnServerInfoUpdate(repo, updates) {\r\n    each(updates, function (key, value) {\r\n        repoUpdateInfo(repo, key, value);\r\n    });\r\n}\r\nfunction repoUpdateInfo(repo, pathString, value) {\r\n    var path = new Path('/.info/' + pathString);\r\n    var newNode = nodeFromJSON(value);\r\n    repo.infoData_.updateSnapshot(path, newNode);\r\n    var events = syncTreeApplyServerOverwrite(repo.infoSyncTree_, path, newNode);\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n}\r\nfunction repoGetNextWriteId(repo) {\r\n    return repo.nextWriteId_++;\r\n}\r\n/**\r\n * The purpose of `getValue` is to return the latest known value\r\n * satisfying `query`.\r\n *\r\n * This method will first check for in-memory cached values\r\n * belonging to active listeners. If they are found, such values\r\n * are considered to be the most up-to-date.\r\n *\r\n * If the client is not connected, this method will try to\r\n * establish a connection and request the value for `query`. If\r\n * the client is not able to retrieve the query result, it reports\r\n * an error.\r\n *\r\n * @param query - The query to surface a value for.\r\n */\r\nfunction repoGetValue(repo, query) {\r\n    // Only active queries are cached. There is no persisted cache.\r\n    var cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\r\n    if (cached != null) {\r\n        return Promise.resolve(cached);\r\n    }\r\n    return repo.server_.get(query).then(function (payload) {\r\n        var node = nodeFromJSON(payload).withIndex(query._queryParams.getIndex());\r\n        var events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, query._path, node);\r\n        eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n        return Promise.resolve(node);\r\n    }, function (err) {\r\n        repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\r\n        return Promise.reject(new Error(err));\r\n    });\r\n}\r\nfunction repoSetWithPriority(repo, path, newVal, newPriority, onComplete) {\r\n    repoLog(repo, 'set', {\r\n        path: path.toString(),\r\n        value: newVal,\r\n        priority: newPriority\r\n    });\r\n    // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n    // (b) store unresolved paths on JSON parse\r\n    var serverValues = repoGenerateServerValues(repo);\r\n    var newNodeUnresolved = nodeFromJSON(newVal, newPriority);\r\n    var existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\r\n    var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\r\n    var writeId = repoGetNextWriteId(repo);\r\n    var events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, writeId, true);\r\n    eventQueueQueueEvents(repo.eventQueue_, events);\r\n    repo.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n        var success = status === 'ok';\r\n        if (!success) {\r\n            warn('set at ' + path + ' failed: ' + status);\r\n        }\r\n        var clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId, !success);\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n    var affectedPath = repoAbortTransactions(repo, path);\r\n    repoRerunTransactions(repo, affectedPath);\r\n    // We queued the events above, so just flush the queue here\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\r\n}\r\nfunction repoUpdate(repo, path, childrenToMerge, onComplete) {\r\n    repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\r\n    // Start with our existing data and merge each child into it.\r\n    var empty = true;\r\n    var serverValues = repoGenerateServerValues(repo);\r\n    var changedChildren = {};\r\n    each(childrenToMerge, function (changedKey, changedValue) {\r\n        empty = false;\r\n        changedChildren[changedKey] = resolveDeferredValueTree(pathChild(path, changedKey), nodeFromJSON(changedValue), repo.serverSyncTree_, serverValues);\r\n    });\r\n    if (!empty) {\r\n        var writeId_1 = repoGetNextWriteId(repo);\r\n        var events = syncTreeApplyUserMerge(repo.serverSyncTree_, path, changedChildren, writeId_1);\r\n        eventQueueQueueEvents(repo.eventQueue_, events);\r\n        repo.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('update at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId_1, !success);\r\n            var affectedPath = clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\r\n            eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, clearEvents);\r\n            repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n        });\r\n        each(childrenToMerge, function (changedPath) {\r\n            var affectedPath = repoAbortTransactions(repo, pathChild(path, changedPath));\r\n            repoRerunTransactions(repo, affectedPath);\r\n        });\r\n        // We queued the events above, so just flush the queue here\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\r\n    }\r\n    else {\r\n        log(\"update() called with empty data.  Don't do anything.\");\r\n        repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\r\n    }\r\n}\r\n/**\r\n * Applies all of the changes stored up in the onDisconnect_ tree.\r\n */\r\nfunction repoRunOnDisconnectEvents(repo) {\r\n    repoLog(repo, 'onDisconnectEvents');\r\n    var serverValues = repoGenerateServerValues(repo);\r\n    var resolvedOnDisconnectTree = newSparseSnapshotTree();\r\n    sparseSnapshotTreeForEachTree(repo.onDisconnect_, newEmptyPath(), function (path, node) {\r\n        var resolved = resolveDeferredValueTree(path, node, repo.serverSyncTree_, serverValues);\r\n        sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\r\n    });\r\n    var events = [];\r\n    sparseSnapshotTreeForEachTree(resolvedOnDisconnectTree, newEmptyPath(), function (path, snap) {\r\n        events = events.concat(syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap));\r\n        var affectedPath = repoAbortTransactions(repo, path);\r\n        repoRerunTransactions(repo, affectedPath);\r\n    });\r\n    repo.onDisconnect_ = newSparseSnapshotTree();\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\r\n}\r\nfunction repoOnDisconnectCancel(repo, path, onComplete) {\r\n    repo.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeForget(repo.onDisconnect_, path);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectSet(repo, path, value, onComplete) {\r\n    var newNode = nodeFromJSON(value);\r\n    repo.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectSetWithPriority(repo, path, value, priority, onComplete) {\r\n    var newNode = nodeFromJSON(value, priority);\r\n    repo.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectUpdate(repo, path, childrenToMerge, onComplete) {\r\n    if (isEmpty(childrenToMerge)) {\r\n        log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n        repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\r\n        return;\r\n    }\r\n    repo.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            each(childrenToMerge, function (childName, childNode) {\r\n                var newChildNode = nodeFromJSON(childNode);\r\n                sparseSnapshotTreeRemember(repo.onDisconnect_, pathChild(path, childName), newChildNode);\r\n            });\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoAddEventCallbackForQuery(repo, query, eventRegistration) {\r\n    var events;\r\n    if (pathGetFront(query._path) === '.info') {\r\n        events = syncTreeAddEventRegistration(repo.infoSyncTree_, query, eventRegistration);\r\n    }\r\n    else {\r\n        events = syncTreeAddEventRegistration(repo.serverSyncTree_, query, eventRegistration);\r\n    }\r\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n}\r\nfunction repoRemoveEventCallbackForQuery(repo, query, eventRegistration) {\r\n    // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n    // a little bit by handling the return values anyways.\r\n    var events;\r\n    if (pathGetFront(query._path) === '.info') {\r\n        events = syncTreeRemoveEventRegistration(repo.infoSyncTree_, query, eventRegistration);\r\n    }\r\n    else {\r\n        events = syncTreeRemoveEventRegistration(repo.serverSyncTree_, query, eventRegistration);\r\n    }\r\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n}\r\nfunction repoInterrupt(repo) {\r\n    if (repo.persistentConnection_) {\r\n        repo.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n    }\r\n}\r\nfunction repoResume(repo) {\r\n    if (repo.persistentConnection_) {\r\n        repo.persistentConnection_.resume(INTERRUPT_REASON);\r\n    }\r\n}\r\nfunction repoStats(repo, showDelta) {\r\n    if (showDelta === void 0) { showDelta = false; }\r\n    if (typeof console === 'undefined') {\r\n        return;\r\n    }\r\n    var stats;\r\n    if (showDelta) {\r\n        if (!repo.statsListener_) {\r\n            repo.statsListener_ = new StatsListener(repo.stats_);\r\n        }\r\n        stats = repo.statsListener_.get();\r\n    }\r\n    else {\r\n        stats = repo.stats_.get();\r\n    }\r\n    var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n        return Math.max(currentValue.length, previousValue);\r\n    }, 0);\r\n    each(stats, function (stat, value) {\r\n        var paddedStat = stat;\r\n        // pad stat names to be the same length (plus 2 extra spaces).\r\n        for (var i = stat.length; i < longestName + 2; i++) {\r\n            paddedStat += ' ';\r\n        }\r\n        console.log(paddedStat + value);\r\n    });\r\n}\r\nfunction repoStatsIncrementCounter(repo, metric) {\r\n    repo.stats_.incrementCounter(metric);\r\n    statsReporterIncludeStat(repo.statsReporter_, metric);\r\n}\r\nfunction repoLog(repo) {\r\n    var varArgs = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        varArgs[_i - 1] = arguments[_i];\r\n    }\r\n    var prefix = '';\r\n    if (repo.persistentConnection_) {\r\n        prefix = repo.persistentConnection_.id + ':';\r\n    }\r\n    log.apply(void 0, __spreadArray([prefix], __read(varArgs)));\r\n}\r\nfunction repoCallOnCompleteCallback(repo, callback, status, errorReason) {\r\n    if (callback) {\r\n        exceptionGuard(function () {\r\n            if (status === 'ok') {\r\n                callback(null);\r\n            }\r\n            else {\r\n                var code = (status || 'error').toUpperCase();\r\n                var message = code;\r\n                if (errorReason) {\r\n                    message += ': ' + errorReason;\r\n                }\r\n                var error = new Error(message);\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                error.code = code;\r\n                callback(error);\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and\r\n * sends it to the server if possible.\r\n *\r\n * @param path - Path at which to do transaction.\r\n * @param transactionUpdate - Update callback.\r\n * @param onComplete - Completion callback.\r\n * @param unwatcher - Function that will be called when the transaction no longer\r\n * need data updates for `path`.\r\n * @param applyLocally - Whether or not to make intermediate results visible\r\n */\r\nfunction repoStartTransaction(repo, path, transactionUpdate, onComplete, unwatcher, applyLocally) {\r\n    repoLog(repo, 'transaction on ' + path);\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out\r\n        // which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = repoGetLatestState(repo, path, undefined);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            transaction.onComplete(null, false, transaction.currentInputSnapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = 0 /* RUN */;\r\n        var queueNode = treeSubTree(repo.transactionQueueTree_, path);\r\n        var nodeQueue = treeGetValue(queueNode) || [];\r\n        nodeQueue.push(transaction);\r\n        treeSetValue(queueNode, nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our\r\n        // transaction state, since the user could start new transactions from the\r\n        // event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            contains(newVal, '.priority')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            priorityForNode = safeGet(newVal, '.priority');\r\n            assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        var serverValues = repoGenerateServerValues(repo);\r\n        var newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = repoGetNextWriteId(repo);\r\n        var events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n    }\r\n}\r\n/**\r\n * @param excludeSets - A specific set to exclude\r\n */\r\nfunction repoGetLatestState(repo, path, excludeSets) {\r\n    return (syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n}\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding\r\n * transactions to complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively\r\n * with a particular transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param node - transactionQueueTree node to start at.\r\n */\r\nfunction repoSendReadyTransactions(repo, node) {\r\n    if (node === void 0) { node = repo.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        repoPruneCompletedTransactionsBelowNode(repo, node);\r\n    }\r\n    if (treeGetValue(node)) {\r\n        var queue = repoBuildTransactionQueue(repo, node);\r\n        assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === 0 /* RUN */; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            repoSendTransactionQueue(repo, treeGetPath(node), queue);\r\n        }\r\n    }\r\n    else if (treeHasChildren(node)) {\r\n        treeForEachChild(node, function (childNode) {\r\n            repoSendReadyTransactions(repo, childNode);\r\n        });\r\n    }\r\n}\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle\r\n * the result (success or failure).\r\n *\r\n * @param path - The location of the queue.\r\n * @param queue - Queue of transactions under the specified location.\r\n */\r\nfunction repoSendTransactionQueue(repo, path, queue) {\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = repoGetLatestState(repo, path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        assert(txn.status === 0 /* RUN */, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = 1 /* SENT */;\r\n        txn.retryCount++;\r\n        var relativePath = newRelativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /** @type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    repo.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        repoLog(repo, 'transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our\r\n            // transaction state, since the callback could trigger more\r\n            // transactions or sets.\r\n            var callbacks = [];\r\n            var _loop_1 = function (i) {\r\n                queue[i].status = 2 /* COMPLETED */;\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this\r\n                    // transaction is complete, it should be set\r\n                    callbacks.push(function () {\r\n                        return queue[i].onComplete(null, true, queue[i].currentOutputSnapshotResolved);\r\n                    });\r\n                }\r\n                queue[i].unwatcher();\r\n            };\r\n            for (var i = 0; i < queue.length; i++) {\r\n                _loop_1(i);\r\n            }\r\n            // Now remove the completed transactions.\r\n            repoPruneCompletedTransactionsBelowNode(repo, treeSubTree(repo.transactionQueueTree_, path));\r\n            // There may be pending transactions that we can now send.\r\n            repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n            eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === 3 /* SENT_NEEDS_ABORT */) {\r\n                        queue[i].status = 4 /* NEEDS_ABORT */;\r\n                    }\r\n                    else {\r\n                        queue[i].status = 0 /* RUN */;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = 4 /* NEEDS_ABORT */;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            repoRerunTransactions(repo, path);\r\n        }\r\n    }, latestHash);\r\n}\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions. This\r\n * is the path at which events need to be raised for.\r\n *\r\n * @param changedPath - The path in mergedData that changed.\r\n * @returns The rootmost path that was affected by rerunning transactions.\r\n */\r\nfunction repoRerunTransactions(repo, changedPath) {\r\n    var rootMostTransactionNode = repoGetAncestorTransactionNode(repo, changedPath);\r\n    var path = treeGetPath(rootMostTransactionNode);\r\n    var queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\r\n    repoRerunTransactionQueue(repo, queue, path);\r\n    return path;\r\n}\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted\r\n * transactions and whatnot).\r\n *\r\n * @param queue - The queue of transactions to run.\r\n * @param path - The path the queue is for.\r\n */\r\nfunction repoRerunTransactionQueue(repo, queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our\r\n    // transaction state, since the callback could trigger more transactions or\r\n    // sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === 0 /* RUN */;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    var _loop_2 = function (i) {\r\n        var transaction = queue[i];\r\n        var relativePath = newRelativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason;\r\n        assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === 4 /* NEEDS_ABORT */) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === 0 /* RUN */) {\r\n            if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = repoGetLatestState(repo, transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = repoGenerateServerValues(repo);\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = repoGetNextWriteId(repo);\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(syncTreeApplyUserOverwrite(repo.serverSyncTree_, transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = 2 /* COMPLETED */;\r\n            // Removing a listener can trigger pruning which can muck with\r\n            // mergedData/visibleData (as it prunes data). So defer the unwatcher\r\n            // until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    callbacks.push(function () {\r\n                        return queue[i].onComplete(null, false, queue[i].currentInputSnapshot);\r\n                    });\r\n                }\r\n                else {\r\n                    callbacks.push(function () {\r\n                        return queue[i].onComplete(new Error(abortReason), false, null);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n    for (var i = 0; i < queue.length; i++) {\r\n        _loop_2(i);\r\n    }\r\n    // Clean up completed transactions.\r\n    repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n}\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending\r\n * transaction on it, or just returns the node for the given path if there are\r\n * no pending transactions on any ancestor.\r\n *\r\n * @param path - The location to start at.\r\n * @returns The rootmost node with a transaction.\r\n */\r\nfunction repoGetAncestorTransactionNode(repo, path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we\r\n    // find a node with pending transactions.\r\n    var transactionNode = repo.transactionQueueTree_;\r\n    front = pathGetFront(path);\r\n    while (front !== null && treeGetValue(transactionNode) === undefined) {\r\n        transactionNode = treeSubTree(transactionNode, front);\r\n        path = pathPopFront(path);\r\n        front = pathGetFront(path);\r\n    }\r\n    return transactionNode;\r\n}\r\n/**\r\n * Builds the queue of all transactions at or below the specified\r\n * transactionNode.\r\n *\r\n * @param transactionNode\r\n * @returns The generated queue.\r\n */\r\nfunction repoBuildTransactionQueue(repo, transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    repoAggregateTransactionQueuesForNode(repo, transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) { return a.order - b.order; });\r\n    return transactionQueue;\r\n}\r\nfunction repoAggregateTransactionQueuesForNode(repo, node, queue) {\r\n    var nodeQueue = treeGetValue(node);\r\n    if (nodeQueue) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    treeForEachChild(node, function (child) {\r\n        repoAggregateTransactionQueuesForNode(repo, child, queue);\r\n    });\r\n}\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n */\r\nfunction repoPruneCompletedTransactionsBelowNode(repo, node) {\r\n    var queue = treeGetValue(node);\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== 2 /* COMPLETED */) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        treeSetValue(node, queue.length > 0 ? queue : undefined);\r\n    }\r\n    treeForEachChild(node, function (childNode) {\r\n        repoPruneCompletedTransactionsBelowNode(repo, childNode);\r\n    });\r\n}\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.\r\n * Called when doing a set() or update() since we consider them incompatible\r\n * with transactions.\r\n *\r\n * @param path - Path for which we want to abort related transactions.\r\n */\r\nfunction repoAbortTransactions(repo, path) {\r\n    var affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\r\n    var transactionNode = treeSubTree(repo.transactionQueueTree_, path);\r\n    treeForEachAncestor(transactionNode, function (node) {\r\n        repoAbortTransactionsOnNode(repo, node);\r\n    });\r\n    repoAbortTransactionsOnNode(repo, transactionNode);\r\n    treeForEachDescendant(transactionNode, function (node) {\r\n        repoAbortTransactionsOnNode(repo, node);\r\n    });\r\n    return affectedPath;\r\n}\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param node - Node to abort transactions for.\r\n */\r\nfunction repoAbortTransactionsOnNode(repo, node) {\r\n    var queue = treeGetValue(node);\r\n    if (queue) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our\r\n        // transaction state, since the callback could trigger more transactions\r\n        // or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for\r\n        // abort, while the unsent ones can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === 3 /* SENT_NEEDS_ABORT */) ;\r\n            else if (queue[i].status === 1 /* SENT */) {\r\n                assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = 3 /* SENT_NEEDS_ABORT */;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                assert(queue[i].status === 0 /* RUN */, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, null));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            treeSetValue(node, undefined);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, treeGetPath(node), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @returns key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var e_1, _a;\r\n    var results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    try {\r\n        for (var _b = __values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var segment = _c.value;\r\n            if (segment.length === 0) {\r\n                continue;\r\n            }\r\n            var kv = segment.split('=');\r\n            if (kv.length === 2) {\r\n                results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n            }\r\n            else {\r\n                warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return results;\r\n}\r\nvar parseRepoInfo = function (dataURL, nodeAdmin) {\r\n    var parsedUrl = parseDatabaseURL(dataURL), namespace = parsedUrl.namespace;\r\n    if (parsedUrl.domain === 'firebase.com') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace === 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, nodeAdmin, webSocketOnly, \r\n        /*persistenceKey=*/ '', \r\n        /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\nvar parseDatabaseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '', namespace = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = host.length;\r\n        }\r\n        var hostWithoutPort = host.slice(0, colonInd);\r\n        if (hostWithoutPort.toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        else if (hostWithoutPort.split('.').length <= 2) {\r\n            domain = hostWithoutPort;\r\n        }\r\n        else {\r\n            // Interpret the subdomain of a 3 or more component URL as the namespace name.\r\n            var dotInd = host.indexOf('.');\r\n            subdomain = host.substring(0, dotInd).toLowerCase();\r\n            domain = host.substring(dotInd + 1);\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            namespace = subdomain;\r\n        }\r\n        // Always treat the value of the `ns` as the namespace name if it is present.\r\n        if ('ns' in queryParams) {\r\n            namespace = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString,\r\n        namespace: namespace\r\n    };\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param eventRegistration - The function to call to with the event data. User provided\r\n     * @param snapshot - The data backing the event\r\n     * @param prevName - Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.ref;\r\n        if (this.eventType === 'value') {\r\n            return ref._path;\r\n        }\r\n        else {\r\n            return ref.parent._path;\r\n        }\r\n    };\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A wrapper class that converts events from the database@exp SDK to the legacy\r\n * Database SDK. Events are not converted directly as event registration relies\r\n * on reference comparison of the original user callback (see `matches()`) and\r\n * relies on equality of the legacy SDK's `context` object.\r\n */\r\nvar CallbackContext = /** @class */ (function () {\r\n    function CallbackContext(snapshotCallback, cancelCallback) {\r\n        this.snapshotCallback = snapshotCallback;\r\n        this.cancelCallback = cancelCallback;\r\n    }\r\n    CallbackContext.prototype.onValue = function (expDataSnapshot, previousChildName) {\r\n        this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\r\n    };\r\n    CallbackContext.prototype.onCancel = function (error) {\r\n        assert(this.hasCancelCallback, 'Raising a cancel event on a listener with no cancel callback');\r\n        return this.cancelCallback.call(null, error);\r\n    };\r\n    Object.defineProperty(CallbackContext.prototype, \"hasCancelCallback\", {\r\n        get: function () {\r\n            return !!this.cancelCallback;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    CallbackContext.prototype.matches = function (other) {\r\n        return (this.snapshotCallback === other.snapshotCallback ||\r\n            (this.snapshotCallback.userCallback ===\r\n                other.snapshotCallback.userCallback &&\r\n                this.snapshotCallback.context === other.snapshotCallback.context));\r\n    };\r\n    return CallbackContext;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The `onDisconnect` class allows you to write or clear data when your client\r\n * disconnects from the Database server. These updates occur whether your\r\n * client disconnects cleanly or not, so you can rely on them to clean up data\r\n * even if a connection is dropped or a client crashes.\r\n *\r\n * The `onDisconnect` class is most commonly used to manage presence in\r\n * applications where it is useful to detect how many clients are connected and\r\n * when other clients disconnect. See\r\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n * for more information.\r\n *\r\n * To avoid problems when a connection is dropped before the requests can be\r\n * transferred to the Database server, these functions should be called before\r\n * writing any data.\r\n *\r\n * Note that `onDisconnect` operations are only triggered once. If you want an\r\n * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n * the `onDisconnect` operations each time you reconnect.\r\n */\r\nvar OnDisconnect$1 = /** @class */ (function () {\r\n    /** @hideconstructor */\r\n    function OnDisconnect(_repo, _path) {\r\n        this._repo = _repo;\r\n        this._path = _path;\r\n    }\r\n    /**\r\n     * Cancels all previously queued `onDisconnect()` set or update events for this\r\n     * location and all children.\r\n     *\r\n     * If a write has been queued for this location via a `set()` or `update()` at a\r\n     * parent location, the write at this location will be canceled, though writes\r\n     * to sibling locations will still occur.\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */\r\n    OnDisconnect.prototype.cancel = function () {\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectCancel(this._repo, this._path, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Ensures the data at this location is deleted when the client is disconnected\r\n     * (due to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */\r\n    OnDisconnect.prototype.remove = function () {\r\n        validateWritablePath('OnDisconnect.remove', this._path);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectSet(this._repo, this._path, null, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Ensures the data at this location is set to the specified value when the\r\n     * client is disconnected (due to closing the browser, navigating to a new page,\r\n     * or network issues).\r\n     *\r\n     * `set()` is especially useful for implementing \"presence\" systems, where a\r\n     * value should be changed or cleared when a user disconnects so that they\r\n     * appear \"offline\" to other users. See\r\n     * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n     * for more information.\r\n     *\r\n     * Note that `onDisconnect` operations are only triggered once. If you want an\r\n     * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n     * the `onDisconnect` operations each time.\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    OnDisconnect.prototype.set = function (value) {\r\n        validateWritablePath('OnDisconnect.set', this._path);\r\n        validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectSet(this._repo, this._path, value, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Ensures the data at this location is set to the specified value and priority\r\n     * when the client is disconnected (due to closing the browser, navigating to a\r\n     * new page, or network issues).\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @param priority - The priority to be written (string, number, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority) {\r\n        validateWritablePath('OnDisconnect.setWithPriority', this._path);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', value, this._path, false);\r\n        validatePriority('OnDisconnect.setWithPriority', priority, false);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectSetWithPriority(this._repo, this._path, value, priority, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Writes multiple values at this location when the client is disconnected (due\r\n     * to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * The `values` argument contains multiple property-value pairs that will be\r\n     * written to the Database together. Each child property can either be a simple\r\n     * property (for example, \"name\") or a relative path (for example, \"name/first\")\r\n     * from the current location to the data to update.\r\n     *\r\n     * As opposed to the `set()` method, `update()` can be use to selectively update\r\n     * only the referenced properties at the current location (instead of replacing\r\n     * all the child properties at the current location).\r\n     *\r\n     * @param values - Object containing multiple values.\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    OnDisconnect.prototype.update = function (values) {\r\n        validateWritablePath('OnDisconnect.update', this._path);\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', values, this._path, false);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectUpdate(this._repo, this._path, values, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nvar QueryImpl = /** @class */ (function () {\r\n    /**\r\n     * @hideconstructor\r\n     */\r\n    function QueryImpl(_repo, _path, _queryParams, _orderByCalled) {\r\n        this._repo = _repo;\r\n        this._path = _path;\r\n        this._queryParams = _queryParams;\r\n        this._orderByCalled = _orderByCalled;\r\n    }\r\n    Object.defineProperty(QueryImpl.prototype, \"key\", {\r\n        get: function () {\r\n            if (pathIsEmpty(this._path)) {\r\n                return null;\r\n            }\r\n            else {\r\n                return pathGetBack(this._path);\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QueryImpl.prototype, \"ref\", {\r\n        get: function () {\r\n            return new ReferenceImpl(this._repo, this._path);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QueryImpl.prototype, \"_queryIdentifier\", {\r\n        get: function () {\r\n            var obj = queryParamsGetQueryObject(this._queryParams);\r\n            var id = ObjectToUniqueKey(obj);\r\n            return id === '{}' ? 'default' : id;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QueryImpl.prototype, \"_queryObject\", {\r\n        /**\r\n         * An object representation of the query parameters used by this Query.\r\n         */\r\n        get: function () {\r\n            return queryParamsGetQueryObject(this._queryParams);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    QueryImpl.prototype.isEqual = function (other) {\r\n        other = getModularInstance(other);\r\n        if (!(other instanceof QueryImpl)) {\r\n            return false;\r\n        }\r\n        var sameRepo = this._repo === other._repo;\r\n        var samePath = pathEquals(this._path, other._path);\r\n        var sameQueryIdentifier = this._queryIdentifier === other._queryIdentifier;\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    QueryImpl.prototype.toJSON = function () {\r\n        return this.toString();\r\n    };\r\n    QueryImpl.prototype.toString = function () {\r\n        return this._repo.toString() + pathToUrlEncodedString(this._path);\r\n    };\r\n    return QueryImpl;\r\n}());\r\n/**\r\n * Validates that no other order by call has been made\r\n */\r\nfunction validateNoPreviousOrderByCall(query, fnName) {\r\n    if (query._orderByCalled === true) {\r\n        throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n    }\r\n}\r\n/**\r\n * Validates start/end values for queries.\r\n */\r\nfunction validateQueryEndpoints(params) {\r\n    var startNode = null;\r\n    var endNode = null;\r\n    if (params.hasStart()) {\r\n        startNode = params.getIndexStartValue();\r\n    }\r\n    if (params.hasEnd()) {\r\n        endNode = params.getIndexEndValue();\r\n    }\r\n    if (params.getIndex() === KEY_INDEX) {\r\n        var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n            'startAt(), endAt(), or equalTo().';\r\n        var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\r\n            'endAt(), endBefore(), or equalTo() must be a string.';\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            if (startName !== MIN_NAME) {\r\n                throw new Error(tooManyArgsError);\r\n            }\r\n            else if (typeof startNode !== 'string') {\r\n                throw new Error(wrongArgTypeError);\r\n            }\r\n        }\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            if (endName !== MAX_NAME) {\r\n                throw new Error(tooManyArgsError);\r\n            }\r\n            else if (typeof endNode !== 'string') {\r\n                throw new Error(wrongArgTypeError);\r\n            }\r\n        }\r\n    }\r\n    else if (params.getIndex() === PRIORITY_INDEX) {\r\n        if ((startNode != null && !isValidPriority(startNode)) ||\r\n            (endNode != null && !isValidPriority(endNode))) {\r\n            throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\r\n                '(null, a number, or a string).');\r\n        }\r\n    }\r\n    else {\r\n        assert(params.getIndex() instanceof PathIndex ||\r\n            params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n        if ((startNode != null && typeof startNode === 'object') ||\r\n            (endNode != null && typeof endNode === 'object')) {\r\n            throw new Error('Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\r\n                'equalTo() cannot be an object.');\r\n        }\r\n    }\r\n}\r\n/**\r\n * Validates that limit* has been called with the correct combination of parameters\r\n */\r\nfunction validateLimit(params) {\r\n    if (params.hasStart() &&\r\n        params.hasEnd() &&\r\n        params.hasLimit() &&\r\n        !params.hasAnchoredLimit()) {\r\n        throw new Error(\"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\r\n            'limitToFirst() or limitToLast() instead.');\r\n    }\r\n}\r\n/**\r\n * @internal\r\n */\r\nvar ReferenceImpl = /** @class */ (function (_super) {\r\n    __extends(ReferenceImpl, _super);\r\n    /** @hideconstructor */\r\n    function ReferenceImpl(repo, path) {\r\n        return _super.call(this, repo, path, new QueryParams(), false) || this;\r\n    }\r\n    Object.defineProperty(ReferenceImpl.prototype, \"parent\", {\r\n        get: function () {\r\n            var parentPath = pathParent(this._path);\r\n            return parentPath === null\r\n                ? null\r\n                : new ReferenceImpl(this._repo, parentPath);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceImpl.prototype, \"root\", {\r\n        get: function () {\r\n            var ref = this;\r\n            while (ref.parent !== null) {\r\n                ref = ref.parent;\r\n            }\r\n            return ref;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return ReferenceImpl;\r\n}(QueryImpl));\r\n/**\r\n * A `DataSnapshot` contains data from a Database location.\r\n *\r\n * Any time you read data from the Database, you receive the data as a\r\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\r\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\r\n * JavaScript object by calling the `val()` method. Alternatively, you can\r\n * traverse into the snapshot by calling `child()` to return child snapshots\r\n * (which you could then call `val()` on).\r\n *\r\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\r\n * a Database location. It cannot be modified and will never change (to modify\r\n * data, you always call the `set()` method on a `Reference` directly).\r\n */\r\nvar DataSnapshot$1 = /** @class */ (function () {\r\n    /**\r\n     * @param _node - A SnapshotNode to wrap.\r\n     * @param ref - The location this snapshot came from.\r\n     * @param _index - The iteration order for this snapshot\r\n     * @hideconstructor\r\n     */\r\n    function DataSnapshot(_node, \r\n    /**\r\n     * The location of this DataSnapshot.\r\n     */\r\n    ref, _index) {\r\n        this._node = _node;\r\n        this.ref = ref;\r\n        this._index = _index;\r\n    }\r\n    Object.defineProperty(DataSnapshot.prototype, \"priority\", {\r\n        /**\r\n         * Gets the priority value of the data in this `DataSnapshot`.\r\n         *\r\n         * Applications need not use priority but can order collections by\r\n         * ordinary properties (see\r\n         * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\r\n         * ).\r\n         */\r\n        get: function () {\r\n            // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n            return this._node.getPriority().val();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        /**\r\n         * The key (last part of the path) of the location of this `DataSnapshot`.\r\n         *\r\n         * The last token in a Database location is considered its key. For example,\r\n         * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\r\n         * `DataSnapshot` will return the key for the location that generated it.\r\n         * However, accessing the key on the root URL of a Database will return\r\n         * `null`.\r\n         */\r\n        get: function () {\r\n            return this.ref.key;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataSnapshot.prototype, \"size\", {\r\n        /** Returns the number of child properties of this `DataSnapshot`. */\r\n        get: function () {\r\n            return this._node.numChildren();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets another `DataSnapshot` for the location at the specified relative path.\r\n     *\r\n     * Passing a relative path to the `child()` method of a DataSnapshot returns\r\n     * another `DataSnapshot` for the location at the specified relative path. The\r\n     * relative path can either be a simple child name (for example, \"ada\") or a\r\n     * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\r\n     * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\r\n     * whose value is `null`) is returned.\r\n     *\r\n     * @param path - A relative path to the location of child data.\r\n     */\r\n    DataSnapshot.prototype.child = function (path) {\r\n        var childPath = new Path(path);\r\n        var childRef = child(this.ref, path);\r\n        return new DataSnapshot(this._node.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns true if this `DataSnapshot` contains any data. It is slightly more\r\n     * efficient than using `snapshot.val() !== null`.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        return !this._node.isEmpty();\r\n    };\r\n    /**\r\n     * Exports the entire contents of the DataSnapshot as a JavaScript object.\r\n     *\r\n     * The `exportVal()` method is similar to `val()`, except priority information\r\n     * is included (if available), making it suitable for backing up your data.\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        return this._node.val(true);\r\n    };\r\n    /**\r\n     * Enumerates the top-level children in the `DataSnapshot`.\r\n     *\r\n     * Because of the way JavaScript objects work, the ordering of data in the\r\n     * JavaScript object returned by `val()` is not guaranteed to match the\r\n     * ordering on the server nor the ordering of `onChildAdded()` events. That is\r\n     * where `forEach()` comes in handy. It guarantees the children of a\r\n     * `DataSnapshot` will be iterated in their query order.\r\n     *\r\n     * If no explicit `orderBy*()` method is used, results are returned\r\n     * ordered by key (unless priorities are used, in which case, results are\r\n     * returned by priority).\r\n     *\r\n     * @param action - A function that will be called for each child DataSnapshot.\r\n     * The callback can return true to cancel further enumeration.\r\n     * @returns true if enumeration was canceled due to your callback returning\r\n     * true.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        if (this._node.isLeafNode()) {\r\n            return false;\r\n        }\r\n        var childrenNode = this._node;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this._index, function (key, node) {\r\n            return action(new DataSnapshot(node, child(_this.ref, key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns true if the specified child path has (non-null) data.\r\n     *\r\n     * @param path - A relative path to the location of a potential child.\r\n     * @returns `true` if data exists at the specified child path; else\r\n     *  `false`.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (path) {\r\n        var childPath = new Path(path);\r\n        return !this._node.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns whether or not the `DataSnapshot` has any non-`null` child\r\n     * properties.\r\n     *\r\n     * You can use `hasChildren()` to determine if a `DataSnapshot` has any\r\n     * children. If it does, you can enumerate them using `forEach()`. If it\r\n     * doesn't, then either this snapshot contains a primitive value (which can be\r\n     * retrieved with `val()`) or it is empty (in which case, `val()` will return\r\n     * `null`).\r\n     *\r\n     * @returns true if this snapshot has any children; else false.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        if (this._node.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return !this._node.isEmpty();\r\n        }\r\n    };\r\n    /**\r\n     * Returns a JSON-serializable representation of this object.\r\n     */\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Extracts a JavaScript value from a `DataSnapshot`.\r\n     *\r\n     * Depending on the data in a `DataSnapshot`, the `val()` method may return a\r\n     * scalar type (string, number, or boolean), an array, or an object. It may\r\n     * also return null, indicating that the `DataSnapshot` is empty (contains no\r\n     * data).\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    DataSnapshot.prototype.val = function () {\r\n        return this._node.val();\r\n    };\r\n    return DataSnapshot;\r\n}());\r\n/**\r\n *\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided path. If no path is provided, the `Reference`\r\n * will point to the root of the Database.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param path - Optional path representing the location the returned\r\n *   `Reference` will point. If not provided, the returned `Reference` will\r\n *   point to the root of the Database.\r\n * @returns If a path is provided, a `Reference`\r\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\r\n *   root of the Database.\r\n */\r\nfunction ref(db, path) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('ref');\r\n    return path !== undefined ? child(db._root, path) : db._root;\r\n}\r\n/**\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided Firebase URL.\r\n *\r\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\r\n * has a different domain than the current `Database` instance.\r\n *\r\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\r\n * and are not applied to the returned `Reference`.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param url - The Firebase URL at which the returned `Reference` will\r\n *   point.\r\n * @returns A `Reference` pointing to the provided\r\n *   Firebase URL.\r\n */\r\nfunction refFromURL(db, url) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('refFromURL');\r\n    var parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\r\n    validateUrl('refFromURL', parsedURL);\r\n    var repoInfo = parsedURL.repoInfo;\r\n    if (!db._repo.repoInfo_.isCustomHost() &&\r\n        repoInfo.host !== db._repo.repoInfo_.host) {\r\n        fatal('refFromURL' +\r\n            ': Host name does not match the current database: ' +\r\n            '(found ' +\r\n            repoInfo.host +\r\n            ' but expected ' +\r\n            db._repo.repoInfo_.host +\r\n            ')');\r\n    }\r\n    return ref(db, parsedURL.path.toString());\r\n}\r\n/**\r\n * Gets a `Reference` for the location at the specified relative path.\r\n *\r\n * The relative path can either be a simple child name (for example, \"ada\") or\r\n * a deeper slash-separated path (for example, \"ada/name/first\").\r\n *\r\n * @param parent - The parent location.\r\n * @param path - A relative path from this location to the desired child\r\n *   location.\r\n * @returns The specified child location.\r\n */\r\nfunction child(parent, path) {\r\n    parent = getModularInstance(parent);\r\n    if (pathGetFront(parent._path) === null) {\r\n        validateRootPathString('child', 'path', path, false);\r\n    }\r\n    else {\r\n        validatePathString('child', 'path', path, false);\r\n    }\r\n    return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\r\n}\r\n/**\r\n * Generates a new child location using a unique key and returns its\r\n * `Reference`.\r\n *\r\n * This is the most common pattern for adding data to a collection of items.\r\n *\r\n * If you provide a value to `push()`, the value is written to the\r\n * generated location. If you don't pass a value, nothing is written to the\r\n * database and the child remains empty (but you can use the `Reference`\r\n * elsewhere).\r\n *\r\n * The unique keys generated by `push()` are ordered by the current time, so the\r\n * resulting list of items is chronologically sorted. The keys are also\r\n * designed to be unguessable (they contain 72 random bits of entropy).\r\n *\r\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}\r\n * </br>See {@link ttps://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}\r\n *\r\n * @param parent - The parent location.\r\n * @param value - Optional value to be written at the generated location.\r\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\r\n * but can be used immediately as the `Reference` to the child location.\r\n */\r\nfunction push(parent, value) {\r\n    parent = getModularInstance(parent);\r\n    validateWritablePath('push', parent._path);\r\n    validateFirebaseDataArg('push', value, parent._path, true);\r\n    var now = repoServerTime(parent._repo);\r\n    var name = nextPushId(now);\r\n    // push() returns a ThennableReference whose promise is fulfilled with a\r\n    // regular Reference. We use child() to create handles to two different\r\n    // references. The first is turned into a ThennableReference below by adding\r\n    // then() and catch() methods and is used as the return value of push(). The\r\n    // second remains a regular Reference and is used as the fulfilled value of\r\n    // the first ThennableReference.\r\n    var thennablePushRef = child(parent, name);\r\n    var pushRef = child(parent, name);\r\n    var promise;\r\n    if (value != null) {\r\n        promise = set(pushRef, value).then(function () { return pushRef; });\r\n    }\r\n    else {\r\n        promise = Promise.resolve(pushRef);\r\n    }\r\n    thennablePushRef.then = promise.then.bind(promise);\r\n    thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n    return thennablePushRef;\r\n}\r\n/**\r\n * Removes the data at this Database location.\r\n *\r\n * Any data at child locations will also be deleted.\r\n *\r\n * The effect of the remove will be visible immediately and the corresponding\r\n * event 'value' will be triggered. Synchronization of the remove to the\r\n * Firebase servers will also be started, and the returned Promise will resolve\r\n * when complete. If provided, the onComplete callback will be called\r\n * asynchronously after synchronization has finished.\r\n *\r\n * @param ref - The location to remove.\r\n * @returns Resolves when remove on server is complete.\r\n */\r\nfunction remove(ref) {\r\n    validateWritablePath('remove', ref._path);\r\n    return set(ref, null);\r\n}\r\n/**\r\n * Writes data to this Database location.\r\n *\r\n * This will overwrite any data at this location and all child locations.\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\r\n * all data at this location and all child locations will be deleted.\r\n *\r\n * `set()` will remove any priority stored at this location, so if priority is\r\n * meant to be preserved, you need to use `setWithPriority()` instead.\r\n *\r\n * Note that modifying data with `set()` will cancel any pending transactions\r\n * at that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to modify the same data.\r\n *\r\n * A single `set()` will generate a single \"value\" event at the location where\r\n * the `set()` was performed.\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction set(ref, value) {\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('set', ref._path);\r\n    validateFirebaseDataArg('set', value, ref._path, false);\r\n    var deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, ref._path, value, \r\n    /*priority=*/ null, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Sets a priority for the data at this Database location.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction setPriority(ref, priority) {\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('setPriority', ref._path);\r\n    validatePriority('setPriority', priority, false);\r\n    var deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, pathChild(ref._path, '.priority'), priority, null, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Writes data the Database location. Like `set()` but also specifies the\r\n * priority for that data.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction setWithPriority(ref, value, priority) {\r\n    validateWritablePath('setWithPriority', ref._path);\r\n    validateFirebaseDataArg('setWithPriority', value, ref._path, false);\r\n    validatePriority('setWithPriority', priority, false);\r\n    if (ref.key === '.length' || ref.key === '.keys') {\r\n        throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\r\n    }\r\n    var deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, ref._path, value, priority, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Writes multiple values to the Database at once.\r\n *\r\n * The `values` argument contains multiple property-value pairs that will be\r\n * written to the Database together. Each child property can either be a simple\r\n * property (for example, \"name\") or a relative path (for example,\r\n * \"name/first\") from the current location to the data to update.\r\n *\r\n * As opposed to the `set()` method, `update()` can be use to selectively update\r\n * only the referenced properties at the current location (instead of replacing\r\n * all the child properties at the current location).\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * A single `update()` will generate a single \"value\" event at the location\r\n * where the `update()` was performed, regardless of how many children were\r\n * modified.\r\n *\r\n * Note that modifying data with `update()` will cancel any pending\r\n * transactions at that location, so extreme care should be taken if mixing\r\n * `update()` and `transaction()` to modify the same data.\r\n *\r\n * Passing `null` to `update()` will remove the data at this location.\r\n *\r\n * See\r\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\r\n *\r\n * @param ref - The location to write to.\r\n * @param values - Object containing multiple values.\r\n * @returns Resolves when update on server is complete.\r\n */\r\nfunction update(ref, values) {\r\n    validateFirebaseMergeDataArg('update', values, ref._path, false);\r\n    var deferred = new Deferred();\r\n    repoUpdate(ref._repo, ref._path, values, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Gets the most up-to-date result for this query.\r\n *\r\n * @param query - The query to run.\r\n * @returns A promise which resolves to the resulting DataSnapshot if a value is\r\n * available, or rejects if the client is unable to return a value (e.g., if the\r\n * server is unreachable and there is nothing cached).\r\n */\r\nfunction get(query) {\r\n    query = getModularInstance(query);\r\n    return repoGetValue(query._repo, query).then(function (node) {\r\n        return new DataSnapshot$1(node, new ReferenceImpl(query._repo, query._path), query._queryParams.getIndex());\r\n    });\r\n}\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    function ValueEventRegistration(callbackContext) {\r\n        this.callbackContext = callbackContext;\r\n    }\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query._queryParams.getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot$1(change.snapshotNode, new ReferenceImpl(query._repo, query._path), index));\r\n    };\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var _this = this;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            return function () {\r\n                return _this.callbackContext.onCancel(eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            return function () {\r\n                return _this.callbackContext.onValue(eventData.snapshot, null);\r\n            };\r\n        }\r\n    };\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.callbackContext.hasCancelCallback) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callbackContext || !this.callbackContext) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return other.callbackContext.matches(this.callbackContext);\r\n        }\r\n    };\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbackContext !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of a child_x event.\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    function ChildEventRegistration(eventType, callbackContext) {\r\n        this.eventType = eventType;\r\n        this.callbackContext = callbackContext;\r\n    }\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return this.eventType === eventToCheck;\r\n    };\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.callbackContext.hasCancelCallback) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        assert(change.childName != null, 'Child events should have a childName.');\r\n        var childRef = child(new ReferenceImpl(query._repo, query._path), change.childName);\r\n        var index = query._queryParams.getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot$1(change.snapshotNode, childRef, index), change.prevName);\r\n    };\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var _this = this;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            return function () {\r\n                return _this.callbackContext.onCancel(eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            return function () {\r\n                return _this.callbackContext.onValue(eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        if (other instanceof ChildEventRegistration) {\r\n            return (this.eventType === other.eventType &&\r\n                (!this.callbackContext ||\r\n                    !other.callbackContext ||\r\n                    this.callbackContext.matches(other.callbackContext)));\r\n        }\r\n        return false;\r\n    };\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return !!this.callbackContext;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\r\nfunction addEventListener(query, eventType, callback, cancelCallbackOrListenOptions, options) {\r\n    var cancelCallback;\r\n    if (typeof cancelCallbackOrListenOptions === 'object') {\r\n        cancelCallback = undefined;\r\n        options = cancelCallbackOrListenOptions;\r\n    }\r\n    if (typeof cancelCallbackOrListenOptions === 'function') {\r\n        cancelCallback = cancelCallbackOrListenOptions;\r\n    }\r\n    if (options && options.onlyOnce) {\r\n        var userCallback_1 = callback;\r\n        var onceCallback = function (dataSnapshot, previousChildName) {\r\n            repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n            userCallback_1(dataSnapshot, previousChildName);\r\n        };\r\n        onceCallback.userCallback = callback.userCallback;\r\n        onceCallback.context = callback.context;\r\n        callback = onceCallback;\r\n    }\r\n    var callbackContext = new CallbackContext(callback, cancelCallback || undefined);\r\n    var container = eventType === 'value'\r\n        ? new ValueEventRegistration(callbackContext)\r\n        : new ChildEventRegistration(eventType, callbackContext);\r\n    repoAddEventCallbackForQuery(query._repo, query, container);\r\n    return function () { return repoRemoveEventCallbackForQuery(query._repo, query, container); };\r\n}\r\nfunction onValue(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'value', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildAdded(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_added', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildChanged(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_changed', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildMoved(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_moved', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildRemoved(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_removed', callback, cancelCallbackOrListenOptions, options);\r\n}\r\n/**\r\n * Detaches a callback previously attached with `on()`.\r\n *\r\n * Detach a callback previously attached with `on()`. Note that if `on()` was\r\n * called multiple times with the same eventType and callback, the callback\r\n * will be called multiple times for each event, and `off()` must be called\r\n * multiple times to remove the callback. Calling `off()` on a parent listener\r\n * will not automatically remove listeners registered on child nodes, `off()`\r\n * must also be called on any child listeners to remove the callback.\r\n *\r\n * If a callback is not specified, all callbacks for the specified eventType\r\n * will be removed. Similarly, if no eventType is specified, all callbacks\r\n * for the `Reference` will be removed.\r\n *\r\n * Individual listeners can also be removed by invoking their unsubscribe\r\n * callbacks.\r\n *\r\n * @param query - The query that the listener was registered with.\r\n * @param eventType - One of the following strings: \"value\", \"child_added\",\r\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\r\n * for the `Reference` will be removed.\r\n * @param callback - The callback function that was passed to `on()` or\r\n * `undefined` to remove all callbacks.\r\n */\r\nfunction off(query, eventType, callback) {\r\n    var container = null;\r\n    var expCallback = callback ? new CallbackContext(callback) : null;\r\n    if (eventType === 'value') {\r\n        container = new ValueEventRegistration(expCallback);\r\n    }\r\n    else if (eventType) {\r\n        container = new ChildEventRegistration(eventType, expCallback);\r\n    }\r\n    repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n}\r\n/**\r\n * A `QueryConstraint` is used to narrow the set of documents returned by a\r\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\r\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\r\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\r\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\r\n * {@link orderByValue}  or {@link equalTo} and\r\n * can then be passed to {@link query} to create a new query instance that\r\n * also contains this `QueryConstraint`.\r\n */\r\nvar QueryConstraint = /** @class */ (function () {\r\n    function QueryConstraint() {\r\n    }\r\n    return QueryConstraint;\r\n}());\r\nvar QueryEndAtConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryEndAtConstraint, _super);\r\n    function QueryEndAtConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryEndAtConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('endAt', this._value, query._path, true);\r\n        var newParams = queryParamsEndAt(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('endAt: Starting point was already set (by another call to endAt, ' +\r\n                'endBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryEndAtConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified ending point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name less than or equal\r\n * to the specified key.\r\n *\r\n * You can read more about `endAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to end at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end at, among the children with the previously\r\n * specified priority. This argument is only allowed if ordering by child,\r\n * value, or priority.\r\n */\r\nfunction endAt(value, key) {\r\n    validateKey('endAt', 'key', key, true);\r\n    return new QueryEndAtConstraint(value, key);\r\n}\r\nvar QueryEndBeforeConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryEndBeforeConstraint, _super);\r\n    function QueryEndBeforeConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryEndBeforeConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('endBefore', this._value, query._path, false);\r\n        var newParams = queryParamsEndBefore(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('endBefore: Starting point was already set (by another call to endAt, ' +\r\n                'endBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryEndBeforeConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is exclusive. If only a value is provided, children\r\n * with a value less than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value lesss than or equal\r\n * to the specified value and a a key name less than the specified key.\r\n *\r\n * @param value - The value to end before. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end before, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\r\nfunction endBefore(value, key) {\r\n    validateKey('endBefore', 'key', key, true);\r\n    return new QueryEndBeforeConstraint(value, key);\r\n}\r\nvar QueryStartAtConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryStartAtConstraint, _super);\r\n    function QueryStartAtConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryStartAtConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('startAt', this._value, query._path, true);\r\n        var newParams = queryParamsStartAt(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('startAt: Starting point was already set (by another call to startAt, ' +\r\n                'startBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryStartAtConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified starting point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name greater than or\r\n * equal to the specified key.\r\n *\r\n * You can read more about `startAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to start at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\r\nfunction startAt(value, key) {\r\n    if (value === void 0) { value = null; }\r\n    validateKey('startAt', 'key', key, true);\r\n    return new QueryStartAtConstraint(value, key);\r\n}\r\nvar QueryStartAfterConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryStartAfterConstraint, _super);\r\n    function QueryStartAfterConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryStartAfterConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('startAfter', this._value, query._path, false);\r\n        var newParams = queryParamsStartAfter(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('startAfter: Starting point was already set (by another call to startAt, ' +\r\n                'startAfter, or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryStartAfterConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is exclusive. If only a value is provided, children\r\n * with a value greater than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value greater than or equal\r\n * to the specified value and a a key name greater than the specified key.\r\n *\r\n * @param value - The value to start after. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start after. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\r\nfunction startAfter(value, key) {\r\n    validateKey('startAfter', 'key', key, true);\r\n    return new QueryStartAfterConstraint(value, key);\r\n}\r\nvar QueryLimitToFirstConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryLimitToFirstConstraint, _super);\r\n    function QueryLimitToFirstConstraint(_limit) {\r\n        var _this = _super.call(this) || this;\r\n        _this._limit = _limit;\r\n        return _this;\r\n    }\r\n    QueryLimitToFirstConstraint.prototype._apply = function (query) {\r\n        if (query._queryParams.hasLimit()) {\r\n            throw new Error('limitToFirst: Limit was already set (by another call to limitToFirst ' +\r\n                'or limitToLast).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, queryParamsLimitToFirst(query._queryParams, this._limit), query._orderByCalled);\r\n    };\r\n    return QueryLimitToFirstConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that if limited to the first specific number\r\n * of children.\r\n *\r\n * The `limitToFirst()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the first 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToFirst()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\r\nfunction limitToFirst(limit) {\r\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\r\n        throw new Error('limitToFirst: First argument must be a positive integer.');\r\n    }\r\n    return new QueryLimitToFirstConstraint(limit);\r\n}\r\nvar QueryLimitToLastConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryLimitToLastConstraint, _super);\r\n    function QueryLimitToLastConstraint(_limit) {\r\n        var _this = _super.call(this) || this;\r\n        _this._limit = _limit;\r\n        return _this;\r\n    }\r\n    QueryLimitToLastConstraint.prototype._apply = function (query) {\r\n        if (query._queryParams.hasLimit()) {\r\n            throw new Error('limitToLast: Limit was already set (by another call to limitToFirst ' +\r\n                'or limitToLast).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, queryParamsLimitToLast(query._queryParams, this._limit), query._orderByCalled);\r\n    };\r\n    return QueryLimitToLastConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that is limited to return only the last\r\n * specified number of children.\r\n *\r\n * The `limitToLast()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the last 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToLast()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\r\nfunction limitToLast(limit) {\r\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\r\n        throw new Error('limitToLast: First argument must be a positive integer.');\r\n    }\r\n    return new QueryLimitToLastConstraint(limit);\r\n}\r\nvar QueryOrderByChildConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByChildConstraint, _super);\r\n    function QueryOrderByChildConstraint(_path) {\r\n        var _this = _super.call(this) || this;\r\n        _this._path = _path;\r\n        return _this;\r\n    }\r\n    QueryOrderByChildConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByChild');\r\n        var parsedPath = new Path(this._path);\r\n        if (pathIsEmpty(parsedPath)) {\r\n            throw new Error('orderByChild: cannot pass in empty path. Use orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = queryParamsOrderBy(query._queryParams, index);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByChildConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by the specified child key.\r\n *\r\n * Queries can only order by one key at a time. Calling `orderByChild()`\r\n * multiple times on the same query is an error.\r\n *\r\n * Firebase queries allow you to order your data by any child key on the fly.\r\n * However, if you know in advance what your indexes will be, you can define\r\n * them via the .indexOn rule in your Security Rules for better performance. See\r\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\r\n * rule for more information.\r\n *\r\n * You can read more about `orderByChild()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n *\r\n * @param path - The path to order by.\r\n */\r\nfunction orderByChild(path) {\r\n    if (path === '$key') {\r\n        throw new Error('orderByChild: \"$key\" is invalid.  Use orderByKey() instead.');\r\n    }\r\n    else if (path === '$priority') {\r\n        throw new Error('orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.');\r\n    }\r\n    else if (path === '$value') {\r\n        throw new Error('orderByChild: \"$value\" is invalid.  Use orderByValue() instead.');\r\n    }\r\n    validatePathString('orderByChild', 'path', path, false);\r\n    return new QueryOrderByChildConstraint(path);\r\n}\r\nvar QueryOrderByKeyConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByKeyConstraint, _super);\r\n    function QueryOrderByKeyConstraint() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    QueryOrderByKeyConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByKey');\r\n        var newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByKeyConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by the key.\r\n *\r\n * Sorts the results of a query by their (ascending) key values.\r\n *\r\n * You can read more about `orderByKey()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\r\nfunction orderByKey() {\r\n    return new QueryOrderByKeyConstraint();\r\n}\r\nvar QueryOrderByPriorityConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByPriorityConstraint, _super);\r\n    function QueryOrderByPriorityConstraint() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    QueryOrderByPriorityConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByPriority');\r\n        var newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByPriorityConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by priority.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\r\n * for alternatives to priority.\r\n */\r\nfunction orderByPriority() {\r\n    return new QueryOrderByPriorityConstraint();\r\n}\r\nvar QueryOrderByValueConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByValueConstraint, _super);\r\n    function QueryOrderByValueConstraint() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    QueryOrderByValueConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByValue');\r\n        var newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByValueConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by value.\r\n *\r\n * If the children of a query are all scalar values (string, number, or\r\n * boolean), you can order the results by their (ascending) values.\r\n *\r\n * You can read more about `orderByValue()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\r\nfunction orderByValue() {\r\n    return new QueryOrderByValueConstraint();\r\n}\r\nvar QueryEqualToValueConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryEqualToValueConstraint, _super);\r\n    function QueryEqualToValueConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryEqualToValueConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('equalTo', this._value, query._path, false);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\r\n                'equalTo).');\r\n        }\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\r\n                'equalTo).');\r\n        }\r\n        return new QueryEndAtConstraint(this._value, this._key)._apply(new QueryStartAtConstraint(this._value, this._key)._apply(query));\r\n    };\r\n    return QueryEqualToValueConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` that includes children that match the specified\r\n * value.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The optional key argument can be used to further limit the range of the\r\n * query. If it is specified, then children that have exactly the specified\r\n * value must also have exactly the specified key as their key name. This can be\r\n * used to filter result sets with many matches for the same value.\r\n *\r\n * You can read more about `equalTo()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to match for. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\r\nfunction equalTo(value, key) {\r\n    validateKey('equalTo', 'key', key, true);\r\n    return new QueryEqualToValueConstraint(value, key);\r\n}\r\n/**\r\n * Creates a new immutable instance of `Query` that is extended to also include\r\n * additional query constraints.\r\n *\r\n * @param query - The Query instance to use as a base for the new constraints.\r\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\r\n * @throws if any of the provided query constraints cannot be combined with the\r\n * existing or new constraints.\r\n */\r\nfunction query(query) {\r\n    var e_1, _a;\r\n    var queryConstraints = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        queryConstraints[_i - 1] = arguments[_i];\r\n    }\r\n    var queryImpl = getModularInstance(query);\r\n    try {\r\n        for (var queryConstraints_1 = __values(queryConstraints), queryConstraints_1_1 = queryConstraints_1.next(); !queryConstraints_1_1.done; queryConstraints_1_1 = queryConstraints_1.next()) {\r\n            var constraint = queryConstraints_1_1.value;\r\n            queryImpl = constraint._apply(queryImpl);\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (queryConstraints_1_1 && !queryConstraints_1_1.done && (_a = queryConstraints_1.return)) _a.call(queryConstraints_1);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return queryImpl;\r\n}\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nsyncPointSetReferenceConstructor(ReferenceImpl);\r\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\r\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar repos = {};\r\n/**\r\n * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n */\r\nvar useRestClient = false;\r\n/**\r\n * Update an existing repo in place to point to a new host/port.\r\n */\r\nfunction repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider) {\r\n    repo.repoInfo_ = new RepoInfo(host + \":\" + port, \r\n    /* secure= */ false, repo.repoInfo_.namespace, repo.repoInfo_.webSocketOnly, repo.repoInfo_.nodeAdmin, repo.repoInfo_.persistenceKey, repo.repoInfo_.includeNamespaceInQueryParams);\r\n    if (tokenProvider) {\r\n        repo.authTokenProvider_ = tokenProvider;\r\n    }\r\n}\r\n/**\r\n * This function should only ever be called to CREATE a new database instance.\r\n * @internal\r\n */\r\nfunction repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url, nodeAdmin) {\r\n    var dbUrl = url || app.options.databaseURL;\r\n    if (dbUrl === undefined) {\r\n        if (!app.options.projectId) {\r\n            fatal(\"Can't determine Firebase Database URL. Be sure to include \" +\r\n                ' a Project ID when calling firebase.initializeApp().');\r\n        }\r\n        log('Using default host for project ', app.options.projectId);\r\n        dbUrl = app.options.projectId + \"-default-rtdb.firebaseio.com\";\r\n    }\r\n    var parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n    var repoInfo = parsedUrl.repoInfo;\r\n    var isEmulator;\r\n    var dbEmulatorHost = undefined;\r\n    if (typeof process !== 'undefined') {\r\n        dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\r\n    }\r\n    if (dbEmulatorHost) {\r\n        isEmulator = true;\r\n        dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\r\n        parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n        repoInfo = parsedUrl.repoInfo;\r\n    }\r\n    else {\r\n        isEmulator = !parsedUrl.repoInfo.secure;\r\n    }\r\n    var authTokenProvider = nodeAdmin && isEmulator\r\n        ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\r\n        : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\r\n    validateUrl('Invalid Firebase Database URL', parsedUrl);\r\n    if (!pathIsEmpty(parsedUrl.path)) {\r\n        fatal('Database URL must point to the root of a Firebase Database ' +\r\n            '(not including a child path).');\r\n    }\r\n    var repo = repoManagerCreateRepo(repoInfo, app, authTokenProvider, new AppCheckTokenProvider(app.name, appCheckProvider));\r\n    return new FirebaseDatabase(repo, app);\r\n}\r\n/**\r\n * Remove the repo and make sure it is disconnected.\r\n *\r\n */\r\nfunction repoManagerDeleteRepo(repo, appName) {\r\n    var appRepos = repos[appName];\r\n    // This should never happen...\r\n    if (!appRepos || appRepos[repo.key] !== repo) {\r\n        fatal(\"Database \" + appName + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n    }\r\n    repoInterrupt(repo);\r\n    delete appRepos[repo.key];\r\n}\r\n/**\r\n * Ensures a repo doesn't already exist and then creates one using the\r\n * provided app.\r\n *\r\n * @param repoInfo - The metadata about the Repo\r\n * @returns The Repo object for the specified server / repoName.\r\n */\r\nfunction repoManagerCreateRepo(repoInfo, app, authTokenProvider, appCheckProvider) {\r\n    var appRepos = repos[app.name];\r\n    if (!appRepos) {\r\n        appRepos = {};\r\n        repos[app.name] = appRepos;\r\n    }\r\n    var repo = appRepos[repoInfo.toURLString()];\r\n    if (repo) {\r\n        fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n    }\r\n    repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\r\n    appRepos[repoInfo.toURLString()] = repo;\r\n    return repo;\r\n}\r\n/**\r\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n */\r\nfunction repoManagerForceRestClient(forceRestClient) {\r\n    useRestClient = forceRestClient;\r\n}\r\n/**\r\n * Class representing a Firebase Realtime Database.\r\n */\r\nvar FirebaseDatabase = /** @class */ (function () {\r\n    /** @hideconstructor */\r\n    function FirebaseDatabase(_repoInternal, \r\n    /** The FirebaseApp associated with this Realtime Database instance. */\r\n    app) {\r\n        this._repoInternal = _repoInternal;\r\n        this.app = app;\r\n        /** Represents a database instance. */\r\n        this['type'] = 'database';\r\n        /** Track if the instance has been used (root or repo accessed) */\r\n        this._instanceStarted = false;\r\n    }\r\n    Object.defineProperty(FirebaseDatabase.prototype, \"_repo\", {\r\n        get: function () {\r\n            if (!this._instanceStarted) {\r\n                repoStart(this._repoInternal, this.app.options.appId, this.app.options['databaseAuthVariableOverride']);\r\n                this._instanceStarted = true;\r\n            }\r\n            return this._repoInternal;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseDatabase.prototype, \"_root\", {\r\n        get: function () {\r\n            if (!this._rootInternal) {\r\n                this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\r\n            }\r\n            return this._rootInternal;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    FirebaseDatabase.prototype._delete = function () {\r\n        this._checkNotDeleted('delete');\r\n        repoManagerDeleteRepo(this._repo, this.app.name);\r\n        this._repoInternal = null;\r\n        this._rootInternal = null;\r\n        return Promise.resolve();\r\n    };\r\n    FirebaseDatabase.prototype._checkNotDeleted = function (apiName) {\r\n        if (this._rootInternal === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    return FirebaseDatabase;\r\n}());\r\n/**\r\n * Modify the provided instance to communicate with the Realtime Database\r\n * emulator.\r\n *\r\n * <p>Note: This method must be called before performing any other operation.\r\n *\r\n * @param db - The instance to modify.\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 8080)\r\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\r\n */\r\nfunction useDatabaseEmulator(db, host, port, options) {\r\n    if (options === void 0) { options = {}; }\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('useEmulator');\r\n    if (db._instanceStarted) {\r\n        fatal('Cannot call useEmulator() after instance has already been initialized.');\r\n    }\r\n    var repo = db._repoInternal;\r\n    var tokenProvider = undefined;\r\n    if (repo.repoInfo_.nodeAdmin) {\r\n        if (options.mockUserToken) {\r\n            fatal('mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".');\r\n        }\r\n        tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\r\n    }\r\n    else if (options.mockUserToken) {\r\n        var token = createMockUserToken(options.mockUserToken, db.app.options.projectId);\r\n        tokenProvider = new EmulatorTokenProvider(token);\r\n    }\r\n    // Modify the repo to apply emulator settings\r\n    repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\r\n}\r\n/**\r\n * Disconnects from the server (all Database operations will be completed\r\n * offline).\r\n *\r\n * The client automatically maintains a persistent connection to the Database\r\n * server, which will remain active indefinitely and reconnect when\r\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\r\n * to control the client connection in cases where a persistent connection is\r\n * undesirable.\r\n *\r\n * While offline, the client will no longer receive data updates from the\r\n * Database. However, all Database operations performed locally will continue to\r\n * immediately fire events, allowing your application to continue behaving\r\n * normally. Additionally, each operation performed locally will automatically\r\n * be queued and retried upon reconnection to the Database server.\r\n *\r\n * To reconnect to the Database and begin receiving remote events, see\r\n * `goOnline()`.\r\n *\r\n * @param db - The instance to disconnect.\r\n */\r\nfunction goOffline(db) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('goOffline');\r\n    repoInterrupt(db._repo);\r\n}\r\n/**\r\n * Reconnects to the server and synchronizes the offline Database state\r\n * with the server state.\r\n *\r\n * This method should be used after disabling the active connection with\r\n * `goOffline()`. Once reconnected, the client will transmit the proper data\r\n * and fire the appropriate events so that your client \"catches up\"\r\n * automatically.\r\n *\r\n * @param db - The instance to reconnect.\r\n */\r\nfunction goOnline(db) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('goOnline');\r\n    repoResume(db._repo);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar SERVER_TIMESTAMP = {\r\n    '.sv': 'timestamp'\r\n};\r\n/**\r\n * Returns a placeholder value for auto-populating the current timestamp (time\r\n * since the Unix epoch, in milliseconds) as determined by the Firebase\r\n * servers.\r\n */\r\nfunction serverTimestamp() {\r\n    return SERVER_TIMESTAMP;\r\n}\r\n/**\r\n * Returns a placeholder value that can be used to atomically increment the\r\n * current database value by the provided delta.\r\n *\r\n * @param delta - the amount to modify the current value atomically.\r\n * @returns A placeholder value for modifying data atomically server-side.\r\n */\r\nfunction increment(delta) {\r\n    return {\r\n        '.sv': {\r\n            'increment': delta\r\n        }\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A type for the resolve value of Firebase.transaction.\r\n */\r\nvar TransactionResult$1 = /** @class */ (function () {\r\n    /** @hideconstructor */\r\n    function TransactionResult(\r\n    /** Whether the transaction was successfully committed. */\r\n    committed, \r\n    /** The resulting data snapshot. */\r\n    snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    /** Returns a JSON-serializable representation of this object. */\r\n    TransactionResult.prototype.toJSON = function () {\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\r\n/**\r\n * Atomically modifies the data at this location.\r\n *\r\n * Atomically modify the data at this location. Unlike a normal `set()`, which\r\n * just overwrites the data regardless of its previous value, `transaction()` is\r\n * used to modify the existing value to a new value, ensuring there are no\r\n * conflicts with other clients writing to the same location at the same time.\r\n *\r\n * To accomplish this, you pass `runTransaction()` an update function which is\r\n * used to transform the current value into a new value. If another client\r\n * writes to the location before your new value is successfully written, your\r\n * update function will be called again with the new current value, and the\r\n * write will be retried. This will happen repeatedly until your write succeeds\r\n * without conflict or you abort the transaction by not returning a value from\r\n * your update function.\r\n *\r\n * Note: Modifying data with `set()` will cancel any pending transactions at\r\n * that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to update the same data.\r\n *\r\n * Note: When using transactions with Security and Firebase Rules in place, be\r\n * aware that a client needs `.read` access in addition to `.write` access in\r\n * order to perform a transaction. This is because the client-side nature of\r\n * transactions requires the client to read the data in order to transactionally\r\n * update it.\r\n *\r\n * @param ref - The location to atomically modify.\r\n * @param transactionUpdate - A developer-supplied function which will be passed\r\n * the current data stored at this location (as a JavaScript object). The\r\n * function should return the new value it would like written (as a JavaScript\r\n * object). If `undefined` is returned (i.e. you return with no arguments) the\r\n * transaction will be aborted and the data at this location will not be\r\n * modified.\r\n * @param options - An options object to configure transactions.\r\n * @returns A Promise that can optionally be used instead of the onComplete\r\n * callback to handle success and failure.\r\n */\r\nfunction runTransaction(ref, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ntransactionUpdate, options) {\r\n    var _a;\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('Reference.transaction', ref._path);\r\n    if (ref.key === '.length' || ref.key === '.keys') {\r\n        throw ('Reference.transaction failed: ' + ref.key + ' is a read-only object.');\r\n    }\r\n    var applyLocally = (_a = options === null || options === void 0 ? void 0 : options.applyLocally) !== null && _a !== void 0 ? _a : true;\r\n    var deferred = new Deferred();\r\n    var promiseComplete = function (error, committed, node) {\r\n        var dataSnapshot = null;\r\n        if (error) {\r\n            deferred.reject(error);\r\n        }\r\n        else {\r\n            dataSnapshot = new DataSnapshot$1(node, new ReferenceImpl(ref._repo, ref._path), PRIORITY_INDEX);\r\n            deferred.resolve(new TransactionResult$1(committed, dataSnapshot));\r\n        }\r\n    };\r\n    // Add a watch to make sure we get server updates.\r\n    var unwatcher = onValue(ref, function () { });\r\n    repoStartTransaction(ref._repo, ref._path, transactionUpdate, promiseComplete, unwatcher, applyLocally);\r\n    return deferred.promise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    function OnDisconnect(_delegate) {\r\n        this._delegate = _delegate;\r\n    }\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        validateCallback('OnDisconnect.cancel', 'onComplete', onComplete, true);\r\n        var result = this._delegate.cancel();\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateCallback('OnDisconnect.remove', 'onComplete', onComplete, true);\r\n        var result = this._delegate.remove();\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateCallback('OnDisconnect.set', 'onComplete', onComplete, true);\r\n        var result = this._delegate.set(value);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateCallback('OnDisconnect.setWithPriority', 'onComplete', onComplete, true);\r\n        var result = this._delegate.setWithPriority(value, priority);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateCallback('OnDisconnect.update', 'onComplete', onComplete, true);\r\n        var result = this._delegate.update(objectToMerge);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/* eslint-enable @typescript-eslint/no-explicit-any */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    function DataSnapshot(_database, _delegate) {\r\n        this._database = _database;\r\n        this._delegate = _delegate;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this._delegate.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this._delegate.exportVal();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this._delegate.toJSON();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @returns Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return this._delegate.exists();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param path - Path to a child.\r\n     * @returns DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (path) {\r\n        validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        path = String(path);\r\n        validatePathString('DataSnapshot.child', 'path', path, false);\r\n        return new DataSnapshot(this._database, this._delegate.child(path));\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param path - Path to a child.\r\n     * @returns Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (path) {\r\n        validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 'path', path, false);\r\n        return this._delegate.hasChild(path);\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @returns The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        return this._delegate.priority;\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each child.\r\n     * @returns True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        validateCallback('DataSnapshot.forEach', 'action', action, false);\r\n        return this._delegate.forEach(function (expDataSnapshot) {\r\n            return action(new DataSnapshot(_this._database, expDataSnapshot));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @returns True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        return this._delegate.hasChildren();\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this._delegate.key;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @returns The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this._delegate.size;\r\n    };\r\n    /**\r\n     * @returns The Firebase reference for the location this snapshot's data came\r\n     * from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return new Reference(this._database, this._delegate.ref);\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(database, _delegate) {\r\n        this.database = database;\r\n        this._delegate = _delegate;\r\n    }\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        var _this = this;\r\n        var _a;\r\n        validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateCallback('Query.on', 'callback', callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        var valueCallback = function (expSnapshot, previousChildName) {\r\n            callback.call(ret.context, new DataSnapshot(_this.database, expSnapshot), previousChildName);\r\n        };\r\n        valueCallback.userCallback = callback;\r\n        valueCallback.context = ret.context;\r\n        var cancelCallback = (_a = ret.cancel) === null || _a === void 0 ? void 0 : _a.bind(ret.context);\r\n        switch (eventType) {\r\n            case 'value':\r\n                onValue(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_added':\r\n                onChildAdded(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_removed':\r\n                onChildRemoved(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_changed':\r\n                onChildChanged(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_moved':\r\n                onChildMoved(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            default:\r\n                throw new Error(errorPrefix('Query.on', 'eventType') +\r\n                    'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                    '\"child_changed\", or \"child_moved\".');\r\n        }\r\n    };\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', eventType, true);\r\n        validateCallback('Query.off', 'callback', callback, true);\r\n        validateContextObject('Query.off', 'context', context, true);\r\n        if (callback) {\r\n            var valueCallback = function () { };\r\n            valueCallback.userCallback = callback;\r\n            valueCallback.context = context;\r\n            off(this._delegate, eventType, valueCallback);\r\n        }\r\n        else {\r\n            off(this._delegate, eventType);\r\n        }\r\n    };\r\n    /**\r\n     * Get the server-value for this query, or return a cached value if not connected.\r\n     */\r\n    Query.prototype.get = function () {\r\n        var _this = this;\r\n        return get(this._delegate).then(function (expSnapshot) {\r\n            return new DataSnapshot(_this.database, expSnapshot);\r\n        });\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     */\r\n    Query.prototype.once = function (eventType, callback, failureCallbackOrContext, context) {\r\n        var _this = this;\r\n        validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateCallback('Query.once', 'callback', callback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context);\r\n        var deferred = new Deferred();\r\n        var valueCallback = function (expSnapshot, previousChildName) {\r\n            var result = new DataSnapshot(_this.database, expSnapshot);\r\n            if (callback) {\r\n                callback.call(ret.context, result, previousChildName);\r\n            }\r\n            deferred.resolve(result);\r\n        };\r\n        valueCallback.userCallback = callback;\r\n        valueCallback.context = ret.context;\r\n        var cancelCallback = function (error) {\r\n            if (ret.cancel) {\r\n                ret.cancel.call(ret.context, error);\r\n            }\r\n            deferred.reject(error);\r\n        };\r\n        switch (eventType) {\r\n            case 'value':\r\n                onValue(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_added':\r\n                onChildAdded(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_removed':\r\n                onChildRemoved(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_changed':\r\n                onChildChanged(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_moved':\r\n                onChildMoved(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            default:\r\n                throw new Error(errorPrefix('Query.once', 'eventType') +\r\n                    'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                    '\"child_changed\", or \"child_moved\".');\r\n        }\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        return new Query(this.database, query(this._delegate, limitToFirst(limit)));\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        return new Query(this.database, query(this._delegate, limitToLast(limit)));\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByChild(path)));\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByKey()));\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByPriority()));\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByValue()));\r\n    };\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, startAt(value, name)));\r\n    };\r\n    Query.prototype.startAfter = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.startAfter', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, startAfter(value, name)));\r\n    };\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, endAt(value, name)));\r\n    };\r\n    Query.prototype.endBefore = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.endBefore', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, endBefore(value, name)));\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, equalTo(value, name)));\r\n    };\r\n    /**\r\n     * @returns URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this._delegate.toString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this._delegate.toJSON();\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error);\r\n        }\r\n        return this._delegate.isEqual(other._delegate);\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param fnName - The function name (on or once)\r\n     *\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: undefined, context: undefined };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            validateCallback(fnName, 'cancel', ret.cancel, true);\r\n            ret.context = context;\r\n            validateContextObject(fnName, 'context', ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(errorPrefix(fnName, 'cancelOrContext') +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return new Reference(this.database, new ReferenceImpl(this._delegate._repo, this._delegate._path));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\r\nvar Reference = /** @class */ (function (_super) {\r\n    __extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     */\r\n    function Reference(database, _delegate) {\r\n        var _this = _super.call(this, database, new QueryImpl(_delegate._repo, _delegate._path, new QueryParams(), false)) || this;\r\n        _this.database = database;\r\n        _this._delegate = _delegate;\r\n        return _this;\r\n    }\r\n    /** @returns {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        return this._delegate.key;\r\n    };\r\n    Reference.prototype.child = function (pathString) {\r\n        validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        return new Reference(this.database, child(this._delegate, pathString));\r\n    };\r\n    /** @returns {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parent = this._delegate.parent;\r\n        return parent ? new Reference(this.database, parent) : null;\r\n    };\r\n    /** @returns {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        return new Reference(this.database, this._delegate.root);\r\n    };\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateCallback('Reference.set', 'onComplete', onComplete, true);\r\n        var result = set(this._delegate, newVal);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.update = function (values, onComplete) {\r\n        validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        if (Array.isArray(values)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < values.length; ++i) {\r\n                newObjectToMerge['' + i] = values[i];\r\n            }\r\n            values = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateWritablePath('Reference.update', this._delegate._path);\r\n        validateCallback('Reference.update', 'onComplete', onComplete, true);\r\n        var result = update(this._delegate, values);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateCallback('Reference.setWithPriority', 'onComplete', onComplete, true);\r\n        var result = setWithPriority(this._delegate, newVal, newPriority);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.remove = function (onComplete) {\r\n        validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateCallback('Reference.remove', 'onComplete', onComplete, true);\r\n        var result = remove(this._delegate);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        var _this = this;\r\n        validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateCallback('Reference.transaction', 'transactionUpdate', transactionUpdate, false);\r\n        validateCallback('Reference.transaction', 'onComplete', onComplete, true);\r\n        validateBoolean('Reference.transaction', 'applyLocally', applyLocally, true);\r\n        var result = runTransaction(this._delegate, transactionUpdate, {\r\n            applyLocally: applyLocally\r\n        }).then(function (transactionResult) {\r\n            return new TransactionResult(transactionResult.committed, new DataSnapshot(_this.database, transactionResult.snapshot));\r\n        });\r\n        if (onComplete) {\r\n            result.then(function (transactionResult) {\r\n                return onComplete(null, transactionResult.committed, transactionResult.snapshot);\r\n            }, function (error) { return onComplete(error, false, null); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateCallback('Reference.setPriority', 'onComplete', onComplete, true);\r\n        var result = setPriority(this._delegate, priority);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        var _this = this;\r\n        validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateCallback('Reference.push', 'onComplete', onComplete, true);\r\n        var expPromise = push(this._delegate, value);\r\n        var promise = expPromise.then(function (expRef) { return new Reference(_this.database, expRef); });\r\n        if (onComplete) {\r\n            promise.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        var result = new Reference(this.database, expPromise);\r\n        result.then = promise.then.bind(promise);\r\n        result.catch = promise.catch.bind(promise, undefined);\r\n        return result;\r\n    };\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this._delegate._path);\r\n        return new OnDisconnect(new OnDisconnect$1(this._delegate._repo, this._delegate._path));\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     */\r\n    function Database(_delegate, app) {\r\n        var _this = this;\r\n        this._delegate = _delegate;\r\n        this.app = app;\r\n        this.INTERNAL = {\r\n            delete: function () { return _this._delegate._delete(); }\r\n        };\r\n    }\r\n    /**\r\n     * Modify this instance to communicate with the Realtime Database emulator.\r\n     *\r\n     * <p>Note: This method must be called before performing any other operation.\r\n     *\r\n     * @param host - the emulator host (ex: localhost)\r\n     * @param port - the emulator port (ex: 8080)\r\n     * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\r\n     */\r\n    Database.prototype.useEmulator = function (host, port, options) {\r\n        if (options === void 0) { options = {}; }\r\n        useDatabaseEmulator(this._delegate, host, port, options);\r\n    };\r\n    Database.prototype.ref = function (path) {\r\n        validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            var childRef = refFromURL(this._delegate, path.toString());\r\n            return new Reference(this, childRef);\r\n        }\r\n        else {\r\n            var childRef = ref(this._delegate, path);\r\n            return new Reference(this, childRef);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @returns Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        var apiName = 'database.refFromURL';\r\n        validateArgCount(apiName, 1, 1, arguments.length);\r\n        var childRef = refFromURL(this._delegate, url);\r\n        return new Reference(this, childRef);\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        return goOffline(this._delegate);\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        return goOnline(this._delegate);\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: serverTimestamp(),\r\n        increment: function (delta) { return increment(delta); }\r\n    };\r\n    return Database;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    var connection = ref._delegate._repo.persistentConnection_;\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    connection.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    repoStats(ref._delegate._repo, showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    repoStatsIncrementCounter(ref._delegate._repo, metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref._delegate._repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return repoInterceptServerData(ref._delegate._repo, callback);\r\n};\r\n/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n *\r\n * @param app - A valid FirebaseApp-like object\r\n * @param url - A valid Firebase databaseURL\r\n * @param version - custom version e.g. firebase-admin version\r\n * @param customAuthImpl - custom auth implementation\r\n */\r\nfunction initStandalone(_a) {\r\n    var app = _a.app, url = _a.url, version = _a.version, customAuthImpl = _a.customAuthImpl, namespace = _a.namespace, _b = _a.nodeAdmin, nodeAdmin = _b === void 0 ? false : _b;\r\n    setSDKVersion(version);\r\n    /**\r\n     * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n     * any actual function.\r\n     */\r\n    var authProvider = new Provider('auth-internal', new ComponentContainer('database-standalone'));\r\n    authProvider.setComponent(new Component('auth-internal', function () { return customAuthImpl; }, \"PRIVATE\" /* PRIVATE */));\r\n    return {\r\n        instance: new Database(repoManagerDatabaseFromApp(app, authProvider, \r\n        /* appCheckProvider= */ undefined, url, nodeAdmin), app),\r\n        namespace: namespace\r\n    };\r\n}\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData,\n  initStandalone: initStandalone\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        if (hash !== undefined) {\r\n            hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, onComplete, hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\nvar ConnectionTarget = RepoInfo;\r\nvar queryIdentifier = function (query) {\r\n    return query._delegate._queryIdentifier;\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    repoManagerForceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // set SDK_VERSION\r\n    setSDKVersion(instance.SDK_VERSION);\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerComponent(new Component('database', function (container, _a) {\r\n        var url = _a.instanceIdentifier;\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        var authProvider = container.getProvider('auth-internal');\r\n        var appCheckProvider = container.getProvider('app-check-internal');\r\n        return new Database(repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url), app);\r\n    }, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(\r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        DataSnapshot: DataSnapshot,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    })\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n    if (isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexport { DataSnapshot, Database, OnDisconnect, Query, Reference, ServerValue, enableLogging, registerDatabase };\n//# sourceMappingURL=index.esm.js.map\n"],"sourceRoot":""}